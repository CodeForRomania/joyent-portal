// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders <List /> without throwing 1`] = `
.c12 {
  font-family: sans-serif;
  font-size: 100%;
  line-height: 1.15;
  margin: 0;
  overflow: visible;
  text-transform: none;
  -webkit-appearance: button;
  -moz-appearance: button;
  appearance: button;
  min-width: 7.5rem;
}

.c12::-moz-focus-inner,
.c12[type='button']::-moz-focus-inner,
.c12[type='reset']::-moz-focus-inner,
.c12[type='submit']::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

.c12:-moz-focusring,
.c12[type='button']:-moz-focusring,
.c12[type='reset']:-moz-focusring,
.c12[type='submit']:-moz-focusring {
  outline: 0.0625rem dotted ButtonText;
}

.c12 + button {
  margin-left: 0.375rem;
}

.c11 {
  display: inline-block;
}

.c10 {
  box-sizing: border-box;
  display: inline-block;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-height: 3rem;
  height: 3rem;
  min-width: 7.5rem;
  margin-bottom: 0.5rem;
  margin-top: 0.5rem;
  padding: 0.9375rem 1.125rem;
  position: relative;
  font-size: 0.9375rem;
  text-align: center;
  font-style: normal;
  font-stretch: normal;
  line-height: normal;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  text-decoration: none;
  white-space: nowrap;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  color: rgb(255,255,255);
  -webkit-text-fill-color: currentcolor;
  background-image: none;
  background-color: rgb(59,70,204);
  border-radius: 0.25rem;
  border: solid 0.0625rem rgb(45,56,132);
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 100%;
  max-width: 100%;
}

.c10:focus {
  outline: 0;
  text-decoration: none;
  background-color: rgb(59,70,204);
  border-color: rgb(45,56,132);
}

.c10:hover {
  background-color: rgb(72,83,217);
  border: solid 0.0625rem rgb(45,56,132);
}

.c10:active,
.c10:active:hover,
.c10:active:focus {
  background-image: none;
  outline: 0;
  background-color: rgb(45,56,132);
  border-color: rgb(45,56,132);
}

.c10[disabled] {
  cursor: not-allowed;
  pointer-events: none;
}

.c10 svg + span {
  margin-left: 0.75rem;
}

.c10 svg {
  max-height: 1.125rem;
}

.c2 {
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 0 1 auto;
  -ms-flex: 0 1 auto;
  flex: 0 1 auto;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-right: -0.5rem;
  margin-left: -0.5rem;
}

.c4 {
  box-sizing: border-box;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  padding-right: 0.5rem;
  padding-left: 0.5rem;
}

.c8 {
  box-sizing: border-box;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  padding-right: 0.5rem;
  padding-left: 0.5rem;
}

.c0 {
  margin-right: auto;
  margin-left: auto;
  box-sizing: border-box;
  width: 100%;
  max-width: 62.5rem;
  padding-bottom: 1.125rem;
}

.c1 {
  background-color: rgb(216,216,216);
  margin: 0;
  background-color: transparent;
  height: 1.875rem;
}

.c3 {
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 0 1 auto;
  -ms-flex: 0 1 auto;
  flex: 0 1 auto;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-right: -0.5rem;
  margin-left: -0.5rem;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
}

.c26 {
  margin-bottom: 0.125rem;
  margin-left: 0.5625rem;
}

.c23 {
  font-family: sans-serif;
  font-size: 100%;
  line-height: 1.15;
  margin: 0;
  overflow: visible;
  display: none;
}

.c23[type='checkbox'],
.c23[type='radio'] {
  box-sizing: border-box;
  padding: 0;
}

.c23[type='number']::-webkit-inner-spin-button,
.c23[type='number']::-webkit-outer-spin-button {
  height: auto;
}

.c23[type='search'] {
  -webkit-appearance: textfield;
  -moz-appearance: textfield;
  appearance: textfield;
  outline-offset: -0.125rem;
}

.c23[type='search']::-webkit-search-cancel-button,
.c23[type='search']::-webkit-search-decoration {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.c23::-webkit-file-upload-button {
  -webkit-appearance: button;
  -moz-appearance: button;
  appearance: button;
  font: inherit;
}

.c23:checked + label::after {
  opacity: 1;
}

.c23:selected + label::after {
  opacity: 1;
}

.c23:checked + label {
  border-color: rgb(59,70,204);
}

.c23:selected + label {
  border-color: rgb(59,70,204);
}

.c23:disabled + label {
  background-color: rgb(249,249,249);
  cursor: not-allowed;
}

.c24 {
  color: rgb(100,100,100);
  position: absolute;
  width: 1.125rem;
  height: 1.125rem;
  box-sizing: border-box;
  top: 0;
  right: 0;
  cursor: pointer;
  background-color: rgb(255,255,255);
  box-shadow: none;
  border: 0.0625rem solid rgb(216,216,216);
  cursor: pointer;
  border-radius: 0.25rem;
  width: 1.125rem;
  height: 1.125rem;
}

.c24::after {
  opacity: 0;
  content: '';
  position: absolute;
  width: 0.375rem;
  height: 0.125rem;
  background: transparent;
  top: 0.3125rem;
  left: 0.25rem;
  border: 0.125rem solid rgb(45,45,45);
  border-top: none;
  border-right: none;
  -webkit-transform: rotate(-45deg);
  -ms-transform: rotate(-45deg);
  transform: rotate(-45deg);
}

.c22 {
  display: inline-block;
  vertical-align: text-bottom;
  width: 1.125rem;
  height: 1.125rem;
  position: relative;
  cursor: pointer;
}

.c21 {
  list-style-type: none;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c21 label {
  font-weight: 400;
}

.c5 {
  display: inline-block;
  margin: 0;
  padding: 0;
  border: none;
  overflow: hidden;
  height: auto;
  -webkit-margin-start: 0;
  -webkit-margin-end: 0;
  -webkit-padding-before: 0;
  -webkit-padding-start: 0;
  -webkit-padding-end: 0;
  -webkit-padding-after: 0;
  width: 100%;
}

.c9 {
  display: inline-block;
  margin: 0;
  padding: 0;
  border: none;
  overflow: hidden;
  height: auto;
  -webkit-margin-start: 0;
  -webkit-margin-end: 0;
  -webkit-padding-before: 0;
  -webkit-padding-start: 0;
  -webkit-padding-end: 0;
  -webkit-padding-after: 0;
  float: right;
}

.c20 {
  display: inline-block;
  margin: 0;
  padding: 0;
  border: none;
  overflow: hidden;
  height: auto;
  -webkit-margin-start: 0;
  -webkit-margin-end: 0;
  -webkit-padding-before: 0;
  -webkit-padding-start: 0;
  -webkit-padding-end: 0;
  -webkit-padding-after: 0;
}

.c19 {
  padding-top: 0.25rem;
}

.c18 {
  padding-top: 0.25rem;
}

.c7 {
  box-sizing: border-box;
  width: 18.75rem;
  height: 3rem;
  min-height: 3rem;
  margin-bottom: 0.5rem;
  margin-top: 0.5rem;
  padding: 0.8125rem 1.125rem;
  border-radius: 0.25rem;
  background-color: rgb(255,255,255);
  border: 0.0625rem solid rgb(216,216,216);
  color: rgba(73,73,73,1);
  width: 100%;
  text-overflow: ellipsis;
  font-size: 0.9375rem;
  line-height: normal !important;
  font-style: normal;
  font-stretch: normal;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  outline: 0;
}

.c7::-webkit-input-placeholder {
  color: rgba(73,73,73,0.5);
}

.c7::-moz-placeholder {
  color: rgba(73,73,73,0.5);
}

.c7:-ms-input-placeholder {
  color: rgba(73,73,73,0.5);
}

.c7:invalid {
  box-shadow: none;
}

.c7:disabled {
  background-color: rgb(250,250,250);
  color: rgb(216,216,216);
  cursor: not-allowed;
}

.c7:disabled::-webkit-input-placeholder {
  color: rgba(73,73,73,0.5);
}

.c7:disabled::-moz-placeholder {
  color: rgba(73,73,73,0.5);
}

.c7:disabled:-ms-input-placeholder {
  color: rgba(73,73,73,0.5);
}

.c7:focus {
  border-color: rgb(59,70,204);
  outline: 0;
}

.c6 {
  font-size: 0.9375rem;
  font-style: normal;
  font-stretch: normal;
  display: block;
  color: rgb(70,70,70);
  text-align: left;
  margin-right: 0.75rem;
  font-weight: bold;
  white-space: pre;
  font-size: 0.8125rem;
}

.c13 {
  overflow: hidden;
  border-spacing: 0;
  border-collapse: separate;
  table-layout: fixed;
  width: 100%;
  max-width: 100%;
}

.c14 {
  width: 100%;
  background: rgb(250,250,250);
}

.c14 th:first-child {
  border-top-left-radius: 0.25rem;
}

.c14 th:last-child {
  border-top-right-radius: 0.25rem;
}

.c32 {
  width: 100%;
}

.c32 tr:first-child td {
  border-top: none;
}

.c17 {
  border-width: 0.0625rem;
  border-style: solid;
  border-color: rgb(216,216,216);
  border-spacing: 0;
  white-space: nowrap;
  box-sizing: border-box;
  padding: 0 1.5rem;
  height: 3.75rem;
  width: 2rem;
  display: table-cell;
  vertical-align: middle;
  text-align: left;
  height: 2.625rem;
  color: rgb(189,189,189);
  font-weight: 500;
}

.c17:not(:first-child) {
  border-left-width: 0;
}

.c17:not(:last-child) {
  border-right-width: 0;
}

.c25 {
  border-width: 0.0625rem;
  border-style: solid;
  border-color: rgb(216,216,216);
  border-spacing: 0;
  white-space: nowrap;
  box-sizing: border-box;
  padding: 0 1.5rem;
  height: 3.75rem;
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  vertical-align: middle;
  text-align: left;
  height: 2.625rem;
  color: rgb(189,189,189);
  font-weight: 500;
  color: rgba(73,73,73,1);
  font-weight: bold;
}

.c25:not(:first-child) {
  border-left-width: 0;
}

.c25:not(:last-child) {
  border-right-width: 0;
}

.c27 {
  border-width: 0.0625rem;
  border-style: solid;
  border-color: rgb(216,216,216);
  border-spacing: 0;
  white-space: nowrap;
  box-sizing: border-box;
  padding: 0 1.5rem;
  height: 3.75rem;
  width: 9.375rem;
  display: table-cell;
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  vertical-align: middle;
  text-align: left;
  height: 2.625rem;
  color: rgb(189,189,189);
  font-weight: 500;
}

.c27:not(:first-child) {
  border-left-width: 0;
}

.c27:not(:last-child) {
  border-right-width: 0;
}

.c28 {
  border-width: 0.0625rem;
  border-style: solid;
  border-color: rgb(216,216,216);
  border-spacing: 0;
  white-space: nowrap;
  box-sizing: border-box;
  padding: 0 1.5rem;
  height: 3.75rem;
  width: 0rem;
  display: none;
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  vertical-align: middle;
  text-align: left;
  height: 2.625rem;
  color: rgb(189,189,189);
  font-weight: 500;
}

.c28:not(:first-child) {
  border-left-width: 0;
}

.c28:not(:last-child) {
  border-right-width: 0;
}

.c29 {
  border-width: 0.0625rem;
  border-style: solid;
  border-color: rgb(216,216,216);
  border-spacing: 0;
  white-space: nowrap;
  box-sizing: border-box;
  padding: 0 1.5rem;
  height: 3.75rem;
  width: 0rem;
  display: none;
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  vertical-align: middle;
  text-align: left;
  height: 2.625rem;
  color: rgb(189,189,189);
  font-weight: 500;
}

.c29:not(:first-child) {
  border-left-width: 0;
}

.c29:not(:last-child) {
  border-right-width: 0;
}

.c31 {
  border-width: 0.0625rem;
  border-style: solid;
  border-color: rgb(216,216,216);
  border-spacing: 0;
  white-space: nowrap;
  box-sizing: border-box;
  padding: 0 1.5rem;
  height: 3.75rem;
  width: 3.75rem;
  display: table-cell;
  height: 2.625rem;
  color: rgb(189,189,189);
  font-weight: 500;
}

.c31:not(:first-child) {
  border-left-width: 0;
}

.c31:not(:last-child) {
  border-right-width: 0;
}

.c15 {
  display: table-row;
  color: rgba(73,73,73,1);
  background-color: rgb(255,255,255);
  box-shadow: 0 0.125rem 0 rgba(0,0,0,0.05);
  box-sizing: border-box;
  color: rgba(73,73,73,1);
  background-color: transparent;
  border: none;
  box-shadow: none;
}

.c15:last-child {
  box-shadow: none;
}

.c15:last-child td {
  border-bottom-width: 0.0625rem;
}

.c16 {
  padding: 0rem;
  padding-left: 0.75rem;
}

.c30 {
  padding: 0rem;
}

@media only screen and (min-width:0em) {
  .c4 {
    -webkit-flex-basis: 58.333333333333336%;
    -ms-flex-preferred-size: 58.333333333333336%;
    flex-basis: 58.333333333333336%;
    max-width: 58.333333333333336%;
    display: block;
  }
}

@media only screen and (min-width:48em) {
  .c4 {
    -webkit-flex-basis: 41.66666666666667%;
    -ms-flex-preferred-size: 41.66666666666667%;
    flex-basis: 41.66666666666667%;
    max-width: 41.66666666666667%;
    display: block;
  }
}

@media only screen and (min-width:0em) {
  .c8 {
    -webkit-flex-basis: 41.66666666666667%;
    -ms-flex-preferred-size: 41.66666666666667%;
    flex-basis: 41.66666666666667%;
    max-width: 41.66666666666667%;
    display: block;
  }
}

@media only screen and (min-width:48em) {
  .c8 {
    -webkit-flex-basis: 58.333333333333336%;
    -ms-flex-preferred-size: 58.333333333333336%;
    flex-basis: 58.333333333333336%;
    max-width: 58.333333333333336%;
    display: block;
  }
}

@media only screen and (min-width:48em) {
  .c0 {
    width: 46rem;
  }
}

@media only screen and (min-width:64em) {
  .c0 {
    width: 61rem;
  }
}

@media only screen and (min-width:75em) {
  .c0 {
    width: 76rem;
  }
}

@media only screen and (max-width:47.9375rem) {
  .c0 {
    padding-left: 0.375rem;
    padding-right: 0.375rem;
  }
}

@media only screen and (min-width:47.9375rem) {
  .c28 {
    width: 10rem;
    display: table-cell;
  }
}

@media only screen and (min-width:47.9375rem) {
  .c29 {
    width: 8.125rem;
    display: table-cell;
  }
}

<div
  className="c0"
>
  <div
    className="c1 c2"
    height="1.875rem"
  />
  <form
    onSubmit={undefined}
  >
    <div
      className="c3"
    >
      <div
        className="c4"
      >
        <div
          className="c5"
          name="filter"
          role="group"
          style={undefined}
        >
          <label
            className="c6"
            htmlFor="Y"
          >
            Filter instances
          </label>
          <input
            className="c7"
            disabled={false}
            id="Y"
            placeholder="Search for name, state, tags, etc..."
          />
        </div>
      </div>
      <div
        className="c8"
      >
        <div
          className="c9"
          role="group"
          style={undefined}
        >
          <label
            className="c6"
            htmlFor="a"
          >
            ⁣
          </label>
          <button
            className="c10 c11 c12"
            disabled={false}
            href=""
            icon={true}
            onClick={[Function]}
            type="button"
          >
            Create Instance
          </button>
        </div>
      </div>
    </div>
  </form>
  <form>
    <table
      className="c13"
    >
      <thead
        className="c14"
        disabled={undefined}
        name="thdead"
        selected={undefined}
      >
        <tr
          className="c15"
          disabled={undefined}
          name="tr"
          selected={undefined}
        >
          <th
            className="c16 c17"
            disabled={undefined}
            name="th"
            selected={undefined}
          >
            <div
              className="c18 c19 c20"
              role="group"
              style={undefined}
            >
              <li
                className="c21"
              >
                <div
                  checked={0}
                  className="c22"
                  disabled={false}
                  id="bc"
                  onChange={[Function]}
                  type="checkbox"
                >
                  <input
                    checked={false}
                    className="c23"
                    disabled={false}
                    id="bd"
                    onChange={[Function]}
                    type="checkbox"
                  />
                  <label
                    className="c24"
                    htmlFor="bd"
                  />
                </div>
              </li>
            </div>
          </th>
          <th
            className="c25"
            disabled={undefined}
            name="th"
            onClick={[Function]}
            selected={undefined}
          >
            <span>
              Name 
            </span>
            <svg
              className="c26"
              height="6"
              marginBottom="0.125rem"
              marginLeft="0.5625rem"
              style={
                Object {
                  "transform": "rotate(180deg)",
                }
              }
              viewBox="0 0 9 6"
              width="9"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M9 1.386L7.648 0 4.5 3.228 1.352 0 0 1.386 4.5 6z"
                fill="rgba(73, 73, 73, 1)"
                fillRule="evenodd"
              />
            </svg>
          </th>
          <th
            className="c27"
            disabled={undefined}
            name="th"
            onClick={[Function]}
            selected={undefined}
          >
            <span>
              Status 
            </span>
          </th>
          <th
            className="c28"
            disabled={undefined}
            name="th"
            onClick={[Function]}
            selected={undefined}
          >
            <span>
              Created 
            </span>
          </th>
          <th
            className="c29"
            disabled={undefined}
            name="th"
            onClick={[Function]}
            selected={undefined}
          >
            <span>
              Short ID 
            </span>
          </th>
          <th
            className="c30 c31"
            disabled={undefined}
            name="th"
            selected={undefined}
          />
        </tr>
      </thead>
      <tbody
        className="c32"
        disabled={undefined}
        name="tbody"
        selected={undefined}
      />
    </table>
  </form>
</div>
`;

exports[`renders <List error /> without throwing 1`] = `
.c17 {
  color: rgba(73,73,73,1);
  line-height: 1.5rem;
  font-size: 0.9375rem;
  margin: 0;
}

.c17 + p,
.c17 + small,
.c17 + h1,
.c17 + h2,
.c17 + label,
.c17 + h3,
.c17 + h4,
.c17 + h5,
.c17 + div,
.c17 + span {
  padding-bottom: 2.25rem;
}

.c12 {
  font-family: sans-serif;
  font-size: 100%;
  line-height: 1.15;
  margin: 0;
  overflow: visible;
  text-transform: none;
  -webkit-appearance: button;
  -moz-appearance: button;
  appearance: button;
  min-width: 7.5rem;
}

.c12::-moz-focus-inner,
.c12[type='button']::-moz-focus-inner,
.c12[type='reset']::-moz-focus-inner,
.c12[type='submit']::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

.c12:-moz-focusring,
.c12[type='button']:-moz-focusring,
.c12[type='reset']:-moz-focusring,
.c12[type='submit']:-moz-focusring {
  outline: 0.0625rem dotted ButtonText;
}

.c12 + button {
  margin-left: 0.375rem;
}

.c11 {
  display: inline-block;
}

.c10 {
  box-sizing: border-box;
  display: inline-block;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-height: 3rem;
  height: 3rem;
  min-width: 7.5rem;
  margin-bottom: 0.5rem;
  margin-top: 0.5rem;
  padding: 0.9375rem 1.125rem;
  position: relative;
  font-size: 0.9375rem;
  text-align: center;
  font-style: normal;
  font-stretch: normal;
  line-height: normal;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  text-decoration: none;
  white-space: nowrap;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  color: rgb(255,255,255);
  -webkit-text-fill-color: currentcolor;
  background-image: none;
  background-color: rgb(59,70,204);
  border-radius: 0.25rem;
  border: solid 0.0625rem rgb(45,56,132);
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 100%;
  max-width: 100%;
}

.c10:focus {
  outline: 0;
  text-decoration: none;
  background-color: rgb(59,70,204);
  border-color: rgb(45,56,132);
}

.c10:hover {
  background-color: rgb(72,83,217);
  border: solid 0.0625rem rgb(45,56,132);
}

.c10:active,
.c10:active:hover,
.c10:active:focus {
  background-image: none;
  outline: 0;
  background-color: rgb(45,56,132);
  border-color: rgb(45,56,132);
}

.c10[disabled] {
  cursor: not-allowed;
  pointer-events: none;
}

.c10 svg + span {
  margin-left: 0.75rem;
}

.c10 svg {
  max-height: 1.125rem;
}

.c2 {
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 0 1 auto;
  -ms-flex: 0 1 auto;
  flex: 0 1 auto;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-right: -0.5rem;
  margin-left: -0.5rem;
}

.c4 {
  box-sizing: border-box;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  padding-right: 0.5rem;
  padding-left: 0.5rem;
}

.c8 {
  box-sizing: border-box;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  padding-right: 0.5rem;
  padding-left: 0.5rem;
}

.c0 {
  margin-right: auto;
  margin-left: auto;
  box-sizing: border-box;
  width: 100%;
  max-width: 62.5rem;
  padding-bottom: 1.125rem;
}

.c16 {
  color: rgba(73,73,73,1);
  font-weight: 600;
  line-height: 1.5rem;
  font-size: 0.9375rem;
  margin: 0;
}

.c16 + p,
.c16 + small,
.c16 + h1,
.c16 + h2,
.c16 + label,
.c16 + h3,
.c16 + h4,
.c16 + h5,
.c16 + div,
.c16 + span {
  margin-top: 0.75rem;
}

.c1 {
  background-color: rgb(216,216,216);
  margin: 0;
  background-color: transparent;
  height: 1.875rem;
}

.c3 {
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 0 1 auto;
  -ms-flex: 0 1 auto;
  flex: 0 1 auto;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-right: -0.5rem;
  margin-left: -0.5rem;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
}

.c32 {
  margin-bottom: 0.125rem;
  margin-left: 0.5625rem;
}

.c29 {
  font-family: sans-serif;
  font-size: 100%;
  line-height: 1.15;
  margin: 0;
  overflow: visible;
  display: none;
}

.c29[type='checkbox'],
.c29[type='radio'] {
  box-sizing: border-box;
  padding: 0;
}

.c29[type='number']::-webkit-inner-spin-button,
.c29[type='number']::-webkit-outer-spin-button {
  height: auto;
}

.c29[type='search'] {
  -webkit-appearance: textfield;
  -moz-appearance: textfield;
  appearance: textfield;
  outline-offset: -0.125rem;
}

.c29[type='search']::-webkit-search-cancel-button,
.c29[type='search']::-webkit-search-decoration {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.c29::-webkit-file-upload-button {
  -webkit-appearance: button;
  -moz-appearance: button;
  appearance: button;
  font: inherit;
}

.c29:checked + label::after {
  opacity: 1;
}

.c29:selected + label::after {
  opacity: 1;
}

.c29:checked + label {
  border-color: rgb(59,70,204);
}

.c29:selected + label {
  border-color: rgb(59,70,204);
}

.c29:disabled + label {
  background-color: rgb(249,249,249);
  cursor: not-allowed;
}

.c30 {
  color: rgb(100,100,100);
  position: absolute;
  width: 1.125rem;
  height: 1.125rem;
  box-sizing: border-box;
  top: 0;
  right: 0;
  cursor: pointer;
  background-color: rgb(255,255,255);
  box-shadow: none;
  border: 0.0625rem solid rgb(216,216,216);
  cursor: pointer;
  border-radius: 0.25rem;
  width: 1.125rem;
  height: 1.125rem;
}

.c30::after {
  opacity: 0;
  content: '';
  position: absolute;
  width: 0.375rem;
  height: 0.125rem;
  background: transparent;
  top: 0.3125rem;
  left: 0.25rem;
  border: 0.125rem solid rgb(45,45,45);
  border-top: none;
  border-right: none;
  -webkit-transform: rotate(-45deg);
  -ms-transform: rotate(-45deg);
  transform: rotate(-45deg);
}

.c28 {
  display: inline-block;
  vertical-align: text-bottom;
  width: 1.125rem;
  height: 1.125rem;
  position: relative;
  cursor: pointer;
}

.c27 {
  list-style-type: none;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c27 label {
  font-weight: 400;
}

.c5 {
  display: inline-block;
  margin: 0;
  padding: 0;
  border: none;
  overflow: hidden;
  height: auto;
  -webkit-margin-start: 0;
  -webkit-margin-end: 0;
  -webkit-padding-before: 0;
  -webkit-padding-start: 0;
  -webkit-padding-end: 0;
  -webkit-padding-after: 0;
  width: 100%;
}

.c9 {
  display: inline-block;
  margin: 0;
  padding: 0;
  border: none;
  overflow: hidden;
  height: auto;
  -webkit-margin-start: 0;
  -webkit-margin-end: 0;
  -webkit-padding-before: 0;
  -webkit-padding-start: 0;
  -webkit-padding-end: 0;
  -webkit-padding-after: 0;
  float: right;
}

.c26 {
  display: inline-block;
  margin: 0;
  padding: 0;
  border: none;
  overflow: hidden;
  height: auto;
  -webkit-margin-start: 0;
  -webkit-margin-end: 0;
  -webkit-padding-before: 0;
  -webkit-padding-start: 0;
  -webkit-padding-end: 0;
  -webkit-padding-after: 0;
}

.c25 {
  padding-top: 0.25rem;
}

.c24 {
  padding-top: 0.25rem;
}

.c7 {
  box-sizing: border-box;
  width: 18.75rem;
  height: 3rem;
  min-height: 3rem;
  margin-bottom: 0.5rem;
  margin-top: 0.5rem;
  padding: 0.8125rem 1.125rem;
  border-radius: 0.25rem;
  background-color: rgb(255,255,255);
  border: 0.0625rem solid rgb(216,216,216);
  color: rgba(73,73,73,1);
  width: 100%;
  text-overflow: ellipsis;
  font-size: 0.9375rem;
  line-height: normal !important;
  font-style: normal;
  font-stretch: normal;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  outline: 0;
}

.c7::-webkit-input-placeholder {
  color: rgba(73,73,73,0.5);
}

.c7::-moz-placeholder {
  color: rgba(73,73,73,0.5);
}

.c7:-ms-input-placeholder {
  color: rgba(73,73,73,0.5);
}

.c7:invalid {
  box-shadow: none;
}

.c7:disabled {
  background-color: rgb(250,250,250);
  color: rgb(216,216,216);
  cursor: not-allowed;
}

.c7:disabled::-webkit-input-placeholder {
  color: rgba(73,73,73,0.5);
}

.c7:disabled::-moz-placeholder {
  color: rgba(73,73,73,0.5);
}

.c7:disabled:-ms-input-placeholder {
  color: rgba(73,73,73,0.5);
}

.c7:focus {
  border-color: rgb(59,70,204);
  outline: 0;
}

.c6 {
  font-size: 0.9375rem;
  font-style: normal;
  font-stretch: normal;
  display: block;
  color: rgb(70,70,70);
  text-align: left;
  margin-right: 0.75rem;
  font-weight: bold;
  white-space: pre;
  font-size: 0.8125rem;
}

.c13 {
  position: relative;
  margin-bottom: 0.75rem;
  background-color: rgb(255,255,255);
  box-shadow: 0 0.125rem 0 0 rgba(0,0,0,0.05);
  border: 0.0625rem solid rgb(216,216,216);
  width: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c14 {
  min-width: 2.25rem;
  margin-right: 1.125rem;
  min-height: 100%;
  background-color: rgb(0,152,88);
  background-color: rgb(210,67,58);
}

.c15 {
  padding: 0.75rem 0 0.84375rem 0;
}

.c18 {
  position: absolute;
  right: 0.1875rem;
  margin: 0;
}

.c19 {
  overflow: hidden;
  border-spacing: 0;
  border-collapse: separate;
  table-layout: fixed;
  width: 100%;
  max-width: 100%;
}

.c20 {
  width: 100%;
  background: rgb(250,250,250);
}

.c20 th:first-child {
  border-top-left-radius: 0.25rem;
}

.c20 th:last-child {
  border-top-right-radius: 0.25rem;
}

.c38 {
  width: 100%;
}

.c38 tr:first-child td {
  border-top: none;
}

.c23 {
  border-width: 0.0625rem;
  border-style: solid;
  border-color: rgb(216,216,216);
  border-spacing: 0;
  white-space: nowrap;
  box-sizing: border-box;
  padding: 0 1.5rem;
  height: 3.75rem;
  width: 2rem;
  display: table-cell;
  vertical-align: middle;
  text-align: left;
  height: 2.625rem;
  color: rgb(189,189,189);
  font-weight: 500;
}

.c23:not(:first-child) {
  border-left-width: 0;
}

.c23:not(:last-child) {
  border-right-width: 0;
}

.c31 {
  border-width: 0.0625rem;
  border-style: solid;
  border-color: rgb(216,216,216);
  border-spacing: 0;
  white-space: nowrap;
  box-sizing: border-box;
  padding: 0 1.5rem;
  height: 3.75rem;
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  vertical-align: middle;
  text-align: left;
  height: 2.625rem;
  color: rgb(189,189,189);
  font-weight: 500;
  color: rgba(73,73,73,1);
  font-weight: bold;
}

.c31:not(:first-child) {
  border-left-width: 0;
}

.c31:not(:last-child) {
  border-right-width: 0;
}

.c33 {
  border-width: 0.0625rem;
  border-style: solid;
  border-color: rgb(216,216,216);
  border-spacing: 0;
  white-space: nowrap;
  box-sizing: border-box;
  padding: 0 1.5rem;
  height: 3.75rem;
  width: 9.375rem;
  display: table-cell;
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  vertical-align: middle;
  text-align: left;
  height: 2.625rem;
  color: rgb(189,189,189);
  font-weight: 500;
}

.c33:not(:first-child) {
  border-left-width: 0;
}

.c33:not(:last-child) {
  border-right-width: 0;
}

.c34 {
  border-width: 0.0625rem;
  border-style: solid;
  border-color: rgb(216,216,216);
  border-spacing: 0;
  white-space: nowrap;
  box-sizing: border-box;
  padding: 0 1.5rem;
  height: 3.75rem;
  width: 0rem;
  display: none;
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  vertical-align: middle;
  text-align: left;
  height: 2.625rem;
  color: rgb(189,189,189);
  font-weight: 500;
}

.c34:not(:first-child) {
  border-left-width: 0;
}

.c34:not(:last-child) {
  border-right-width: 0;
}

.c35 {
  border-width: 0.0625rem;
  border-style: solid;
  border-color: rgb(216,216,216);
  border-spacing: 0;
  white-space: nowrap;
  box-sizing: border-box;
  padding: 0 1.5rem;
  height: 3.75rem;
  width: 0rem;
  display: none;
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  vertical-align: middle;
  text-align: left;
  height: 2.625rem;
  color: rgb(189,189,189);
  font-weight: 500;
}

.c35:not(:first-child) {
  border-left-width: 0;
}

.c35:not(:last-child) {
  border-right-width: 0;
}

.c37 {
  border-width: 0.0625rem;
  border-style: solid;
  border-color: rgb(216,216,216);
  border-spacing: 0;
  white-space: nowrap;
  box-sizing: border-box;
  padding: 0 1.5rem;
  height: 3.75rem;
  width: 3.75rem;
  display: table-cell;
  height: 2.625rem;
  color: rgb(189,189,189);
  font-weight: 500;
}

.c37:not(:first-child) {
  border-left-width: 0;
}

.c37:not(:last-child) {
  border-right-width: 0;
}

.c21 {
  display: table-row;
  color: rgba(73,73,73,1);
  background-color: rgb(255,255,255);
  box-shadow: 0 0.125rem 0 rgba(0,0,0,0.05);
  box-sizing: border-box;
  color: rgba(73,73,73,1);
  background-color: transparent;
  border: none;
  box-shadow: none;
}

.c21:last-child {
  box-shadow: none;
}

.c21:last-child td {
  border-bottom-width: 0.0625rem;
}

.c22 {
  padding: 0rem;
  padding-left: 0.75rem;
}

.c36 {
  padding: 0rem;
}

@media only screen and (min-width:0em) {
  .c4 {
    -webkit-flex-basis: 58.333333333333336%;
    -ms-flex-preferred-size: 58.333333333333336%;
    flex-basis: 58.333333333333336%;
    max-width: 58.333333333333336%;
    display: block;
  }
}

@media only screen and (min-width:48em) {
  .c4 {
    -webkit-flex-basis: 41.66666666666667%;
    -ms-flex-preferred-size: 41.66666666666667%;
    flex-basis: 41.66666666666667%;
    max-width: 41.66666666666667%;
    display: block;
  }
}

@media only screen and (min-width:0em) {
  .c8 {
    -webkit-flex-basis: 41.66666666666667%;
    -ms-flex-preferred-size: 41.66666666666667%;
    flex-basis: 41.66666666666667%;
    max-width: 41.66666666666667%;
    display: block;
  }
}

@media only screen and (min-width:48em) {
  .c8 {
    -webkit-flex-basis: 58.333333333333336%;
    -ms-flex-preferred-size: 58.333333333333336%;
    flex-basis: 58.333333333333336%;
    max-width: 58.333333333333336%;
    display: block;
  }
}

@media only screen and (min-width:48em) {
  .c0 {
    width: 46rem;
  }
}

@media only screen and (min-width:64em) {
  .c0 {
    width: 61rem;
  }
}

@media only screen and (min-width:75em) {
  .c0 {
    width: 76rem;
  }
}

@media only screen and (max-width:47.9375rem) {
  .c0 {
    padding-left: 0.375rem;
    padding-right: 0.375rem;
  }
}

@media only screen and (min-width:47.9375rem) {
  .c34 {
    width: 10rem;
    display: table-cell;
  }
}

@media only screen and (min-width:47.9375rem) {
  .c35 {
    width: 8.125rem;
    display: table-cell;
  }
}

<div
  className="c0"
>
  <div
    className="c1 c2"
    height="1.875rem"
  />
  <form
    onSubmit={undefined}
  >
    <div
      className="c3"
    >
      <div
        className="c4"
      >
        <div
          className="c5"
          name="filter"
          role="group"
          style={undefined}
        >
          <label
            className="c6"
            htmlFor="bh"
          >
            Filter instances
          </label>
          <input
            className="c7"
            disabled={false}
            id="bh"
            placeholder="Search for name, state, tags, etc..."
          />
        </div>
      </div>
      <div
        className="c8"
      >
        <div
          className="c9"
          role="group"
          style={undefined}
        >
          <label
            className="c6"
            htmlFor="bj"
          >
            ⁣
          </label>
          <button
            className="c10 c11 c12"
            disabled={false}
            href=""
            icon={true}
            onClick={[Function]}
            type="button"
          >
            Create Instance
          </button>
        </div>
      </div>
    </div>
  </form>
  <div
    className="c13"
  >
    <div
      className="c14"
    />
    <div
      className="c15"
    >
      <h4
        className="c16"
      >
        Ooops!
      </h4>
      <p
        className="c17"
      >
        An error occurred while loading your instances
      </p>
    </div>
    <svg
      className="c18 "
      height="12"
      onClick={[Function]}
      style={
        Object {
          "transform": "rotate(0deg)",
        }
      }
      viewBox="0 0 12 12"
      width="12"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M7.314 5.9l4.242-4.243L10.142.243 5.9 4.485 1.657.243.243 1.657l4.242 4.242-4.242 4.243 1.414 1.414 4.242-4.242 4.243 4.242 1.414-1.414L7.314 5.9z"
        fill="rgba(73, 73, 73, 1)"
        fillRule="evenodd"
      />
    </svg>
  </div>
  <form>
    <table
      className="c19"
    >
      <thead
        className="c20"
        disabled={undefined}
        name="thdead"
        selected={undefined}
      >
        <tr
          className="c21"
          disabled={undefined}
          name="tr"
          selected={undefined}
        >
          <th
            className="c22 c23"
            disabled={undefined}
            name="th"
            selected={undefined}
          >
            <div
              className="c24 c25 c26"
              role="group"
              style={undefined}
            >
              <li
                className="c27"
              >
                <div
                  checked={0}
                  className="c28"
                  disabled={false}
                  id="bl"
                  onChange={[Function]}
                  type="checkbox"
                >
                  <input
                    checked={false}
                    className="c29"
                    disabled={false}
                    id="bm"
                    onChange={[Function]}
                    type="checkbox"
                  />
                  <label
                    className="c30"
                    htmlFor="bm"
                  />
                </div>
              </li>
            </div>
          </th>
          <th
            className="c31"
            disabled={undefined}
            name="th"
            onClick={[Function]}
            selected={undefined}
          >
            <span>
              Name 
            </span>
            <svg
              className="c32"
              height="6"
              marginBottom="0.125rem"
              marginLeft="0.5625rem"
              style={
                Object {
                  "transform": "rotate(180deg)",
                }
              }
              viewBox="0 0 9 6"
              width="9"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M9 1.386L7.648 0 4.5 3.228 1.352 0 0 1.386 4.5 6z"
                fill="rgba(73, 73, 73, 1)"
                fillRule="evenodd"
              />
            </svg>
          </th>
          <th
            className="c33"
            disabled={undefined}
            name="th"
            onClick={[Function]}
            selected={undefined}
          >
            <span>
              Status 
            </span>
          </th>
          <th
            className="c34"
            disabled={undefined}
            name="th"
            onClick={[Function]}
            selected={undefined}
          >
            <span>
              Created 
            </span>
          </th>
          <th
            className="c35"
            disabled={undefined}
            name="th"
            onClick={[Function]}
            selected={undefined}
          >
            <span>
              Short ID 
            </span>
          </th>
          <th
            className="c36 c37"
            disabled={undefined}
            name="th"
            selected={undefined}
          />
        </tr>
      </thead>
      <tbody
        className="c38"
        disabled={undefined}
        name="tbody"
        selected={undefined}
      />
    </table>
  </form>
</div>
`;

exports[`renders <List instances /> without throwing 1`] = `
.c37 {
  background-color: transparent;
  text-decoration-skip: objects;
}

.c36 {
  color: rgb(59,70,204);
  -webkit-text-fill-color: currentcolor;
}

.c36:hover {
  text-decoration: none;
}

.c12 {
  font-family: sans-serif;
  font-size: 100%;
  line-height: 1.15;
  margin: 0;
  overflow: visible;
  text-transform: none;
  -webkit-appearance: button;
  -moz-appearance: button;
  appearance: button;
  min-width: 7.5rem;
}

.c12::-moz-focus-inner,
.c12[type='button']::-moz-focus-inner,
.c12[type='reset']::-moz-focus-inner,
.c12[type='submit']::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

.c12:-moz-focusring,
.c12[type='button']:-moz-focusring,
.c12[type='reset']:-moz-focusring,
.c12[type='submit']:-moz-focusring {
  outline: 0.0625rem dotted ButtonText;
}

.c12 + button {
  margin-left: 0.375rem;
}

.c11 {
  display: inline-block;
}

.c10 {
  box-sizing: border-box;
  display: inline-block;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-height: 3rem;
  height: 3rem;
  min-width: 7.5rem;
  margin-bottom: 0.5rem;
  margin-top: 0.5rem;
  padding: 0.9375rem 1.125rem;
  position: relative;
  font-size: 0.9375rem;
  text-align: center;
  font-style: normal;
  font-stretch: normal;
  line-height: normal;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  text-decoration: none;
  white-space: nowrap;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  color: rgb(255,255,255);
  -webkit-text-fill-color: currentcolor;
  background-image: none;
  background-color: rgb(59,70,204);
  border-radius: 0.25rem;
  border: solid 0.0625rem rgb(45,56,132);
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 100%;
  max-width: 100%;
}

.c10:focus {
  outline: 0;
  text-decoration: none;
  background-color: rgb(59,70,204);
  border-color: rgb(45,56,132);
}

.c10:hover {
  background-color: rgb(72,83,217);
  border: solid 0.0625rem rgb(45,56,132);
}

.c10:active,
.c10:active:hover,
.c10:active:focus {
  background-image: none;
  outline: 0;
  background-color: rgb(45,56,132);
  border-color: rgb(45,56,132);
}

.c10[disabled] {
  cursor: not-allowed;
  pointer-events: none;
}

.c10 svg + span {
  margin-left: 0.75rem;
}

.c10 svg {
  max-height: 1.125rem;
}

.c2 {
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 0 1 auto;
  -ms-flex: 0 1 auto;
  flex: 0 1 auto;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-right: -0.5rem;
  margin-left: -0.5rem;
}

.c4 {
  box-sizing: border-box;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  padding-right: 0.5rem;
  padding-left: 0.5rem;
}

.c8 {
  box-sizing: border-box;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  padding-right: 0.5rem;
  padding-left: 0.5rem;
}

.c0 {
  margin-right: auto;
  margin-left: auto;
  box-sizing: border-box;
  width: 100%;
  max-width: 62.5rem;
  padding-bottom: 1.125rem;
}

.c1 {
  background-color: rgb(216,216,216);
  margin: 0;
  background-color: transparent;
  height: 1.875rem;
}

.c3 {
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 0 1 auto;
  -ms-flex: 0 1 auto;
  flex: 0 1 auto;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-right: -0.5rem;
  margin-left: -0.5rem;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
}

.c26 {
  margin-bottom: 0.125rem;
  margin-left: 0.5625rem;
}

.c38 {
  width: 0.375rem;
  height: 0.375rem;
  border-radius: 0.1875rem;
  background-color: rgb(0,152,88);
  display: inline-block;
  height: 0.6875rem;
  width: 0.6875rem;
  border-radius: 0.6875rem;
}

.c23 {
  font-family: sans-serif;
  font-size: 100%;
  line-height: 1.15;
  margin: 0;
  overflow: visible;
  display: none;
}

.c23[type='checkbox'],
.c23[type='radio'] {
  box-sizing: border-box;
  padding: 0;
}

.c23[type='number']::-webkit-inner-spin-button,
.c23[type='number']::-webkit-outer-spin-button {
  height: auto;
}

.c23[type='search'] {
  -webkit-appearance: textfield;
  -moz-appearance: textfield;
  appearance: textfield;
  outline-offset: -0.125rem;
}

.c23[type='search']::-webkit-search-cancel-button,
.c23[type='search']::-webkit-search-decoration {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.c23::-webkit-file-upload-button {
  -webkit-appearance: button;
  -moz-appearance: button;
  appearance: button;
  font: inherit;
}

.c23:checked + label::after {
  opacity: 1;
}

.c23:selected + label::after {
  opacity: 1;
}

.c23:checked + label {
  border-color: rgb(59,70,204);
}

.c23:selected + label {
  border-color: rgb(59,70,204);
}

.c23:disabled + label {
  background-color: rgb(249,249,249);
  cursor: not-allowed;
}

.c24 {
  color: rgb(100,100,100);
  position: absolute;
  width: 1.125rem;
  height: 1.125rem;
  box-sizing: border-box;
  top: 0;
  right: 0;
  cursor: pointer;
  background-color: rgb(255,255,255);
  box-shadow: none;
  border: 0.0625rem solid rgb(216,216,216);
  cursor: pointer;
  border-radius: 0.25rem;
  width: 1.125rem;
  height: 1.125rem;
}

.c24::after {
  opacity: 0;
  content: '';
  position: absolute;
  width: 0.375rem;
  height: 0.125rem;
  background: transparent;
  top: 0.3125rem;
  left: 0.25rem;
  border: 0.125rem solid rgb(45,45,45);
  border-top: none;
  border-right: none;
  -webkit-transform: rotate(-45deg);
  -ms-transform: rotate(-45deg);
  transform: rotate(-45deg);
}

.c22 {
  display: inline-block;
  vertical-align: text-bottom;
  width: 1.125rem;
  height: 1.125rem;
  position: relative;
  cursor: pointer;
}

.c21 {
  list-style-type: none;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c21 label {
  font-weight: 400;
}

.c5 {
  display: inline-block;
  margin: 0;
  padding: 0;
  border: none;
  overflow: hidden;
  height: auto;
  -webkit-margin-start: 0;
  -webkit-margin-end: 0;
  -webkit-padding-before: 0;
  -webkit-padding-start: 0;
  -webkit-padding-end: 0;
  -webkit-padding-after: 0;
  width: 100%;
}

.c9 {
  display: inline-block;
  margin: 0;
  padding: 0;
  border: none;
  overflow: hidden;
  height: auto;
  -webkit-margin-start: 0;
  -webkit-margin-end: 0;
  -webkit-padding-before: 0;
  -webkit-padding-start: 0;
  -webkit-padding-end: 0;
  -webkit-padding-after: 0;
  float: right;
}

.c20 {
  display: inline-block;
  margin: 0;
  padding: 0;
  border: none;
  overflow: hidden;
  height: auto;
  -webkit-margin-start: 0;
  -webkit-margin-end: 0;
  -webkit-padding-before: 0;
  -webkit-padding-start: 0;
  -webkit-padding-end: 0;
  -webkit-padding-after: 0;
}

.c19 {
  padding-top: 0.25rem;
}

.c18 {
  padding-top: 0.25rem;
}

.c7 {
  box-sizing: border-box;
  width: 18.75rem;
  height: 3rem;
  min-height: 3rem;
  margin-bottom: 0.5rem;
  margin-top: 0.5rem;
  padding: 0.8125rem 1.125rem;
  border-radius: 0.25rem;
  background-color: rgb(255,255,255);
  border: 0.0625rem solid rgb(216,216,216);
  color: rgba(73,73,73,1);
  width: 100%;
  text-overflow: ellipsis;
  font-size: 0.9375rem;
  line-height: normal !important;
  font-style: normal;
  font-stretch: normal;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  outline: 0;
}

.c7::-webkit-input-placeholder {
  color: rgba(73,73,73,0.5);
}

.c7::-moz-placeholder {
  color: rgba(73,73,73,0.5);
}

.c7:-ms-input-placeholder {
  color: rgba(73,73,73,0.5);
}

.c7:invalid {
  box-shadow: none;
}

.c7:disabled {
  background-color: rgb(250,250,250);
  color: rgb(216,216,216);
  cursor: not-allowed;
}

.c7:disabled::-webkit-input-placeholder {
  color: rgba(73,73,73,0.5);
}

.c7:disabled::-moz-placeholder {
  color: rgba(73,73,73,0.5);
}

.c7:disabled:-ms-input-placeholder {
  color: rgba(73,73,73,0.5);
}

.c7:focus {
  border-color: rgb(59,70,204);
  outline: 0;
}

.c6 {
  font-size: 0.9375rem;
  font-style: normal;
  font-stretch: normal;
  display: block;
  color: rgb(70,70,70);
  text-align: left;
  margin-right: 0.75rem;
  font-weight: bold;
  white-space: pre;
  font-size: 0.8125rem;
}

.c43 {
  cursor: pointer;
  height: 100%;
  width: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c13 {
  overflow: hidden;
  border-spacing: 0;
  border-collapse: separate;
  table-layout: fixed;
  width: 100%;
  max-width: 100%;
}

.c14 {
  width: 100%;
  background: rgb(250,250,250);
}

.c14 th:first-child {
  border-top-left-radius: 0.25rem;
}

.c14 th:last-child {
  border-top-right-radius: 0.25rem;
}

.c32 {
  width: 100%;
}

.c32 tr:first-child td {
  border-top: none;
}

.c17 {
  border-width: 0.0625rem;
  border-style: solid;
  border-color: rgb(216,216,216);
  border-spacing: 0;
  white-space: nowrap;
  box-sizing: border-box;
  padding: 0 1.5rem;
  height: 3.75rem;
  width: 2rem;
  display: table-cell;
  vertical-align: middle;
  text-align: left;
  height: 2.625rem;
  color: rgb(189,189,189);
  font-weight: 500;
}

.c17:not(:first-child) {
  border-left-width: 0;
}

.c17:not(:last-child) {
  border-right-width: 0;
}

.c25 {
  border-width: 0.0625rem;
  border-style: solid;
  border-color: rgb(216,216,216);
  border-spacing: 0;
  white-space: nowrap;
  box-sizing: border-box;
  padding: 0 1.5rem;
  height: 3.75rem;
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  vertical-align: middle;
  text-align: left;
  height: 2.625rem;
  color: rgb(189,189,189);
  font-weight: 500;
  color: rgba(73,73,73,1);
  font-weight: bold;
}

.c25:not(:first-child) {
  border-left-width: 0;
}

.c25:not(:last-child) {
  border-right-width: 0;
}

.c27 {
  border-width: 0.0625rem;
  border-style: solid;
  border-color: rgb(216,216,216);
  border-spacing: 0;
  white-space: nowrap;
  box-sizing: border-box;
  padding: 0 1.5rem;
  height: 3.75rem;
  width: 9.375rem;
  display: table-cell;
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  vertical-align: middle;
  text-align: left;
  height: 2.625rem;
  color: rgb(189,189,189);
  font-weight: 500;
}

.c27:not(:first-child) {
  border-left-width: 0;
}

.c27:not(:last-child) {
  border-right-width: 0;
}

.c28 {
  border-width: 0.0625rem;
  border-style: solid;
  border-color: rgb(216,216,216);
  border-spacing: 0;
  white-space: nowrap;
  box-sizing: border-box;
  padding: 0 1.5rem;
  height: 3.75rem;
  width: 0rem;
  display: none;
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  vertical-align: middle;
  text-align: left;
  height: 2.625rem;
  color: rgb(189,189,189);
  font-weight: 500;
}

.c28:not(:first-child) {
  border-left-width: 0;
}

.c28:not(:last-child) {
  border-right-width: 0;
}

.c29 {
  border-width: 0.0625rem;
  border-style: solid;
  border-color: rgb(216,216,216);
  border-spacing: 0;
  white-space: nowrap;
  box-sizing: border-box;
  padding: 0 1.5rem;
  height: 3.75rem;
  width: 0rem;
  display: none;
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  vertical-align: middle;
  text-align: left;
  height: 2.625rem;
  color: rgb(189,189,189);
  font-weight: 500;
}

.c29:not(:first-child) {
  border-left-width: 0;
}

.c29:not(:last-child) {
  border-right-width: 0;
}

.c31 {
  border-width: 0.0625rem;
  border-style: solid;
  border-color: rgb(216,216,216);
  border-spacing: 0;
  white-space: nowrap;
  box-sizing: border-box;
  padding: 0 1.5rem;
  height: 3.75rem;
  width: 3.75rem;
  display: table-cell;
  height: 2.625rem;
  color: rgb(189,189,189);
  font-weight: 500;
}

.c31:not(:first-child) {
  border-left-width: 0;
}

.c31:not(:last-child) {
  border-right-width: 0;
}

.c35 {
  border-width: 0.0625rem;
  border-style: solid;
  border-color: rgb(216,216,216);
  border-spacing: 0;
  white-space: nowrap;
  box-sizing: border-box;
  padding: 0 1.5rem;
  height: 3.75rem;
  vertical-align: middle;
  text-align: left;
  border-bottom-width: 0;
}

.c35:not(:first-child) {
  border-left-width: 0;
}

.c35:not(:last-child) {
  border-right-width: 0;
}

.c39 {
  border-width: 0.0625rem;
  border-style: solid;
  border-color: rgb(216,216,216);
  border-spacing: 0;
  white-space: nowrap;
  box-sizing: border-box;
  padding: 0 1.5rem;
  height: 3.75rem;
  width: 0rem;
  display: none;
  vertical-align: middle;
  text-align: left;
  border-bottom-width: 0;
}

.c39:not(:first-child) {
  border-left-width: 0;
}

.c39:not(:last-child) {
  border-right-width: 0;
}

.c40 {
  border-width: 0.0625rem;
  border-style: solid;
  border-color: rgb(216,216,216);
  border-spacing: 0;
  white-space: nowrap;
  box-sizing: border-box;
  padding: 0 1.5rem;
  height: 3.75rem;
  width: 0rem;
  display: none;
  vertical-align: middle;
  text-align: left;
  border-bottom-width: 0;
}

.c40:not(:first-child) {
  border-left-width: 0;
}

.c40:not(:last-child) {
  border-right-width: 0;
}

.c42 {
  border-width: 0.0625rem;
  border-style: solid;
  border-color: rgb(216,216,216);
  border-spacing: 0;
  white-space: nowrap;
  box-sizing: border-box;
  padding: 0 1.5rem;
  height: 3.75rem;
  border-bottom-width: 0;
  border-left-width: 0.0625rem !important;
}

.c42:not(:first-child) {
  border-left-width: 0;
}

.c42:not(:last-child) {
  border-right-width: 0;
}

.c15 {
  display: table-row;
  color: rgba(73,73,73,1);
  background-color: rgb(255,255,255);
  box-shadow: 0 0.125rem 0 rgba(0,0,0,0.05);
  box-sizing: border-box;
  color: rgba(73,73,73,1);
  background-color: transparent;
  border: none;
  box-shadow: none;
}

.c15:last-child {
  box-shadow: none;
}

.c15:last-child td {
  border-bottom-width: 0.0625rem;
}

.c33 {
  display: table-row;
  color: rgba(73,73,73,1);
  background-color: rgb(255,255,255);
  box-shadow: 0 0.125rem 0 rgba(0,0,0,0.05);
  box-sizing: border-box;
}

.c33:last-child {
  box-shadow: none;
}

.c33:last-child td {
  border-bottom-width: 0.0625rem;
}

.c16 {
  padding: 0rem;
  padding-left: 0.75rem;
}

.c30 {
  padding: 0rem;
}

.c34 {
  padding: 0rem;
  padding-left: 0.75rem;
}

.c41 {
  padding: 0rem;
}

@media only screen and (min-width:0em) {
  .c4 {
    -webkit-flex-basis: 58.333333333333336%;
    -ms-flex-preferred-size: 58.333333333333336%;
    flex-basis: 58.333333333333336%;
    max-width: 58.333333333333336%;
    display: block;
  }
}

@media only screen and (min-width:48em) {
  .c4 {
    -webkit-flex-basis: 41.66666666666667%;
    -ms-flex-preferred-size: 41.66666666666667%;
    flex-basis: 41.66666666666667%;
    max-width: 41.66666666666667%;
    display: block;
  }
}

@media only screen and (min-width:0em) {
  .c8 {
    -webkit-flex-basis: 41.66666666666667%;
    -ms-flex-preferred-size: 41.66666666666667%;
    flex-basis: 41.66666666666667%;
    max-width: 41.66666666666667%;
    display: block;
  }
}

@media only screen and (min-width:48em) {
  .c8 {
    -webkit-flex-basis: 58.333333333333336%;
    -ms-flex-preferred-size: 58.333333333333336%;
    flex-basis: 58.333333333333336%;
    max-width: 58.333333333333336%;
    display: block;
  }
}

@media only screen and (min-width:48em) {
  .c0 {
    width: 46rem;
  }
}

@media only screen and (min-width:64em) {
  .c0 {
    width: 61rem;
  }
}

@media only screen and (min-width:75em) {
  .c0 {
    width: 76rem;
  }
}

@media only screen and (max-width:47.9375rem) {
  .c0 {
    padding-left: 0.375rem;
    padding-right: 0.375rem;
  }
}

@media only screen and (min-width:47.9375rem) {
  .c28 {
    width: 10rem;
    display: table-cell;
  }
}

@media only screen and (min-width:47.9375rem) {
  .c29 {
    width: 8.125rem;
    display: table-cell;
  }
}

@media only screen and (min-width:47.9375rem) {
  .c39 {
    width: 10rem;
    display: table-cell;
  }
}

@media only screen and (min-width:47.9375rem) {
  .c40 {
    width: 8.125rem;
    display: table-cell;
  }
}

<div
  className="c0"
>
  <div
    className="c1 c2"
    height="1.875rem"
  />
  <form
    onSubmit={undefined}
  >
    <div
      className="c3"
    >
      <div
        className="c4"
      >
        <div
          className="c5"
          name="filter"
          role="group"
          style={undefined}
        >
          <label
            className="c6"
            htmlFor="bn"
          >
            Filter instances
          </label>
          <input
            className="c7"
            disabled={false}
            id="bn"
            placeholder="Search for name, state, tags, etc..."
          />
        </div>
      </div>
      <div
        className="c8"
      >
        <div
          className="c9"
          role="group"
          style={undefined}
        >
          <label
            className="c6"
            htmlFor="bp"
          >
            ⁣
          </label>
          <button
            className="c10 c11 c12"
            disabled={false}
            href=""
            icon={true}
            onClick={[Function]}
            type="button"
          >
            Create Instance
          </button>
        </div>
      </div>
    </div>
  </form>
  <form>
    <table
      className="c13"
    >
      <thead
        className="c14"
        disabled={undefined}
        name="thdead"
        selected={undefined}
      >
        <tr
          className="c15"
          disabled={undefined}
          name="tr"
          selected={undefined}
        >
          <th
            className="c16 c17"
            disabled={undefined}
            name="th"
            selected={undefined}
          >
            <div
              className="c18 c19 c20"
              role="group"
              style={undefined}
            >
              <li
                className="c21"
              >
                <div
                  checked={false}
                  className="c22"
                  disabled={false}
                  id="br"
                  onChange={[Function]}
                  type="checkbox"
                >
                  <input
                    checked={false}
                    className="c23"
                    disabled={false}
                    id="bs"
                    onChange={[Function]}
                    type="checkbox"
                  />
                  <label
                    className="c24"
                    htmlFor="bs"
                  />
                </div>
              </li>
            </div>
          </th>
          <th
            className="c25"
            disabled={undefined}
            name="th"
            onClick={[Function]}
            selected={undefined}
          >
            <span>
              Name 
            </span>
            <svg
              className="c26"
              height="6"
              marginBottom="0.125rem"
              marginLeft="0.5625rem"
              style={
                Object {
                  "transform": "rotate(180deg)",
                }
              }
              viewBox="0 0 9 6"
              width="9"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M9 1.386L7.648 0 4.5 3.228 1.352 0 0 1.386 4.5 6z"
                fill="rgba(73, 73, 73, 1)"
                fillRule="evenodd"
              />
            </svg>
          </th>
          <th
            className="c27"
            disabled={undefined}
            name="th"
            onClick={[Function]}
            selected={undefined}
          >
            <span>
              Status 
            </span>
          </th>
          <th
            className="c28"
            disabled={undefined}
            name="th"
            onClick={[Function]}
            selected={undefined}
          >
            <span>
              Created 
            </span>
          </th>
          <th
            className="c29"
            disabled={undefined}
            name="th"
            onClick={[Function]}
            selected={undefined}
          >
            <span>
              Short ID 
            </span>
          </th>
          <th
            className="c30 c31"
            disabled={undefined}
            name="th"
            selected={undefined}
          />
        </tr>
      </thead>
      <tbody
        className="c32"
        disabled={undefined}
        name="tbody"
        selected={undefined}
      >
        <tr
          className="c33"
          disabled={undefined}
          name="tr"
          selected={undefined}
        >
          <td
            className="c34 c35"
            disabled={undefined}
            name="td"
            selected={undefined}
          >
            <div
              className="c18 c19 c20"
              name=""
              role="group"
              style={undefined}
            >
              <li
                className="c21"
              >
                <div
                  checked={false}
                  className="c22"
                  disabled={false}
                  id="bt"
                  type="checkbox"
                >
                  <input
                    checked={false}
                    className="c23"
                    disabled={false}
                    id="bu"
                    type="checkbox"
                  />
                  <label
                    className="c24"
                    htmlFor="bu"
                  />
                </div>
              </li>
            </div>
          </td>
          <td
            className="c35"
            disabled={undefined}
            name="td"
            selected={undefined}
          >
            <a
              className="c36 c37"
              to="/instances/2252839a"
            >
              2252839a
            </a>
          </td>
          <td
            className="c35"
            disabled={undefined}
            name="td"
            selected={undefined}
          >
            <span>
              <span
                className="c38"
                color="green"
                height="0.6875rem"
                width="0.6875rem"
              />
               
              Running
            </span>
          </td>
          <td
            className="c39"
            disabled={undefined}
            name="td"
            selected={undefined}
          >
            almost NaN years
          </td>
          <td
            className="c40"
            disabled={undefined}
            name="td"
            selected={undefined}
          >
            <code>
              
            </code>
          </td>
          <td
            className="c41 c42"
            disabled={undefined}
            name="td"
            selected={undefined}
          >
            <div
              box={true}
              className="c43"
              onClick={[Function]}
              onMouseEnter={undefined}
              onMouseLeave={undefined}
              tag="div"
            >
              <svg
                className=""
                height="16"
                style={
                  Object {
                    "transform": "rotate(0deg)",
                  }
                }
                viewBox="0 0 4 16"
                width="4"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M2 4a2 2 0 1 0 0-4 2 2 0 0 0 0 4z"
                  fill="rgba(73, 73, 73, 1)"
                  fill-rule="evenodd"
                />
                <path
                  d="M2 4a2 2 0 1 0 0-4 2 2 0 0 0 0 4z"
                  fill="rgba(73, 73, 73, 1)"
                  fill-rule="evenodd"
                  style={
                    Object {
                      "transform": "translateY(0.375rem)",
                    }
                  }
                />
                <path
                  d="M2 4a2 2 0 1 0 0-4 2 2 0 0 0 0 4z"
                  fill="rgba(73, 73, 73, 1)"
                  fill-rule="evenodd"
                  style={
                    Object {
                      "transform": "translateY(0.75rem)",
                    }
                  }
                />
              </svg>
            </div>
          </td>
        </tr>
        <tr
          className="c33"
          disabled={undefined}
          name="tr"
          selected={undefined}
        >
          <td
            className="c34 c35"
            disabled={undefined}
            name="td"
            selected={undefined}
          >
            <div
              className="c18 c19 c20"
              name=""
              role="group"
              style={undefined}
            >
              <li
                className="c21"
              >
                <div
                  checked={false}
                  className="c22"
                  disabled={false}
                  id="bv"
                  type="checkbox"
                >
                  <input
                    checked={false}
                    className="c23"
                    disabled={false}
                    id="bw"
                    type="checkbox"
                  />
                  <label
                    className="c24"
                    htmlFor="bw"
                  />
                </div>
              </li>
            </div>
          </td>
          <td
            className="c35"
            disabled={undefined}
            name="td"
            selected={undefined}
          >
            <a
              className="c36 c37"
              to="/instances/f1bd1730"
            >
              f1bd1730
            </a>
          </td>
          <td
            className="c35"
            disabled={undefined}
            name="td"
            selected={undefined}
          >
            <span>
              <span
                className="c38"
                color="green"
                height="0.6875rem"
                width="0.6875rem"
              />
               
              Running
            </span>
          </td>
          <td
            className="c39"
            disabled={undefined}
            name="td"
            selected={undefined}
          >
            almost NaN years
          </td>
          <td
            className="c40"
            disabled={undefined}
            name="td"
            selected={undefined}
          >
            <code>
              
            </code>
          </td>
          <td
            className="c41 c42"
            disabled={undefined}
            name="td"
            selected={undefined}
          >
            <div
              box={true}
              className="c43"
              onClick={[Function]}
              onMouseEnter={undefined}
              onMouseLeave={undefined}
              tag="div"
            >
              <svg
                className=""
                height="16"
                style={
                  Object {
                    "transform": "rotate(0deg)",
                  }
                }
                viewBox="0 0 4 16"
                width="4"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M2 4a2 2 0 1 0 0-4 2 2 0 0 0 0 4z"
                  fill="rgba(73, 73, 73, 1)"
                  fill-rule="evenodd"
                />
                <path
                  d="M2 4a2 2 0 1 0 0-4 2 2 0 0 0 0 4z"
                  fill="rgba(73, 73, 73, 1)"
                  fill-rule="evenodd"
                  style={
                    Object {
                      "transform": "translateY(0.375rem)",
                    }
                  }
                />
                <path
                  d="M2 4a2 2 0 1 0 0-4 2 2 0 0 0 0 4z"
                  fill="rgba(73, 73, 73, 1)"
                  fill-rule="evenodd"
                  style={
                    Object {
                      "transform": "translateY(0.75rem)",
                    }
                  }
                />
              </svg>
            </div>
          </td>
        </tr>
      </tbody>
    </table>
  </form>
</div>
`;

exports[`renders <List instances selected /> without throwing 1`] = `
.c37 {
  background-color: transparent;
  text-decoration-skip: objects;
}

.c36 {
  color: rgb(59,70,204);
  -webkit-text-fill-color: currentcolor;
}

.c36:hover {
  text-decoration: none;
}

.c12 {
  font-family: sans-serif;
  font-size: 100%;
  line-height: 1.15;
  margin: 0;
  overflow: visible;
  text-transform: none;
  -webkit-appearance: button;
  -moz-appearance: button;
  appearance: button;
  min-width: 7.5rem;
}

.c12::-moz-focus-inner,
.c12[type='button']::-moz-focus-inner,
.c12[type='reset']::-moz-focus-inner,
.c12[type='submit']::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

.c12:-moz-focusring,
.c12[type='button']:-moz-focusring,
.c12[type='reset']:-moz-focusring,
.c12[type='submit']:-moz-focusring {
  outline: 0.0625rem dotted ButtonText;
}

.c12 + button {
  margin-left: 0.375rem;
}

.c11 {
  display: inline-block;
}

.c10 {
  box-sizing: border-box;
  display: inline-block;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-height: 3rem;
  height: 3rem;
  min-width: 7.5rem;
  margin-bottom: 0.5rem;
  margin-top: 0.5rem;
  padding: 0.9375rem 1.125rem;
  position: relative;
  font-size: 0.9375rem;
  text-align: center;
  font-style: normal;
  font-stretch: normal;
  line-height: normal;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  text-decoration: none;
  white-space: nowrap;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  color: rgb(255,255,255);
  -webkit-text-fill-color: currentcolor;
  background-image: none;
  background-color: rgb(59,70,204);
  border-radius: 0.25rem;
  border: solid 0.0625rem rgb(45,56,132);
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 100%;
  max-width: 100%;
}

.c10:focus {
  outline: 0;
  text-decoration: none;
  background-color: rgb(59,70,204);
  border-color: rgb(45,56,132);
}

.c10:hover {
  background-color: rgb(72,83,217);
  border: solid 0.0625rem rgb(45,56,132);
}

.c10:active,
.c10:active:hover,
.c10:active:focus {
  background-image: none;
  outline: 0;
  background-color: rgb(45,56,132);
  border-color: rgb(45,56,132);
}

.c10[disabled] {
  cursor: not-allowed;
  pointer-events: none;
}

.c10 svg + span {
  margin-left: 0.75rem;
}

.c10 svg {
  max-height: 1.125rem;
}

.c49 {
  box-sizing: border-box;
  display: inline-block;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-height: 3rem;
  height: 3rem;
  min-width: 7.5rem;
  margin-bottom: 0.5rem;
  margin-top: 0.5rem;
  padding: 0.9375rem 1.125rem;
  position: relative;
  font-size: 0.9375rem;
  text-align: center;
  font-style: normal;
  font-stretch: normal;
  line-height: normal;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  text-decoration: none;
  white-space: nowrap;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  color: rgb(255,255,255);
  -webkit-text-fill-color: currentcolor;
  background-image: none;
  background-color: rgb(59,70,204);
  border-radius: 0.25rem;
  border: solid 0.0625rem rgb(45,56,132);
  color: rgb(70,70,70);
  -webkit-text-fill-color: currentcolor;
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
  cursor: not-allowed;
  pointer-events: none;
  color: rgb(216,216,216);
  background-color: rgb(250,250,250);
  border-color: rgb(216,216,216);
  padding: 0.5625rem 1.125rem;
  font-size: 0.8125rem;
  min-width: 0rem;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c49:focus {
  outline: 0;
  text-decoration: none;
  background-color: rgb(59,70,204);
  border-color: rgb(45,56,132);
}

.c49:hover {
  background-color: rgb(72,83,217);
  border: solid 0.0625rem rgb(45,56,132);
}

.c49:active,
.c49:active:hover,
.c49:active:focus {
  background-image: none;
  outline: 0;
  background-color: rgb(45,56,132);
  border-color: rgb(45,56,132);
}

.c49[disabled] {
  cursor: not-allowed;
  pointer-events: none;
}

.c49:focus {
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
}

.c49:hover {
  background-color: rgb(247,247,247);
  border-color: rgb(216,216,216);
}

.c49:active,
.c49:active:hover,
.c49:active:focus {
  background-color: rgb(230,230,230);
  border-color: rgb(216,216,216);
}

.c49:focus {
  background-color: rgb(250,250,250);
  border-color: rgb(216,216,216);
}

.c49:hover {
  background-color: rgb(250,250,250);
  border-color: rgb(250,250,250);
}

.c49:active,
.c49:active:hover,
.c49:active:focus {
  background-color: rgb(250,250,250);
  border-color: rgb(250,250,250);
}

.c49 svg + span {
  margin-left: 0.75rem;
}

.c49 svg {
  max-height: 1.125rem;
}

.c50 {
  box-sizing: border-box;
  display: inline-block;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-height: 3rem;
  height: 3rem;
  min-width: 7.5rem;
  margin-bottom: 0.5rem;
  margin-top: 0.5rem;
  padding: 0.9375rem 1.125rem;
  position: relative;
  font-size: 0.9375rem;
  text-align: center;
  font-style: normal;
  font-stretch: normal;
  line-height: normal;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  text-decoration: none;
  white-space: nowrap;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  color: rgb(255,255,255);
  -webkit-text-fill-color: currentcolor;
  background-image: none;
  background-color: rgb(59,70,204);
  border-radius: 0.25rem;
  border: solid 0.0625rem rgb(45,56,132);
  color: rgb(70,70,70);
  -webkit-text-fill-color: currentcolor;
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
  cursor: not-allowed;
  pointer-events: none;
  color: rgb(216,216,216);
  background-color: rgb(250,250,250);
  border-color: rgb(216,216,216);
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c50:focus {
  outline: 0;
  text-decoration: none;
  background-color: rgb(59,70,204);
  border-color: rgb(45,56,132);
}

.c50:hover {
  background-color: rgb(72,83,217);
  border: solid 0.0625rem rgb(45,56,132);
}

.c50:active,
.c50:active:hover,
.c50:active:focus {
  background-image: none;
  outline: 0;
  background-color: rgb(45,56,132);
  border-color: rgb(45,56,132);
}

.c50[disabled] {
  cursor: not-allowed;
  pointer-events: none;
}

.c50:focus {
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
}

.c50:hover {
  background-color: rgb(247,247,247);
  border-color: rgb(216,216,216);
}

.c50:active,
.c50:active:hover,
.c50:active:focus {
  background-color: rgb(230,230,230);
  border-color: rgb(216,216,216);
}

.c50:focus {
  background-color: rgb(250,250,250);
  border-color: rgb(216,216,216);
}

.c50:hover {
  background-color: rgb(250,250,250);
  border-color: rgb(250,250,250);
}

.c50:active,
.c50:active:hover,
.c50:active:focus {
  background-color: rgb(250,250,250);
  border-color: rgb(250,250,250);
}

.c50 svg + span {
  margin-left: 0.75rem;
}

.c50 svg {
  max-height: 1.125rem;
}

.c52 {
  box-sizing: border-box;
  display: inline-block;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-height: 3rem;
  height: 3rem;
  min-width: 7.5rem;
  margin-bottom: 0.5rem;
  margin-top: 0.5rem;
  padding: 0.9375rem 1.125rem;
  position: relative;
  font-size: 0.9375rem;
  text-align: center;
  font-style: normal;
  font-stretch: normal;
  line-height: normal;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  text-decoration: none;
  white-space: nowrap;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  color: rgb(255,255,255);
  -webkit-text-fill-color: currentcolor;
  background-image: none;
  background-color: rgb(59,70,204);
  border-radius: 0.25rem;
  border: solid 0.0625rem rgb(45,56,132);
  color: rgb(70,70,70);
  -webkit-text-fill-color: currentcolor;
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
  color: rgb(210,67,58);
  -webkit-text-fill-color: currentcolor;
  background-color: rgb(255,255,255);
  border-color: rgb(210,67,58);
  cursor: not-allowed;
  pointer-events: none;
  color: rgb(216,216,216);
  background-color: rgb(250,250,250);
  border-color: rgb(216,216,216);
  padding: 0.5625rem 1.125rem;
  font-size: 0.8125rem;
  min-width: 0rem;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  float: right;
}

.c52:focus {
  outline: 0;
  text-decoration: none;
  background-color: rgb(59,70,204);
  border-color: rgb(45,56,132);
}

.c52:hover {
  background-color: rgb(72,83,217);
  border: solid 0.0625rem rgb(45,56,132);
}

.c52:active,
.c52:active:hover,
.c52:active:focus {
  background-image: none;
  outline: 0;
  background-color: rgb(45,56,132);
  border-color: rgb(45,56,132);
}

.c52[disabled] {
  cursor: not-allowed;
  pointer-events: none;
}

.c52:focus {
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
}

.c52:hover {
  background-color: rgb(247,247,247);
  border-color: rgb(216,216,216);
}

.c52:active,
.c52:active:hover,
.c52:active:focus {
  background-color: rgb(230,230,230);
  border-color: rgb(216,216,216);
}

.c52:focus {
  background-color: rgb(255,255,255);
  border-color: rgb(210,67,58);
}

.c52:hover {
  background-color: rgb(247,247,247);
  border-color: rgb(210,67,58);
}

.c52:active,
.c52:active:hover,
.c52:active:focus {
  background-color: rgb(230,230,230);
  border-color: rgb(210,67,58);
}

.c52:focus {
  background-color: rgb(250,250,250);
  border-color: rgb(216,216,216);
}

.c52:hover {
  background-color: rgb(250,250,250);
  border-color: rgb(250,250,250);
}

.c52:active,
.c52:active:hover,
.c52:active:focus {
  background-color: rgb(250,250,250);
  border-color: rgb(250,250,250);
}

.c52 svg + span {
  margin-left: 0.75rem;
}

.c52 svg {
  max-height: 1.125rem;
}

.c53 {
  box-sizing: border-box;
  display: inline-block;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-height: 3rem;
  height: 3rem;
  min-width: 7.5rem;
  margin-bottom: 0.5rem;
  margin-top: 0.5rem;
  padding: 0.9375rem 1.125rem;
  position: relative;
  font-size: 0.9375rem;
  text-align: center;
  font-style: normal;
  font-stretch: normal;
  line-height: normal;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  text-decoration: none;
  white-space: nowrap;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  color: rgb(255,255,255);
  -webkit-text-fill-color: currentcolor;
  background-image: none;
  background-color: rgb(59,70,204);
  border-radius: 0.25rem;
  border: solid 0.0625rem rgb(45,56,132);
  color: rgb(70,70,70);
  -webkit-text-fill-color: currentcolor;
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
  color: rgb(210,67,58);
  -webkit-text-fill-color: currentcolor;
  background-color: rgb(255,255,255);
  border-color: rgb(210,67,58);
  cursor: not-allowed;
  pointer-events: none;
  color: rgb(216,216,216);
  background-color: rgb(250,250,250);
  border-color: rgb(216,216,216);
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  float: right;
}

.c53:focus {
  outline: 0;
  text-decoration: none;
  background-color: rgb(59,70,204);
  border-color: rgb(45,56,132);
}

.c53:hover {
  background-color: rgb(72,83,217);
  border: solid 0.0625rem rgb(45,56,132);
}

.c53:active,
.c53:active:hover,
.c53:active:focus {
  background-image: none;
  outline: 0;
  background-color: rgb(45,56,132);
  border-color: rgb(45,56,132);
}

.c53[disabled] {
  cursor: not-allowed;
  pointer-events: none;
}

.c53:focus {
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
}

.c53:hover {
  background-color: rgb(247,247,247);
  border-color: rgb(216,216,216);
}

.c53:active,
.c53:active:hover,
.c53:active:focus {
  background-color: rgb(230,230,230);
  border-color: rgb(216,216,216);
}

.c53:focus {
  background-color: rgb(255,255,255);
  border-color: rgb(210,67,58);
}

.c53:hover {
  background-color: rgb(247,247,247);
  border-color: rgb(210,67,58);
}

.c53:active,
.c53:active:hover,
.c53:active:focus {
  background-color: rgb(230,230,230);
  border-color: rgb(210,67,58);
}

.c53:focus {
  background-color: rgb(250,250,250);
  border-color: rgb(216,216,216);
}

.c53:hover {
  background-color: rgb(250,250,250);
  border-color: rgb(250,250,250);
}

.c53:active,
.c53:active:hover,
.c53:active:focus {
  background-color: rgb(250,250,250);
  border-color: rgb(250,250,250);
}

.c53 svg + span {
  margin-left: 0.75rem;
}

.c53 svg {
  max-height: 1.125rem;
}

.c2 {
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 0 1 auto;
  -ms-flex: 0 1 auto;
  flex: 0 1 auto;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-right: -0.5rem;
  margin-left: -0.5rem;
}

.c4 {
  box-sizing: border-box;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  padding-right: 0.5rem;
  padding-left: 0.5rem;
}

.c8 {
  box-sizing: border-box;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  padding-right: 0.5rem;
  padding-left: 0.5rem;
}

.c48 {
  box-sizing: border-box;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  padding-right: 0.5rem;
  padding-left: 0.5rem;
}

.c51 {
  box-sizing: border-box;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  padding-right: 0.5rem;
  padding-left: 0.5rem;
}

.c0 {
  margin-right: auto;
  margin-left: auto;
  box-sizing: border-box;
  width: 100%;
  max-width: 62.5rem;
  padding-bottom: 1.125rem;
}

.c1 {
  background-color: rgb(216,216,216);
  margin: 0;
  background-color: transparent;
  height: 1.875rem;
}

.c46 {
  margin-right: auto;
  margin-left: auto;
  box-sizing: border-box;
  width: 100%;
  max-width: 62.5rem;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: nowrap;
  -ms-flex-wrap: nowrap;
  flex-wrap: nowrap;
  -webkit-align-content: stretch;
  -ms-flex-line-pack: stretch;
  align-content: stretch;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
}

.c45 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex-wrap: nowrap;
  -ms-flex-wrap: nowrap;
  flex-wrap: nowrap;
  -webkit-align-content: stretch;
  -ms-flex-line-pack: stretch;
  align-content: stretch;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  background-color: rgb(30,49,59);
  max-height: 3.3125rem;
  min-height: 3.3125rem;
  line-height: 1.5625rem;
  position: fixed;
  left: 0;
  right: 0;
  bottom: 0;
}

.c44 {
  background-color: rgba(241,241,241,1);
  border-top: 0.0625rem solid rgb(216,216,216);
  height: 4.375rem;
  max-height: 4.375rem;
}

.c3 {
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 0 1 auto;
  -ms-flex: 0 1 auto;
  flex: 0 1 auto;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-right: -0.5rem;
  margin-left: -0.5rem;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
}

.c47 {
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 0 1 auto;
  -ms-flex: 0 1 auto;
  flex: 0 1 auto;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-right: -0.5rem;
  margin-left: -0.5rem;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
}

.c26 {
  margin-bottom: 0.125rem;
  margin-left: 0.5625rem;
}

.c38 {
  width: 0.375rem;
  height: 0.375rem;
  border-radius: 0.1875rem;
  background-color: rgb(0,152,88);
  display: inline-block;
  height: 0.6875rem;
  width: 0.6875rem;
  border-radius: 0.6875rem;
}

.c23 {
  font-family: sans-serif;
  font-size: 100%;
  line-height: 1.15;
  margin: 0;
  overflow: visible;
  display: none;
}

.c23[type='checkbox'],
.c23[type='radio'] {
  box-sizing: border-box;
  padding: 0;
}

.c23[type='number']::-webkit-inner-spin-button,
.c23[type='number']::-webkit-outer-spin-button {
  height: auto;
}

.c23[type='search'] {
  -webkit-appearance: textfield;
  -moz-appearance: textfield;
  appearance: textfield;
  outline-offset: -0.125rem;
}

.c23[type='search']::-webkit-search-cancel-button,
.c23[type='search']::-webkit-search-decoration {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.c23::-webkit-file-upload-button {
  -webkit-appearance: button;
  -moz-appearance: button;
  appearance: button;
  font: inherit;
}

.c23:checked + label::after {
  opacity: 1;
}

.c23:selected + label::after {
  opacity: 1;
}

.c23:checked + label {
  border-color: rgb(59,70,204);
}

.c23:selected + label {
  border-color: rgb(59,70,204);
}

.c23:disabled + label {
  background-color: rgb(249,249,249);
  cursor: not-allowed;
}

.c24 {
  color: rgb(100,100,100);
  position: absolute;
  width: 1.125rem;
  height: 1.125rem;
  box-sizing: border-box;
  top: 0;
  right: 0;
  cursor: pointer;
  background-color: rgb(255,255,255);
  box-shadow: none;
  border: 0.0625rem solid rgb(216,216,216);
  cursor: pointer;
  border-radius: 0.25rem;
  width: 1.125rem;
  height: 1.125rem;
}

.c24::after {
  opacity: 0;
  content: '';
  position: absolute;
  width: 0.375rem;
  height: 0.125rem;
  background: transparent;
  top: 0.3125rem;
  left: 0.25rem;
  border: 0.125rem solid rgb(45,45,45);
  border-top: none;
  border-right: none;
  -webkit-transform: rotate(-45deg);
  -ms-transform: rotate(-45deg);
  transform: rotate(-45deg);
}

.c22 {
  display: inline-block;
  vertical-align: text-bottom;
  width: 1.125rem;
  height: 1.125rem;
  position: relative;
  cursor: pointer;
}

.c21 {
  list-style-type: none;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c21 label {
  font-weight: 400;
}

.c5 {
  display: inline-block;
  margin: 0;
  padding: 0;
  border: none;
  overflow: hidden;
  height: auto;
  -webkit-margin-start: 0;
  -webkit-margin-end: 0;
  -webkit-padding-before: 0;
  -webkit-padding-start: 0;
  -webkit-padding-end: 0;
  -webkit-padding-after: 0;
  width: 100%;
}

.c9 {
  display: inline-block;
  margin: 0;
  padding: 0;
  border: none;
  overflow: hidden;
  height: auto;
  -webkit-margin-start: 0;
  -webkit-margin-end: 0;
  -webkit-padding-before: 0;
  -webkit-padding-start: 0;
  -webkit-padding-end: 0;
  -webkit-padding-after: 0;
  float: right;
}

.c20 {
  display: inline-block;
  margin: 0;
  padding: 0;
  border: none;
  overflow: hidden;
  height: auto;
  -webkit-margin-start: 0;
  -webkit-margin-end: 0;
  -webkit-padding-before: 0;
  -webkit-padding-start: 0;
  -webkit-padding-end: 0;
  -webkit-padding-after: 0;
}

.c19 {
  padding-top: 0.25rem;
}

.c18 {
  padding-top: 0.25rem;
}

.c7 {
  box-sizing: border-box;
  width: 18.75rem;
  height: 3rem;
  min-height: 3rem;
  margin-bottom: 0.5rem;
  margin-top: 0.5rem;
  padding: 0.8125rem 1.125rem;
  border-radius: 0.25rem;
  background-color: rgb(255,255,255);
  border: 0.0625rem solid rgb(216,216,216);
  color: rgba(73,73,73,1);
  width: 100%;
  text-overflow: ellipsis;
  font-size: 0.9375rem;
  line-height: normal !important;
  font-style: normal;
  font-stretch: normal;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  outline: 0;
}

.c7::-webkit-input-placeholder {
  color: rgba(73,73,73,0.5);
}

.c7::-moz-placeholder {
  color: rgba(73,73,73,0.5);
}

.c7:-ms-input-placeholder {
  color: rgba(73,73,73,0.5);
}

.c7:invalid {
  box-shadow: none;
}

.c7:disabled {
  background-color: rgb(250,250,250);
  color: rgb(216,216,216);
  cursor: not-allowed;
}

.c7:disabled::-webkit-input-placeholder {
  color: rgba(73,73,73,0.5);
}

.c7:disabled::-moz-placeholder {
  color: rgba(73,73,73,0.5);
}

.c7:disabled:-ms-input-placeholder {
  color: rgba(73,73,73,0.5);
}

.c7:focus {
  border-color: rgb(59,70,204);
  outline: 0;
}

.c6 {
  font-size: 0.9375rem;
  font-style: normal;
  font-stretch: normal;
  display: block;
  color: rgb(70,70,70);
  text-align: left;
  margin-right: 0.75rem;
  font-weight: bold;
  white-space: pre;
  font-size: 0.8125rem;
}

.c43 {
  cursor: pointer;
  height: 100%;
  width: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c13 {
  overflow: hidden;
  border-spacing: 0;
  border-collapse: separate;
  table-layout: fixed;
  width: 100%;
  max-width: 100%;
}

.c14 {
  width: 100%;
  background: rgb(250,250,250);
}

.c14 th:first-child {
  border-top-left-radius: 0.25rem;
}

.c14 th:last-child {
  border-top-right-radius: 0.25rem;
}

.c32 {
  width: 100%;
}

.c32 tr:first-child td {
  border-top: none;
}

.c17 {
  border-width: 0.0625rem;
  border-style: solid;
  border-color: rgb(216,216,216);
  border-spacing: 0;
  white-space: nowrap;
  box-sizing: border-box;
  padding: 0 1.5rem;
  height: 3.75rem;
  width: 2rem;
  display: table-cell;
  vertical-align: middle;
  text-align: left;
  height: 2.625rem;
  color: rgb(189,189,189);
  font-weight: 500;
}

.c17:not(:first-child) {
  border-left-width: 0;
}

.c17:not(:last-child) {
  border-right-width: 0;
}

.c25 {
  border-width: 0.0625rem;
  border-style: solid;
  border-color: rgb(216,216,216);
  border-spacing: 0;
  white-space: nowrap;
  box-sizing: border-box;
  padding: 0 1.5rem;
  height: 3.75rem;
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  vertical-align: middle;
  text-align: left;
  height: 2.625rem;
  color: rgb(189,189,189);
  font-weight: 500;
  color: rgba(73,73,73,1);
  font-weight: bold;
}

.c25:not(:first-child) {
  border-left-width: 0;
}

.c25:not(:last-child) {
  border-right-width: 0;
}

.c27 {
  border-width: 0.0625rem;
  border-style: solid;
  border-color: rgb(216,216,216);
  border-spacing: 0;
  white-space: nowrap;
  box-sizing: border-box;
  padding: 0 1.5rem;
  height: 3.75rem;
  width: 9.375rem;
  display: table-cell;
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  vertical-align: middle;
  text-align: left;
  height: 2.625rem;
  color: rgb(189,189,189);
  font-weight: 500;
}

.c27:not(:first-child) {
  border-left-width: 0;
}

.c27:not(:last-child) {
  border-right-width: 0;
}

.c28 {
  border-width: 0.0625rem;
  border-style: solid;
  border-color: rgb(216,216,216);
  border-spacing: 0;
  white-space: nowrap;
  box-sizing: border-box;
  padding: 0 1.5rem;
  height: 3.75rem;
  width: 0rem;
  display: none;
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  vertical-align: middle;
  text-align: left;
  height: 2.625rem;
  color: rgb(189,189,189);
  font-weight: 500;
}

.c28:not(:first-child) {
  border-left-width: 0;
}

.c28:not(:last-child) {
  border-right-width: 0;
}

.c29 {
  border-width: 0.0625rem;
  border-style: solid;
  border-color: rgb(216,216,216);
  border-spacing: 0;
  white-space: nowrap;
  box-sizing: border-box;
  padding: 0 1.5rem;
  height: 3.75rem;
  width: 0rem;
  display: none;
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  vertical-align: middle;
  text-align: left;
  height: 2.625rem;
  color: rgb(189,189,189);
  font-weight: 500;
}

.c29:not(:first-child) {
  border-left-width: 0;
}

.c29:not(:last-child) {
  border-right-width: 0;
}

.c31 {
  border-width: 0.0625rem;
  border-style: solid;
  border-color: rgb(216,216,216);
  border-spacing: 0;
  white-space: nowrap;
  box-sizing: border-box;
  padding: 0 1.5rem;
  height: 3.75rem;
  width: 3.75rem;
  display: table-cell;
  height: 2.625rem;
  color: rgb(189,189,189);
  font-weight: 500;
}

.c31:not(:first-child) {
  border-left-width: 0;
}

.c31:not(:last-child) {
  border-right-width: 0;
}

.c35 {
  border-width: 0.0625rem;
  border-style: solid;
  border-color: rgb(216,216,216);
  border-spacing: 0;
  white-space: nowrap;
  box-sizing: border-box;
  padding: 0 1.5rem;
  height: 3.75rem;
  vertical-align: middle;
  text-align: left;
  border-bottom-width: 0;
}

.c35:not(:first-child) {
  border-left-width: 0;
}

.c35:not(:last-child) {
  border-right-width: 0;
}

.c39 {
  border-width: 0.0625rem;
  border-style: solid;
  border-color: rgb(216,216,216);
  border-spacing: 0;
  white-space: nowrap;
  box-sizing: border-box;
  padding: 0 1.5rem;
  height: 3.75rem;
  width: 0rem;
  display: none;
  vertical-align: middle;
  text-align: left;
  border-bottom-width: 0;
}

.c39:not(:first-child) {
  border-left-width: 0;
}

.c39:not(:last-child) {
  border-right-width: 0;
}

.c40 {
  border-width: 0.0625rem;
  border-style: solid;
  border-color: rgb(216,216,216);
  border-spacing: 0;
  white-space: nowrap;
  box-sizing: border-box;
  padding: 0 1.5rem;
  height: 3.75rem;
  width: 0rem;
  display: none;
  vertical-align: middle;
  text-align: left;
  border-bottom-width: 0;
}

.c40:not(:first-child) {
  border-left-width: 0;
}

.c40:not(:last-child) {
  border-right-width: 0;
}

.c42 {
  border-width: 0.0625rem;
  border-style: solid;
  border-color: rgb(216,216,216);
  border-spacing: 0;
  white-space: nowrap;
  box-sizing: border-box;
  padding: 0 1.5rem;
  height: 3.75rem;
  border-bottom-width: 0;
  border-left-width: 0.0625rem !important;
}

.c42:not(:first-child) {
  border-left-width: 0;
}

.c42:not(:last-child) {
  border-right-width: 0;
}

.c15 {
  display: table-row;
  color: rgba(73,73,73,1);
  background-color: rgb(255,255,255);
  box-shadow: 0 0.125rem 0 rgba(0,0,0,0.05);
  box-sizing: border-box;
  color: rgba(73,73,73,1);
  background-color: transparent;
  border: none;
  box-shadow: none;
}

.c15:last-child {
  box-shadow: none;
}

.c15:last-child td {
  border-bottom-width: 0.0625rem;
}

.c33 {
  display: table-row;
  color: rgba(73,73,73,1);
  background-color: rgb(255,255,255);
  box-shadow: 0 0.125rem 0 rgba(0,0,0,0.05);
  box-sizing: border-box;
}

.c33:last-child {
  box-shadow: none;
}

.c33:last-child td {
  border-bottom-width: 0.0625rem;
}

.c16 {
  padding: 0rem;
  padding-left: 0.75rem;
}

.c30 {
  padding: 0rem;
}

.c34 {
  padding: 0rem;
  padding-left: 0.75rem;
}

.c41 {
  padding: 0rem;
}

@media only screen and (min-width:0em) {
  .c4 {
    -webkit-flex-basis: 58.333333333333336%;
    -ms-flex-preferred-size: 58.333333333333336%;
    flex-basis: 58.333333333333336%;
    max-width: 58.333333333333336%;
    display: block;
  }
}

@media only screen and (min-width:48em) {
  .c4 {
    -webkit-flex-basis: 41.66666666666667%;
    -ms-flex-preferred-size: 41.66666666666667%;
    flex-basis: 41.66666666666667%;
    max-width: 41.66666666666667%;
    display: block;
  }
}

@media only screen and (min-width:0em) {
  .c8 {
    -webkit-flex-basis: 41.66666666666667%;
    -ms-flex-preferred-size: 41.66666666666667%;
    flex-basis: 41.66666666666667%;
    max-width: 41.66666666666667%;
    display: block;
  }
}

@media only screen and (min-width:48em) {
  .c8 {
    -webkit-flex-basis: 58.333333333333336%;
    -ms-flex-preferred-size: 58.333333333333336%;
    flex-basis: 58.333333333333336%;
    max-width: 58.333333333333336%;
    display: block;
  }
}

@media only screen and (min-width:0em) {
  .c48 {
    -webkit-flex-basis: 58.333333333333336%;
    -ms-flex-preferred-size: 58.333333333333336%;
    flex-basis: 58.333333333333336%;
    max-width: 58.333333333333336%;
    display: block;
  }
}

@media only screen and (min-width:0em) {
  .c51 {
    -webkit-flex-basis: 41.66666666666667%;
    -ms-flex-preferred-size: 41.66666666666667%;
    flex-basis: 41.66666666666667%;
    max-width: 41.66666666666667%;
    display: block;
  }
}

@media only screen and (min-width:48em) {
  .c0 {
    width: 46rem;
  }
}

@media only screen and (min-width:64em) {
  .c0 {
    width: 61rem;
  }
}

@media only screen and (min-width:75em) {
  .c0 {
    width: 76rem;
  }
}

@media only screen and (max-width:47.9375rem) {
  .c0 {
    padding-left: 0.375rem;
    padding-right: 0.375rem;
  }
}

@media only screen and (min-width:48em) {
  .c46 {
    width: 46rem;
  }
}

@media only screen and (min-width:64em) {
  .c46 {
    width: 61rem;
  }
}

@media only screen and (min-width:75em) {
  .c46 {
    width: 76rem;
  }
}

@media only screen and (max-width:47.9375rem) {
  .c46 {
    padding-left: 0.375rem;
    padding-right: 0.375rem;
  }
}

@media only screen and (min-width:0em) {
  .c47 {
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
  }
}

@media only screen and (min-width:0em) {
  .c47 {
    -webkit-box-pack: justify;
    -webkit-justify-content: space-between;
    -ms-flex-pack: justify;
    justify-content: space-between;
  }
}

@media only screen and (min-width:47.9375rem) {
  .c28 {
    width: 10rem;
    display: table-cell;
  }
}

@media only screen and (min-width:47.9375rem) {
  .c29 {
    width: 8.125rem;
    display: table-cell;
  }
}

@media only screen and (min-width:47.9375rem) {
  .c39 {
    width: 10rem;
    display: table-cell;
  }
}

@media only screen and (min-width:47.9375rem) {
  .c40 {
    width: 8.125rem;
    display: table-cell;
  }
}

<div
  className="c0"
>
  <div
    className="c1 c2"
    height="1.875rem"
  />
  <form
    onSubmit={undefined}
  >
    <div
      className="c3"
    >
      <div
        className="c4"
      >
        <div
          className="c5"
          name="filter"
          role="group"
          style={undefined}
        >
          <label
            className="c6"
            htmlFor="bx"
          >
            Filter instances
          </label>
          <input
            className="c7"
            disabled={false}
            id="bx"
            placeholder="Search for name, state, tags, etc..."
          />
        </div>
      </div>
      <div
        className="c8"
      >
        <div
          className="c9"
          role="group"
          style={undefined}
        >
          <label
            className="c6"
            htmlFor="bz"
          >
            ⁣
          </label>
          <button
            className="c10 c11 c12"
            disabled={false}
            href=""
            icon={true}
            onClick={[Function]}
            type="button"
          >
            Create Instance
          </button>
        </div>
      </div>
    </div>
  </form>
  <form>
    <table
      className="c13"
    >
      <thead
        className="c14"
        disabled={undefined}
        name="thdead"
        selected={undefined}
      >
        <tr
          className="c15"
          disabled={undefined}
          name="tr"
          selected={undefined}
        >
          <th
            className="c16 c17"
            disabled={undefined}
            name="th"
            selected={undefined}
          >
            <div
              className="c18 c19 c20"
              role="group"
              style={undefined}
            >
              <li
                className="c21"
              >
                <div
                  checked={false}
                  className="c22"
                  disabled={false}
                  id="bB"
                  onChange={[Function]}
                  type="checkbox"
                >
                  <input
                    checked={false}
                    className="c23"
                    disabled={false}
                    id="bC"
                    onChange={[Function]}
                    type="checkbox"
                  />
                  <label
                    className="c24"
                    htmlFor="bC"
                  />
                </div>
              </li>
            </div>
          </th>
          <th
            className="c25"
            disabled={undefined}
            name="th"
            onClick={[Function]}
            selected={undefined}
          >
            <span>
              Name 
            </span>
            <svg
              className="c26"
              height="6"
              marginBottom="0.125rem"
              marginLeft="0.5625rem"
              style={
                Object {
                  "transform": "rotate(180deg)",
                }
              }
              viewBox="0 0 9 6"
              width="9"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M9 1.386L7.648 0 4.5 3.228 1.352 0 0 1.386 4.5 6z"
                fill="rgba(73, 73, 73, 1)"
                fillRule="evenodd"
              />
            </svg>
          </th>
          <th
            className="c27"
            disabled={undefined}
            name="th"
            onClick={[Function]}
            selected={undefined}
          >
            <span>
              Status 
            </span>
          </th>
          <th
            className="c28"
            disabled={undefined}
            name="th"
            onClick={[Function]}
            selected={undefined}
          >
            <span>
              Created 
            </span>
          </th>
          <th
            className="c29"
            disabled={undefined}
            name="th"
            onClick={[Function]}
            selected={undefined}
          >
            <span>
              Short ID 
            </span>
          </th>
          <th
            className="c30 c31"
            disabled={undefined}
            name="th"
            selected={undefined}
          />
        </tr>
      </thead>
      <tbody
        className="c32"
        disabled={undefined}
        name="tbody"
        selected={undefined}
      >
        <tr
          className="c33"
          disabled={undefined}
          name="tr"
          selected={undefined}
        >
          <td
            className="c34 c35"
            disabled={undefined}
            name="td"
            selected={undefined}
          >
            <div
              className="c18 c19 c20"
              name="2252839a-e698-ceec-afac-9549ad0c6624"
              role="group"
              style={undefined}
            >
              <li
                className="c21"
              >
                <div
                  checked={false}
                  className="c22"
                  disabled={false}
                  id="bD"
                  type="checkbox"
                >
                  <input
                    checked={false}
                    className="c23"
                    disabled={false}
                    id="bE"
                    type="checkbox"
                  />
                  <label
                    className="c24"
                    htmlFor="bE"
                  />
                </div>
              </li>
            </div>
          </td>
          <td
            className="c35"
            disabled={undefined}
            name="td"
            selected={undefined}
          >
            <a
              className="c36 c37"
              to="/instances/2252839a"
            >
              2252839a
            </a>
          </td>
          <td
            className="c35"
            disabled={undefined}
            name="td"
            selected={undefined}
          >
            <span>
              <span
                className="c38"
                color="green"
                height="0.6875rem"
                width="0.6875rem"
              />
               
              Running
            </span>
          </td>
          <td
            className="c39"
            disabled={undefined}
            name="td"
            selected={undefined}
          >
            almost NaN years
          </td>
          <td
            className="c40"
            disabled={undefined}
            name="td"
            selected={undefined}
          >
            <code>
              2252839
            </code>
          </td>
          <td
            className="c41 c42"
            disabled={undefined}
            name="td"
            selected={undefined}
          >
            <div
              box={true}
              className="c43"
              onClick={[Function]}
              onMouseEnter={undefined}
              onMouseLeave={undefined}
              tag="div"
            >
              <svg
                className=""
                height="16"
                style={
                  Object {
                    "transform": "rotate(0deg)",
                  }
                }
                viewBox="0 0 4 16"
                width="4"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M2 4a2 2 0 1 0 0-4 2 2 0 0 0 0 4z"
                  fill="rgba(73, 73, 73, 1)"
                  fill-rule="evenodd"
                />
                <path
                  d="M2 4a2 2 0 1 0 0-4 2 2 0 0 0 0 4z"
                  fill="rgba(73, 73, 73, 1)"
                  fill-rule="evenodd"
                  style={
                    Object {
                      "transform": "translateY(0.375rem)",
                    }
                  }
                />
                <path
                  d="M2 4a2 2 0 1 0 0-4 2 2 0 0 0 0 4z"
                  fill="rgba(73, 73, 73, 1)"
                  fill-rule="evenodd"
                  style={
                    Object {
                      "transform": "translateY(0.75rem)",
                    }
                  }
                />
              </svg>
            </div>
          </td>
        </tr>
        <tr
          className="c33"
          disabled={undefined}
          name="tr"
          selected={undefined}
        >
          <td
            className="c34 c35"
            disabled={undefined}
            name="td"
            selected={undefined}
          >
            <div
              className="c18 c19 c20"
              name="f1bd1730-e8a6-4956-e738-d8e85cc6aa04"
              role="group"
              style={undefined}
            >
              <li
                className="c21"
              >
                <div
                  checked={false}
                  className="c22"
                  disabled={false}
                  id="bF"
                  type="checkbox"
                >
                  <input
                    checked={false}
                    className="c23"
                    disabled={false}
                    id="bG"
                    type="checkbox"
                  />
                  <label
                    className="c24"
                    htmlFor="bG"
                  />
                </div>
              </li>
            </div>
          </td>
          <td
            className="c35"
            disabled={undefined}
            name="td"
            selected={undefined}
          >
            <a
              className="c36 c37"
              to="/instances/f1bd1730"
            >
              f1bd1730
            </a>
          </td>
          <td
            className="c35"
            disabled={undefined}
            name="td"
            selected={undefined}
          >
            <span>
              <span
                className="c38"
                color="green"
                height="0.6875rem"
                width="0.6875rem"
              />
               
              Running
            </span>
          </td>
          <td
            className="c39"
            disabled={undefined}
            name="td"
            selected={undefined}
          >
            almost NaN years
          </td>
          <td
            className="c40"
            disabled={undefined}
            name="td"
            selected={undefined}
          >
            <code>
              f1bd173
            </code>
          </td>
          <td
            className="c41 c42"
            disabled={undefined}
            name="td"
            selected={undefined}
          >
            <div
              box={true}
              className="c43"
              onClick={[Function]}
              onMouseEnter={undefined}
              onMouseLeave={undefined}
              tag="div"
            >
              <svg
                className=""
                height="16"
                style={
                  Object {
                    "transform": "rotate(0deg)",
                  }
                }
                viewBox="0 0 4 16"
                width="4"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M2 4a2 2 0 1 0 0-4 2 2 0 0 0 0 4z"
                  fill="rgba(73, 73, 73, 1)"
                  fill-rule="evenodd"
                />
                <path
                  d="M2 4a2 2 0 1 0 0-4 2 2 0 0 0 0 4z"
                  fill="rgba(73, 73, 73, 1)"
                  fill-rule="evenodd"
                  style={
                    Object {
                      "transform": "translateY(0.375rem)",
                    }
                  }
                />
                <path
                  d="M2 4a2 2 0 1 0 0-4 2 2 0 0 0 0 4z"
                  fill="rgba(73, 73, 73, 1)"
                  fill-rule="evenodd"
                  style={
                    Object {
                      "transform": "translateY(0.75rem)",
                    }
                  }
                />
              </svg>
            </div>
          </td>
        </tr>
      </tbody>
    </table>
  </form>
  <div
    className="c44 c45"
  >
    <div
      className="c46"
    >
      <div
        className="c47"
      >
        <div
          className="c48"
        >
          <span
            name="react-responsive-mock"
            query="only screen and (max-width: 47.9375rem)"
          >
            <button
              className="c49 c11 c12"
              disabled={true}
              href=""
              icon={true}
              onClick={[Function]}
              type="button"
            >
              <svg
                className=""
                height="15"
                style={
                  Object {
                    "transform": "rotate(0deg)",
                  }
                }
                version="1.1"
                width="15"
                xmlnsXlink="http://www.w3.org/1999/xlink"
              >
                <g
                  transform="translate(18292 -19563)"
                >
                  <mask
                    id="L"
                  >
                    <rect
                      fill="#fff"
                      height={15}
                      transform="matrix(6.12323e-17 1 -1 6.12323e-17 -18278 19564)"
                      width={15}
                      x={-1}
                      y={-1}
                    />
                    <use
                      fill="#000"
                      transform="matrix(6.12323e-17 1 -1 6.12323e-17 -18278 19564)"
                      xlinkHref="#M"
                    />
                  </mask>
                  <g
                    mask="url(#L"
                  >
                    <use
                      fill="rgb(216, 216, 216)"
                      transform="matrix(6.12323e-17 1 -1 6.12323e-17 -18278 19564)"
                      xlinkHref="#N"
                    />
                  </g>
                </g>
                <defs>
                  <path
                    d="M5.595 1.93a1 1 0 0 1 1.81 0l4.056 8.645A1 1 0 0 1 10.556 12H2.444a1 1 0 0 1-.905-1.425L5.595 1.93z"
                    id="M"
                  />
                  <path
                    d="M1.54 10.575l-1.812-.85 1.811.85zM7.404 1.93l-1.81.85 1.81-.85zm-1.81.85l4.055 8.645 3.621-1.7-4.055-8.644-3.621 1.698zm4.96 7.22h-8.11v4h8.11v-4zM3.35 11.425l4.055-8.646-3.621-1.698-4.056 8.645 3.622 1.699zM2.444 10a1 1 0 0 1 .906 1.425l-3.622-1.7C-1.205 11.716.247 14 2.444 14v-4zm7.206 1.425A1 1 0 0 1 10.555 10v4c2.198 0 3.65-2.285 2.716-4.274l-3.62 1.699zM9.216 1.08c-1.08-2.302-4.353-2.302-5.432 0l3.621 1.698a1 1 0 0 1-1.81 0l3.621-1.698z"
                    id="N"
                  />
                </defs>
              </svg>
            </button>
          </span>
          <span
            name="react-responsive-mock"
            query="only screen and (min-width: 48rem)"
          >
            <button
              className="c50 c11 c12"
              disabled={true}
              href=""
              icon={true}
              onClick={[Function]}
              type="button"
            >
              <svg
                className=""
                height="15"
                style={
                  Object {
                    "transform": "rotate(0deg)",
                  }
                }
                version="1.1"
                width="15"
                xmlnsXlink="http://www.w3.org/1999/xlink"
              >
                <g
                  transform="translate(18292 -19563)"
                >
                  <mask
                    id="L"
                  >
                    <rect
                      fill="#fff"
                      height={15}
                      transform="matrix(6.12323e-17 1 -1 6.12323e-17 -18278 19564)"
                      width={15}
                      x={-1}
                      y={-1}
                    />
                    <use
                      fill="#000"
                      transform="matrix(6.12323e-17 1 -1 6.12323e-17 -18278 19564)"
                      xlinkHref="#M"
                    />
                  </mask>
                  <g
                    mask="url(#L"
                  >
                    <use
                      fill="rgb(216, 216, 216)"
                      transform="matrix(6.12323e-17 1 -1 6.12323e-17 -18278 19564)"
                      xlinkHref="#N"
                    />
                  </g>
                </g>
                <defs>
                  <path
                    d="M5.595 1.93a1 1 0 0 1 1.81 0l4.056 8.645A1 1 0 0 1 10.556 12H2.444a1 1 0 0 1-.905-1.425L5.595 1.93z"
                    id="M"
                  />
                  <path
                    d="M1.54 10.575l-1.812-.85 1.811.85zM7.404 1.93l-1.81.85 1.81-.85zm-1.81.85l4.055 8.645 3.621-1.7-4.055-8.644-3.621 1.698zm4.96 7.22h-8.11v4h8.11v-4zM3.35 11.425l4.055-8.646-3.621-1.698-4.056 8.645 3.622 1.699zM2.444 10a1 1 0 0 1 .906 1.425l-3.622-1.7C-1.205 11.716.247 14 2.444 14v-4zm7.206 1.425A1 1 0 0 1 10.555 10v4c2.198 0 3.65-2.285 2.716-4.274l-3.62 1.699zM9.216 1.08c-1.08-2.302-4.353-2.302-5.432 0l3.621 1.698a1 1 0 0 1-1.81 0l3.621-1.698z"
                    id="N"
                  />
                </defs>
              </svg>
              <span>
                Start
              </span>
            </button>
          </span>
          <span
            name="react-responsive-mock"
            query="only screen and (max-width: 47.9375rem)"
          >
            <button
              className="c49 c11 c12"
              disabled={true}
              href=""
              icon={true}
              onClick={[Function]}
              type="button"
            >
              <svg
                className=""
                height="14"
                style={
                  Object {
                    "transform": "rotate(0deg)",
                  }
                }
                version="1.1"
                viewBox="0 0 14 14"
                width="14"
                xmlns="http://www.w3.org/2000/svg"
                xmlnsXlink="http://www.w3.org/1999/xlink"
              >
                <g
                  transform="translate(18113 -18582)"
                >
                  <g>
                    <mask
                      id="O"
                    >
                      <use
                        fill="white"
                        transform="translate(-18113 18582)"
                        xlinkHref="#P"
                      />
                    </mask>
                    <g
                      mask="url(#O)"
                    >
                      <use
                        fill="rgb(216, 216, 216)"
                        transform="translate(-18113 18582)"
                        xlinkHref="#Q"
                      />
                    </g>
                  </g>
                </g>
                <defs>
                  <path
                    d="M 0 2C 0 0.895431 0.895431 0 2 0L 12 0C 13.1046 0 14 0.895431 14 2L 14 12C 14 13.1046 13.1046 14 12 14L 2 14C 0.895431 14 0 13.1046 0 12L 0 2Z"
                    id="P"
                  />
                  <path
                    d="M 2 2L 12 2L 12 -2L 2 -2L 2 2ZM 12 2L 12 12L 16 12L 16 2L 12 2ZM 12 12L 2 12L 2 16L 12 16L 12 12ZM 2 12L 2 2L -2 2L -2 12L 2 12ZM 2 12L 2 12L -2 12C -2 14.2091 -0.209139 16 2 16L 2 12ZM 12 12L 12 12L 12 16C 14.2091 16 16 14.2091 16 12L 12 12ZM 12 2L 12 2L 16 2C 16 -0.209139 14.2091 -2 12 -2L 12 2ZM 2 -2C -0.209139 -2 -2 -0.209139 -2 2L 2 2L 2 2L 2 -2Z"
                    id="Q"
                  />
                </defs>
              </svg>
            </button>
          </span>
          <span
            name="react-responsive-mock"
            query="only screen and (min-width: 48rem)"
          >
            <button
              className="c50 c11 c12"
              disabled={true}
              href=""
              icon={true}
              onClick={[Function]}
              type="button"
            >
              <svg
                className=""
                height="14"
                style={
                  Object {
                    "transform": "rotate(0deg)",
                  }
                }
                version="1.1"
                viewBox="0 0 14 14"
                width="14"
                xmlns="http://www.w3.org/2000/svg"
                xmlnsXlink="http://www.w3.org/1999/xlink"
              >
                <g
                  transform="translate(18113 -18582)"
                >
                  <g>
                    <mask
                      id="O"
                    >
                      <use
                        fill="white"
                        transform="translate(-18113 18582)"
                        xlinkHref="#P"
                      />
                    </mask>
                    <g
                      mask="url(#O)"
                    >
                      <use
                        fill="rgb(216, 216, 216)"
                        transform="translate(-18113 18582)"
                        xlinkHref="#Q"
                      />
                    </g>
                  </g>
                </g>
                <defs>
                  <path
                    d="M 0 2C 0 0.895431 0.895431 0 2 0L 12 0C 13.1046 0 14 0.895431 14 2L 14 12C 14 13.1046 13.1046 14 12 14L 2 14C 0.895431 14 0 13.1046 0 12L 0 2Z"
                    id="P"
                  />
                  <path
                    d="M 2 2L 12 2L 12 -2L 2 -2L 2 2ZM 12 2L 12 12L 16 12L 16 2L 12 2ZM 12 12L 2 12L 2 16L 12 16L 12 12ZM 2 12L 2 2L -2 2L -2 12L 2 12ZM 2 12L 2 12L -2 12C -2 14.2091 -0.209139 16 2 16L 2 12ZM 12 12L 12 12L 12 16C 14.2091 16 16 14.2091 16 12L 12 12ZM 12 2L 12 2L 16 2C 16 -0.209139 14.2091 -2 12 -2L 12 2ZM 2 -2C -0.209139 -2 -2 -0.209139 -2 2L 2 2L 2 2L 2 -2Z"
                    id="Q"
                  />
                </defs>
              </svg>
              <span>
                Stop
              </span>
            </button>
          </span>
          <span
            name="react-responsive-mock"
            query="only screen and (max-width: 47.9375rem)"
          >
            <button
              className="c49 c11 c12"
              disabled={true}
              href=""
              icon={true}
              onClick={[Function]}
              type="button"
            >
              <svg
                className=""
                height="21"
                style={
                  Object {
                    "transform": "rotate(0deg)",
                  }
                }
                version="1.1"
                viewBox="0 0 20 21"
                width="20"
                xmlns="http://www.w3.org/2000/svg"
                xmlnsXlink="http://www.w3.org/1999/xlink"
              >
                <g
                  transform="translate(17997 -18577)"
                >
                  <g>
                    <use
                      fill="rgb(216, 216, 216)"
                      transform="matrix(0.866025 0.5 -0.5 0.866025 -17988.7 18577.9)"
                      xlinkHref="#K"
                    />
                  </g>
                </g>
                <defs>
                  <path
                    d="M 5.39661 3.57718L 5.3977 5.34469L 10.0255 2.67281L 5.39715 0L 5.39832 2.00201C 2.33086 2.5484 0.00065755 5.23112 0 8.45654C 0.000380483 12.0783 2.93556 15.0137 6.55562 15.0143C 10.1774 15.014 13.1128 12.0788 13.1124 8.45702L 11.5697 8.45687C 11.5697 11.2264 9.32527 13.4717 6.55578 13.4716C 3.78629 13.4716 1.54268 11.2262 1.5427 8.45669C 1.54135 6.08718 3.18616 4.10012 5.39661 3.57718Z"
                    fillRule="evenodd"
                    id="K"
                  />
                </defs>
              </svg>
            </button>
          </span>
          <span
            name="react-responsive-mock"
            query="only screen and (min-width: 48rem)"
          >
            <button
              className="c50 c11 c12"
              disabled={true}
              href=""
              icon={true}
              onClick={[Function]}
              type="button"
            >
              <svg
                className=""
                height="21"
                style={
                  Object {
                    "transform": "rotate(0deg)",
                  }
                }
                version="1.1"
                viewBox="0 0 20 21"
                width="20"
                xmlns="http://www.w3.org/2000/svg"
                xmlnsXlink="http://www.w3.org/1999/xlink"
              >
                <g
                  transform="translate(17997 -18577)"
                >
                  <g>
                    <use
                      fill="rgb(216, 216, 216)"
                      transform="matrix(0.866025 0.5 -0.5 0.866025 -17988.7 18577.9)"
                      xlinkHref="#K"
                    />
                  </g>
                </g>
                <defs>
                  <path
                    d="M 5.39661 3.57718L 5.3977 5.34469L 10.0255 2.67281L 5.39715 0L 5.39832 2.00201C 2.33086 2.5484 0.00065755 5.23112 0 8.45654C 0.000380483 12.0783 2.93556 15.0137 6.55562 15.0143C 10.1774 15.014 13.1128 12.0788 13.1124 8.45702L 11.5697 8.45687C 11.5697 11.2264 9.32527 13.4717 6.55578 13.4716C 3.78629 13.4716 1.54268 11.2262 1.5427 8.45669C 1.54135 6.08718 3.18616 4.10012 5.39661 3.57718Z"
                    fillRule="evenodd"
                    id="K"
                  />
                </defs>
              </svg>
              <span>
                Reboot
              </span>
            </button>
          </span>
        </div>
        <div
          className="c51"
        >
          <span
            name="react-responsive-mock"
            query="only screen and (max-width: 47.9375rem)"
          >
            <button
              className="c52 c11 c12"
              disabled={true}
              href=""
              icon={true}
              onClick={[Function]}
              type="button"
            >
              <svg
                className=""
                height="12"
                style={
                  Object {
                    "transform": "rotate(0deg)",
                  }
                }
                version="1.1"
                viewBox="0 0 9 12"
                width="9"
                xmlns="http://www.w3.org/2000/svg"
                xmlnsXlink="http://www.w3.org/1999/xlink"
              >
                <g
                  transform="translate(17403 -18583)"
                >
                  <g>
                    <use
                      fill="rgba(73, 73, 73, 1)"
                      transform="translate(-17403 18583)"
                      xlinkHref="#j"
                    />
                  </g>
                </g>
                <defs>
                  <path
                    d="M 2 0L 2 1L 0 1L 0 2L 9 2L 9 1L 7 1L 7 0L 2 0ZM 0 3L 1 12L 8 12L 9 3L 0 3ZM 6 4L 7.882 4L 7.104 11L 6 11L 6 4ZM 4 11L 5.001 11L 5.001 4L 4 4L 4 11ZM 1.11719 4L 3.00019 4L 3.00019 11L 1.89619 11L 1.11719 4Z"
                    fillRule="evenodd"
                    id="j"
                  />
                </defs>
              </svg>
            </button>
          </span>
          <span
            name="react-responsive-mock"
            query="only screen and (min-width: 48rem)"
          >
            <button
              className="c53 c11 c12"
              disabled={true}
              href=""
              icon={true}
              onClick={[Function]}
              type="button"
            >
              <svg
                className=""
                height="12"
                style={
                  Object {
                    "transform": "rotate(0deg)",
                  }
                }
                version="1.1"
                viewBox="0 0 9 12"
                width="9"
                xmlns="http://www.w3.org/2000/svg"
                xmlnsXlink="http://www.w3.org/1999/xlink"
              >
                <g
                  transform="translate(17403 -18583)"
                >
                  <g>
                    <use
                      fill="rgb(216, 216, 216)"
                      transform="translate(-17403 18583)"
                      xlinkHref="#j"
                    />
                  </g>
                </g>
                <defs>
                  <path
                    d="M 2 0L 2 1L 0 1L 0 2L 9 2L 9 1L 7 1L 7 0L 2 0ZM 0 3L 1 12L 8 12L 9 3L 0 3ZM 6 4L 7.882 4L 7.104 11L 6 11L 6 4ZM 4 11L 5.001 11L 5.001 4L 4 4L 4 11ZM 1.11719 4L 3.00019 4L 3.00019 11L 1.89619 11L 1.11719 4Z"
                    fillRule="evenodd"
                    id="j"
                  />
                </defs>
              </svg>
              <span>
                Remove
              </span>
            </button>
          </span>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`renders <List instances selected=all /> without throwing 1`] = `
.c37 {
  background-color: transparent;
  text-decoration-skip: objects;
}

.c36 {
  color: rgb(59,70,204);
  -webkit-text-fill-color: currentcolor;
}

.c36:hover {
  text-decoration: none;
}

.c12 {
  font-family: sans-serif;
  font-size: 100%;
  line-height: 1.15;
  margin: 0;
  overflow: visible;
  text-transform: none;
  -webkit-appearance: button;
  -moz-appearance: button;
  appearance: button;
  min-width: 7.5rem;
}

.c12::-moz-focus-inner,
.c12[type='button']::-moz-focus-inner,
.c12[type='reset']::-moz-focus-inner,
.c12[type='submit']::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

.c12:-moz-focusring,
.c12[type='button']:-moz-focusring,
.c12[type='reset']:-moz-focusring,
.c12[type='submit']:-moz-focusring {
  outline: 0.0625rem dotted ButtonText;
}

.c12 + button {
  margin-left: 0.375rem;
}

.c11 {
  display: inline-block;
}

.c10 {
  box-sizing: border-box;
  display: inline-block;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-height: 3rem;
  height: 3rem;
  min-width: 7.5rem;
  margin-bottom: 0.5rem;
  margin-top: 0.5rem;
  padding: 0.9375rem 1.125rem;
  position: relative;
  font-size: 0.9375rem;
  text-align: center;
  font-style: normal;
  font-stretch: normal;
  line-height: normal;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  text-decoration: none;
  white-space: nowrap;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  color: rgb(255,255,255);
  -webkit-text-fill-color: currentcolor;
  background-image: none;
  background-color: rgb(59,70,204);
  border-radius: 0.25rem;
  border: solid 0.0625rem rgb(45,56,132);
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 100%;
  max-width: 100%;
}

.c10:focus {
  outline: 0;
  text-decoration: none;
  background-color: rgb(59,70,204);
  border-color: rgb(45,56,132);
}

.c10:hover {
  background-color: rgb(72,83,217);
  border: solid 0.0625rem rgb(45,56,132);
}

.c10:active,
.c10:active:hover,
.c10:active:focus {
  background-image: none;
  outline: 0;
  background-color: rgb(45,56,132);
  border-color: rgb(45,56,132);
}

.c10[disabled] {
  cursor: not-allowed;
  pointer-events: none;
}

.c10 svg + span {
  margin-left: 0.75rem;
}

.c10 svg {
  max-height: 1.125rem;
}

.c49 {
  box-sizing: border-box;
  display: inline-block;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-height: 3rem;
  height: 3rem;
  min-width: 7.5rem;
  margin-bottom: 0.5rem;
  margin-top: 0.5rem;
  padding: 0.9375rem 1.125rem;
  position: relative;
  font-size: 0.9375rem;
  text-align: center;
  font-style: normal;
  font-stretch: normal;
  line-height: normal;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  text-decoration: none;
  white-space: nowrap;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  color: rgb(255,255,255);
  -webkit-text-fill-color: currentcolor;
  background-image: none;
  background-color: rgb(59,70,204);
  border-radius: 0.25rem;
  border: solid 0.0625rem rgb(45,56,132);
  color: rgb(70,70,70);
  -webkit-text-fill-color: currentcolor;
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
  cursor: not-allowed;
  pointer-events: none;
  color: rgb(216,216,216);
  background-color: rgb(250,250,250);
  border-color: rgb(216,216,216);
  padding: 0.5625rem 1.125rem;
  font-size: 0.8125rem;
  min-width: 0rem;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c49:focus {
  outline: 0;
  text-decoration: none;
  background-color: rgb(59,70,204);
  border-color: rgb(45,56,132);
}

.c49:hover {
  background-color: rgb(72,83,217);
  border: solid 0.0625rem rgb(45,56,132);
}

.c49:active,
.c49:active:hover,
.c49:active:focus {
  background-image: none;
  outline: 0;
  background-color: rgb(45,56,132);
  border-color: rgb(45,56,132);
}

.c49[disabled] {
  cursor: not-allowed;
  pointer-events: none;
}

.c49:focus {
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
}

.c49:hover {
  background-color: rgb(247,247,247);
  border-color: rgb(216,216,216);
}

.c49:active,
.c49:active:hover,
.c49:active:focus {
  background-color: rgb(230,230,230);
  border-color: rgb(216,216,216);
}

.c49:focus {
  background-color: rgb(250,250,250);
  border-color: rgb(216,216,216);
}

.c49:hover {
  background-color: rgb(250,250,250);
  border-color: rgb(250,250,250);
}

.c49:active,
.c49:active:hover,
.c49:active:focus {
  background-color: rgb(250,250,250);
  border-color: rgb(250,250,250);
}

.c49 svg + span {
  margin-left: 0.75rem;
}

.c49 svg {
  max-height: 1.125rem;
}

.c50 {
  box-sizing: border-box;
  display: inline-block;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-height: 3rem;
  height: 3rem;
  min-width: 7.5rem;
  margin-bottom: 0.5rem;
  margin-top: 0.5rem;
  padding: 0.9375rem 1.125rem;
  position: relative;
  font-size: 0.9375rem;
  text-align: center;
  font-style: normal;
  font-stretch: normal;
  line-height: normal;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  text-decoration: none;
  white-space: nowrap;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  color: rgb(255,255,255);
  -webkit-text-fill-color: currentcolor;
  background-image: none;
  background-color: rgb(59,70,204);
  border-radius: 0.25rem;
  border: solid 0.0625rem rgb(45,56,132);
  color: rgb(70,70,70);
  -webkit-text-fill-color: currentcolor;
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
  cursor: not-allowed;
  pointer-events: none;
  color: rgb(216,216,216);
  background-color: rgb(250,250,250);
  border-color: rgb(216,216,216);
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c50:focus {
  outline: 0;
  text-decoration: none;
  background-color: rgb(59,70,204);
  border-color: rgb(45,56,132);
}

.c50:hover {
  background-color: rgb(72,83,217);
  border: solid 0.0625rem rgb(45,56,132);
}

.c50:active,
.c50:active:hover,
.c50:active:focus {
  background-image: none;
  outline: 0;
  background-color: rgb(45,56,132);
  border-color: rgb(45,56,132);
}

.c50[disabled] {
  cursor: not-allowed;
  pointer-events: none;
}

.c50:focus {
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
}

.c50:hover {
  background-color: rgb(247,247,247);
  border-color: rgb(216,216,216);
}

.c50:active,
.c50:active:hover,
.c50:active:focus {
  background-color: rgb(230,230,230);
  border-color: rgb(216,216,216);
}

.c50:focus {
  background-color: rgb(250,250,250);
  border-color: rgb(216,216,216);
}

.c50:hover {
  background-color: rgb(250,250,250);
  border-color: rgb(250,250,250);
}

.c50:active,
.c50:active:hover,
.c50:active:focus {
  background-color: rgb(250,250,250);
  border-color: rgb(250,250,250);
}

.c50 svg + span {
  margin-left: 0.75rem;
}

.c50 svg {
  max-height: 1.125rem;
}

.c52 {
  box-sizing: border-box;
  display: inline-block;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-height: 3rem;
  height: 3rem;
  min-width: 7.5rem;
  margin-bottom: 0.5rem;
  margin-top: 0.5rem;
  padding: 0.9375rem 1.125rem;
  position: relative;
  font-size: 0.9375rem;
  text-align: center;
  font-style: normal;
  font-stretch: normal;
  line-height: normal;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  text-decoration: none;
  white-space: nowrap;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  color: rgb(255,255,255);
  -webkit-text-fill-color: currentcolor;
  background-image: none;
  background-color: rgb(59,70,204);
  border-radius: 0.25rem;
  border: solid 0.0625rem rgb(45,56,132);
  color: rgb(70,70,70);
  -webkit-text-fill-color: currentcolor;
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
  color: rgb(210,67,58);
  -webkit-text-fill-color: currentcolor;
  background-color: rgb(255,255,255);
  border-color: rgb(210,67,58);
  cursor: not-allowed;
  pointer-events: none;
  color: rgb(216,216,216);
  background-color: rgb(250,250,250);
  border-color: rgb(216,216,216);
  padding: 0.5625rem 1.125rem;
  font-size: 0.8125rem;
  min-width: 0rem;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  float: right;
}

.c52:focus {
  outline: 0;
  text-decoration: none;
  background-color: rgb(59,70,204);
  border-color: rgb(45,56,132);
}

.c52:hover {
  background-color: rgb(72,83,217);
  border: solid 0.0625rem rgb(45,56,132);
}

.c52:active,
.c52:active:hover,
.c52:active:focus {
  background-image: none;
  outline: 0;
  background-color: rgb(45,56,132);
  border-color: rgb(45,56,132);
}

.c52[disabled] {
  cursor: not-allowed;
  pointer-events: none;
}

.c52:focus {
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
}

.c52:hover {
  background-color: rgb(247,247,247);
  border-color: rgb(216,216,216);
}

.c52:active,
.c52:active:hover,
.c52:active:focus {
  background-color: rgb(230,230,230);
  border-color: rgb(216,216,216);
}

.c52:focus {
  background-color: rgb(255,255,255);
  border-color: rgb(210,67,58);
}

.c52:hover {
  background-color: rgb(247,247,247);
  border-color: rgb(210,67,58);
}

.c52:active,
.c52:active:hover,
.c52:active:focus {
  background-color: rgb(230,230,230);
  border-color: rgb(210,67,58);
}

.c52:focus {
  background-color: rgb(250,250,250);
  border-color: rgb(216,216,216);
}

.c52:hover {
  background-color: rgb(250,250,250);
  border-color: rgb(250,250,250);
}

.c52:active,
.c52:active:hover,
.c52:active:focus {
  background-color: rgb(250,250,250);
  border-color: rgb(250,250,250);
}

.c52 svg + span {
  margin-left: 0.75rem;
}

.c52 svg {
  max-height: 1.125rem;
}

.c53 {
  box-sizing: border-box;
  display: inline-block;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-height: 3rem;
  height: 3rem;
  min-width: 7.5rem;
  margin-bottom: 0.5rem;
  margin-top: 0.5rem;
  padding: 0.9375rem 1.125rem;
  position: relative;
  font-size: 0.9375rem;
  text-align: center;
  font-style: normal;
  font-stretch: normal;
  line-height: normal;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  text-decoration: none;
  white-space: nowrap;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  color: rgb(255,255,255);
  -webkit-text-fill-color: currentcolor;
  background-image: none;
  background-color: rgb(59,70,204);
  border-radius: 0.25rem;
  border: solid 0.0625rem rgb(45,56,132);
  color: rgb(70,70,70);
  -webkit-text-fill-color: currentcolor;
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
  color: rgb(210,67,58);
  -webkit-text-fill-color: currentcolor;
  background-color: rgb(255,255,255);
  border-color: rgb(210,67,58);
  cursor: not-allowed;
  pointer-events: none;
  color: rgb(216,216,216);
  background-color: rgb(250,250,250);
  border-color: rgb(216,216,216);
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  float: right;
}

.c53:focus {
  outline: 0;
  text-decoration: none;
  background-color: rgb(59,70,204);
  border-color: rgb(45,56,132);
}

.c53:hover {
  background-color: rgb(72,83,217);
  border: solid 0.0625rem rgb(45,56,132);
}

.c53:active,
.c53:active:hover,
.c53:active:focus {
  background-image: none;
  outline: 0;
  background-color: rgb(45,56,132);
  border-color: rgb(45,56,132);
}

.c53[disabled] {
  cursor: not-allowed;
  pointer-events: none;
}

.c53:focus {
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
}

.c53:hover {
  background-color: rgb(247,247,247);
  border-color: rgb(216,216,216);
}

.c53:active,
.c53:active:hover,
.c53:active:focus {
  background-color: rgb(230,230,230);
  border-color: rgb(216,216,216);
}

.c53:focus {
  background-color: rgb(255,255,255);
  border-color: rgb(210,67,58);
}

.c53:hover {
  background-color: rgb(247,247,247);
  border-color: rgb(210,67,58);
}

.c53:active,
.c53:active:hover,
.c53:active:focus {
  background-color: rgb(230,230,230);
  border-color: rgb(210,67,58);
}

.c53:focus {
  background-color: rgb(250,250,250);
  border-color: rgb(216,216,216);
}

.c53:hover {
  background-color: rgb(250,250,250);
  border-color: rgb(250,250,250);
}

.c53:active,
.c53:active:hover,
.c53:active:focus {
  background-color: rgb(250,250,250);
  border-color: rgb(250,250,250);
}

.c53 svg + span {
  margin-left: 0.75rem;
}

.c53 svg {
  max-height: 1.125rem;
}

.c2 {
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 0 1 auto;
  -ms-flex: 0 1 auto;
  flex: 0 1 auto;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-right: -0.5rem;
  margin-left: -0.5rem;
}

.c4 {
  box-sizing: border-box;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  padding-right: 0.5rem;
  padding-left: 0.5rem;
}

.c8 {
  box-sizing: border-box;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  padding-right: 0.5rem;
  padding-left: 0.5rem;
}

.c48 {
  box-sizing: border-box;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  padding-right: 0.5rem;
  padding-left: 0.5rem;
}

.c51 {
  box-sizing: border-box;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  padding-right: 0.5rem;
  padding-left: 0.5rem;
}

.c0 {
  margin-right: auto;
  margin-left: auto;
  box-sizing: border-box;
  width: 100%;
  max-width: 62.5rem;
  padding-bottom: 1.125rem;
}

.c1 {
  background-color: rgb(216,216,216);
  margin: 0;
  background-color: transparent;
  height: 1.875rem;
}

.c46 {
  margin-right: auto;
  margin-left: auto;
  box-sizing: border-box;
  width: 100%;
  max-width: 62.5rem;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: nowrap;
  -ms-flex-wrap: nowrap;
  flex-wrap: nowrap;
  -webkit-align-content: stretch;
  -ms-flex-line-pack: stretch;
  align-content: stretch;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
}

.c45 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex-wrap: nowrap;
  -ms-flex-wrap: nowrap;
  flex-wrap: nowrap;
  -webkit-align-content: stretch;
  -ms-flex-line-pack: stretch;
  align-content: stretch;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  background-color: rgb(30,49,59);
  max-height: 3.3125rem;
  min-height: 3.3125rem;
  line-height: 1.5625rem;
  position: fixed;
  left: 0;
  right: 0;
  bottom: 0;
}

.c44 {
  background-color: rgba(241,241,241,1);
  border-top: 0.0625rem solid rgb(216,216,216);
  height: 4.375rem;
  max-height: 4.375rem;
}

.c3 {
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 0 1 auto;
  -ms-flex: 0 1 auto;
  flex: 0 1 auto;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-right: -0.5rem;
  margin-left: -0.5rem;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
}

.c47 {
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 0 1 auto;
  -ms-flex: 0 1 auto;
  flex: 0 1 auto;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-right: -0.5rem;
  margin-left: -0.5rem;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
}

.c26 {
  margin-bottom: 0.125rem;
  margin-left: 0.5625rem;
}

.c38 {
  width: 0.375rem;
  height: 0.375rem;
  border-radius: 0.1875rem;
  background-color: rgb(0,152,88);
  display: inline-block;
  height: 0.6875rem;
  width: 0.6875rem;
  border-radius: 0.6875rem;
}

.c23 {
  font-family: sans-serif;
  font-size: 100%;
  line-height: 1.15;
  margin: 0;
  overflow: visible;
  display: none;
}

.c23[type='checkbox'],
.c23[type='radio'] {
  box-sizing: border-box;
  padding: 0;
}

.c23[type='number']::-webkit-inner-spin-button,
.c23[type='number']::-webkit-outer-spin-button {
  height: auto;
}

.c23[type='search'] {
  -webkit-appearance: textfield;
  -moz-appearance: textfield;
  appearance: textfield;
  outline-offset: -0.125rem;
}

.c23[type='search']::-webkit-search-cancel-button,
.c23[type='search']::-webkit-search-decoration {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.c23::-webkit-file-upload-button {
  -webkit-appearance: button;
  -moz-appearance: button;
  appearance: button;
  font: inherit;
}

.c23:checked + label::after {
  opacity: 1;
}

.c23:selected + label::after {
  opacity: 1;
}

.c23:checked + label {
  border-color: rgb(59,70,204);
}

.c23:selected + label {
  border-color: rgb(59,70,204);
}

.c23:disabled + label {
  background-color: rgb(249,249,249);
  cursor: not-allowed;
}

.c24 {
  color: rgb(100,100,100);
  position: absolute;
  width: 1.125rem;
  height: 1.125rem;
  box-sizing: border-box;
  top: 0;
  right: 0;
  cursor: pointer;
  background-color: rgb(255,255,255);
  box-shadow: none;
  border: 0.0625rem solid rgb(216,216,216);
  cursor: pointer;
  border-radius: 0.25rem;
  width: 1.125rem;
  height: 1.125rem;
}

.c24::after {
  opacity: 0;
  content: '';
  position: absolute;
  width: 0.375rem;
  height: 0.125rem;
  background: transparent;
  top: 0.3125rem;
  left: 0.25rem;
  border: 0.125rem solid rgb(45,45,45);
  border-top: none;
  border-right: none;
  -webkit-transform: rotate(-45deg);
  -ms-transform: rotate(-45deg);
  transform: rotate(-45deg);
}

.c22 {
  display: inline-block;
  vertical-align: text-bottom;
  width: 1.125rem;
  height: 1.125rem;
  position: relative;
  cursor: pointer;
}

.c21 {
  list-style-type: none;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c21 label {
  font-weight: 400;
}

.c5 {
  display: inline-block;
  margin: 0;
  padding: 0;
  border: none;
  overflow: hidden;
  height: auto;
  -webkit-margin-start: 0;
  -webkit-margin-end: 0;
  -webkit-padding-before: 0;
  -webkit-padding-start: 0;
  -webkit-padding-end: 0;
  -webkit-padding-after: 0;
  width: 100%;
}

.c9 {
  display: inline-block;
  margin: 0;
  padding: 0;
  border: none;
  overflow: hidden;
  height: auto;
  -webkit-margin-start: 0;
  -webkit-margin-end: 0;
  -webkit-padding-before: 0;
  -webkit-padding-start: 0;
  -webkit-padding-end: 0;
  -webkit-padding-after: 0;
  float: right;
}

.c20 {
  display: inline-block;
  margin: 0;
  padding: 0;
  border: none;
  overflow: hidden;
  height: auto;
  -webkit-margin-start: 0;
  -webkit-margin-end: 0;
  -webkit-padding-before: 0;
  -webkit-padding-start: 0;
  -webkit-padding-end: 0;
  -webkit-padding-after: 0;
}

.c19 {
  padding-top: 0.25rem;
}

.c18 {
  padding-top: 0.25rem;
}

.c7 {
  box-sizing: border-box;
  width: 18.75rem;
  height: 3rem;
  min-height: 3rem;
  margin-bottom: 0.5rem;
  margin-top: 0.5rem;
  padding: 0.8125rem 1.125rem;
  border-radius: 0.25rem;
  background-color: rgb(255,255,255);
  border: 0.0625rem solid rgb(216,216,216);
  color: rgba(73,73,73,1);
  width: 100%;
  text-overflow: ellipsis;
  font-size: 0.9375rem;
  line-height: normal !important;
  font-style: normal;
  font-stretch: normal;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  outline: 0;
}

.c7::-webkit-input-placeholder {
  color: rgba(73,73,73,0.5);
}

.c7::-moz-placeholder {
  color: rgba(73,73,73,0.5);
}

.c7:-ms-input-placeholder {
  color: rgba(73,73,73,0.5);
}

.c7:invalid {
  box-shadow: none;
}

.c7:disabled {
  background-color: rgb(250,250,250);
  color: rgb(216,216,216);
  cursor: not-allowed;
}

.c7:disabled::-webkit-input-placeholder {
  color: rgba(73,73,73,0.5);
}

.c7:disabled::-moz-placeholder {
  color: rgba(73,73,73,0.5);
}

.c7:disabled:-ms-input-placeholder {
  color: rgba(73,73,73,0.5);
}

.c7:focus {
  border-color: rgb(59,70,204);
  outline: 0;
}

.c6 {
  font-size: 0.9375rem;
  font-style: normal;
  font-stretch: normal;
  display: block;
  color: rgb(70,70,70);
  text-align: left;
  margin-right: 0.75rem;
  font-weight: bold;
  white-space: pre;
  font-size: 0.8125rem;
}

.c43 {
  cursor: pointer;
  height: 100%;
  width: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c13 {
  overflow: hidden;
  border-spacing: 0;
  border-collapse: separate;
  table-layout: fixed;
  width: 100%;
  max-width: 100%;
}

.c14 {
  width: 100%;
  background: rgb(250,250,250);
}

.c14 th:first-child {
  border-top-left-radius: 0.25rem;
}

.c14 th:last-child {
  border-top-right-radius: 0.25rem;
}

.c32 {
  width: 100%;
}

.c32 tr:first-child td {
  border-top: none;
}

.c17 {
  border-width: 0.0625rem;
  border-style: solid;
  border-color: rgb(216,216,216);
  border-spacing: 0;
  white-space: nowrap;
  box-sizing: border-box;
  padding: 0 1.5rem;
  height: 3.75rem;
  width: 2rem;
  display: table-cell;
  vertical-align: middle;
  text-align: left;
  height: 2.625rem;
  color: rgb(189,189,189);
  font-weight: 500;
}

.c17:not(:first-child) {
  border-left-width: 0;
}

.c17:not(:last-child) {
  border-right-width: 0;
}

.c25 {
  border-width: 0.0625rem;
  border-style: solid;
  border-color: rgb(216,216,216);
  border-spacing: 0;
  white-space: nowrap;
  box-sizing: border-box;
  padding: 0 1.5rem;
  height: 3.75rem;
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  vertical-align: middle;
  text-align: left;
  height: 2.625rem;
  color: rgb(189,189,189);
  font-weight: 500;
  color: rgba(73,73,73,1);
  font-weight: bold;
}

.c25:not(:first-child) {
  border-left-width: 0;
}

.c25:not(:last-child) {
  border-right-width: 0;
}

.c27 {
  border-width: 0.0625rem;
  border-style: solid;
  border-color: rgb(216,216,216);
  border-spacing: 0;
  white-space: nowrap;
  box-sizing: border-box;
  padding: 0 1.5rem;
  height: 3.75rem;
  width: 9.375rem;
  display: table-cell;
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  vertical-align: middle;
  text-align: left;
  height: 2.625rem;
  color: rgb(189,189,189);
  font-weight: 500;
}

.c27:not(:first-child) {
  border-left-width: 0;
}

.c27:not(:last-child) {
  border-right-width: 0;
}

.c28 {
  border-width: 0.0625rem;
  border-style: solid;
  border-color: rgb(216,216,216);
  border-spacing: 0;
  white-space: nowrap;
  box-sizing: border-box;
  padding: 0 1.5rem;
  height: 3.75rem;
  width: 0rem;
  display: none;
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  vertical-align: middle;
  text-align: left;
  height: 2.625rem;
  color: rgb(189,189,189);
  font-weight: 500;
}

.c28:not(:first-child) {
  border-left-width: 0;
}

.c28:not(:last-child) {
  border-right-width: 0;
}

.c29 {
  border-width: 0.0625rem;
  border-style: solid;
  border-color: rgb(216,216,216);
  border-spacing: 0;
  white-space: nowrap;
  box-sizing: border-box;
  padding: 0 1.5rem;
  height: 3.75rem;
  width: 0rem;
  display: none;
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  vertical-align: middle;
  text-align: left;
  height: 2.625rem;
  color: rgb(189,189,189);
  font-weight: 500;
}

.c29:not(:first-child) {
  border-left-width: 0;
}

.c29:not(:last-child) {
  border-right-width: 0;
}

.c31 {
  border-width: 0.0625rem;
  border-style: solid;
  border-color: rgb(216,216,216);
  border-spacing: 0;
  white-space: nowrap;
  box-sizing: border-box;
  padding: 0 1.5rem;
  height: 3.75rem;
  width: 3.75rem;
  display: table-cell;
  height: 2.625rem;
  color: rgb(189,189,189);
  font-weight: 500;
}

.c31:not(:first-child) {
  border-left-width: 0;
}

.c31:not(:last-child) {
  border-right-width: 0;
}

.c35 {
  border-width: 0.0625rem;
  border-style: solid;
  border-color: rgb(216,216,216);
  border-spacing: 0;
  white-space: nowrap;
  box-sizing: border-box;
  padding: 0 1.5rem;
  height: 3.75rem;
  vertical-align: middle;
  text-align: left;
  border-bottom-width: 0;
}

.c35:not(:first-child) {
  border-left-width: 0;
}

.c35:not(:last-child) {
  border-right-width: 0;
}

.c39 {
  border-width: 0.0625rem;
  border-style: solid;
  border-color: rgb(216,216,216);
  border-spacing: 0;
  white-space: nowrap;
  box-sizing: border-box;
  padding: 0 1.5rem;
  height: 3.75rem;
  width: 0rem;
  display: none;
  vertical-align: middle;
  text-align: left;
  border-bottom-width: 0;
}

.c39:not(:first-child) {
  border-left-width: 0;
}

.c39:not(:last-child) {
  border-right-width: 0;
}

.c40 {
  border-width: 0.0625rem;
  border-style: solid;
  border-color: rgb(216,216,216);
  border-spacing: 0;
  white-space: nowrap;
  box-sizing: border-box;
  padding: 0 1.5rem;
  height: 3.75rem;
  width: 0rem;
  display: none;
  vertical-align: middle;
  text-align: left;
  border-bottom-width: 0;
}

.c40:not(:first-child) {
  border-left-width: 0;
}

.c40:not(:last-child) {
  border-right-width: 0;
}

.c42 {
  border-width: 0.0625rem;
  border-style: solid;
  border-color: rgb(216,216,216);
  border-spacing: 0;
  white-space: nowrap;
  box-sizing: border-box;
  padding: 0 1.5rem;
  height: 3.75rem;
  border-bottom-width: 0;
  border-left-width: 0.0625rem !important;
}

.c42:not(:first-child) {
  border-left-width: 0;
}

.c42:not(:last-child) {
  border-right-width: 0;
}

.c15 {
  display: table-row;
  color: rgba(73,73,73,1);
  background-color: rgb(255,255,255);
  box-shadow: 0 0.125rem 0 rgba(0,0,0,0.05);
  box-sizing: border-box;
  color: rgba(73,73,73,1);
  background-color: transparent;
  border: none;
  box-shadow: none;
}

.c15:last-child {
  box-shadow: none;
}

.c15:last-child td {
  border-bottom-width: 0.0625rem;
}

.c33 {
  display: table-row;
  color: rgba(73,73,73,1);
  background-color: rgb(255,255,255);
  box-shadow: 0 0.125rem 0 rgba(0,0,0,0.05);
  box-sizing: border-box;
}

.c33:last-child {
  box-shadow: none;
}

.c33:last-child td {
  border-bottom-width: 0.0625rem;
}

.c16 {
  padding: 0rem;
  padding-left: 0.75rem;
}

.c30 {
  padding: 0rem;
}

.c34 {
  padding: 0rem;
  padding-left: 0.75rem;
}

.c41 {
  padding: 0rem;
}

@media only screen and (min-width:0em) {
  .c4 {
    -webkit-flex-basis: 58.333333333333336%;
    -ms-flex-preferred-size: 58.333333333333336%;
    flex-basis: 58.333333333333336%;
    max-width: 58.333333333333336%;
    display: block;
  }
}

@media only screen and (min-width:48em) {
  .c4 {
    -webkit-flex-basis: 41.66666666666667%;
    -ms-flex-preferred-size: 41.66666666666667%;
    flex-basis: 41.66666666666667%;
    max-width: 41.66666666666667%;
    display: block;
  }
}

@media only screen and (min-width:0em) {
  .c8 {
    -webkit-flex-basis: 41.66666666666667%;
    -ms-flex-preferred-size: 41.66666666666667%;
    flex-basis: 41.66666666666667%;
    max-width: 41.66666666666667%;
    display: block;
  }
}

@media only screen and (min-width:48em) {
  .c8 {
    -webkit-flex-basis: 58.333333333333336%;
    -ms-flex-preferred-size: 58.333333333333336%;
    flex-basis: 58.333333333333336%;
    max-width: 58.333333333333336%;
    display: block;
  }
}

@media only screen and (min-width:0em) {
  .c48 {
    -webkit-flex-basis: 58.333333333333336%;
    -ms-flex-preferred-size: 58.333333333333336%;
    flex-basis: 58.333333333333336%;
    max-width: 58.333333333333336%;
    display: block;
  }
}

@media only screen and (min-width:0em) {
  .c51 {
    -webkit-flex-basis: 41.66666666666667%;
    -ms-flex-preferred-size: 41.66666666666667%;
    flex-basis: 41.66666666666667%;
    max-width: 41.66666666666667%;
    display: block;
  }
}

@media only screen and (min-width:48em) {
  .c0 {
    width: 46rem;
  }
}

@media only screen and (min-width:64em) {
  .c0 {
    width: 61rem;
  }
}

@media only screen and (min-width:75em) {
  .c0 {
    width: 76rem;
  }
}

@media only screen and (max-width:47.9375rem) {
  .c0 {
    padding-left: 0.375rem;
    padding-right: 0.375rem;
  }
}

@media only screen and (min-width:48em) {
  .c46 {
    width: 46rem;
  }
}

@media only screen and (min-width:64em) {
  .c46 {
    width: 61rem;
  }
}

@media only screen and (min-width:75em) {
  .c46 {
    width: 76rem;
  }
}

@media only screen and (max-width:47.9375rem) {
  .c46 {
    padding-left: 0.375rem;
    padding-right: 0.375rem;
  }
}

@media only screen and (min-width:0em) {
  .c47 {
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
  }
}

@media only screen and (min-width:0em) {
  .c47 {
    -webkit-box-pack: justify;
    -webkit-justify-content: space-between;
    -ms-flex-pack: justify;
    justify-content: space-between;
  }
}

@media only screen and (min-width:47.9375rem) {
  .c28 {
    width: 10rem;
    display: table-cell;
  }
}

@media only screen and (min-width:47.9375rem) {
  .c29 {
    width: 8.125rem;
    display: table-cell;
  }
}

@media only screen and (min-width:47.9375rem) {
  .c39 {
    width: 10rem;
    display: table-cell;
  }
}

@media only screen and (min-width:47.9375rem) {
  .c40 {
    width: 8.125rem;
    display: table-cell;
  }
}

<div
  className="c0"
>
  <div
    className="c1 c2"
    height="1.875rem"
  />
  <form
    onSubmit={undefined}
  >
    <div
      className="c3"
    >
      <div
        className="c4"
      >
        <div
          className="c5"
          name="filter"
          role="group"
          style={undefined}
        >
          <label
            className="c6"
            htmlFor="bH"
          >
            Filter instances
          </label>
          <input
            className="c7"
            disabled={false}
            id="bH"
            placeholder="Search for name, state, tags, etc..."
          />
        </div>
      </div>
      <div
        className="c8"
      >
        <div
          className="c9"
          role="group"
          style={undefined}
        >
          <label
            className="c6"
            htmlFor="bJ"
          >
            ⁣
          </label>
          <button
            className="c10 c11 c12"
            disabled={false}
            href=""
            icon={true}
            onClick={[Function]}
            type="button"
          >
            Create Instance
          </button>
        </div>
      </div>
    </div>
  </form>
  <form>
    <table
      className="c13"
    >
      <thead
        className="c14"
        disabled={undefined}
        name="thdead"
        selected={undefined}
      >
        <tr
          className="c15"
          disabled={undefined}
          name="tr"
          selected={undefined}
        >
          <th
            className="c16 c17"
            disabled={undefined}
            name="th"
            selected={undefined}
          >
            <div
              className="c18 c19 c20"
              role="group"
              style={undefined}
            >
              <li
                className="c21"
              >
                <div
                  checked={true}
                  className="c22"
                  disabled={false}
                  id="bL"
                  onChange={[Function]}
                  type="checkbox"
                >
                  <input
                    checked={true}
                    className="c23"
                    disabled={false}
                    id="bM"
                    onChange={[Function]}
                    type="checkbox"
                  />
                  <label
                    className="c24"
                    htmlFor="bM"
                  />
                </div>
              </li>
            </div>
          </th>
          <th
            className="c25"
            disabled={undefined}
            name="th"
            onClick={[Function]}
            selected={undefined}
          >
            <span>
              Name 
            </span>
            <svg
              className="c26"
              height="6"
              marginBottom="0.125rem"
              marginLeft="0.5625rem"
              style={
                Object {
                  "transform": "rotate(180deg)",
                }
              }
              viewBox="0 0 9 6"
              width="9"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M9 1.386L7.648 0 4.5 3.228 1.352 0 0 1.386 4.5 6z"
                fill="rgba(73, 73, 73, 1)"
                fillRule="evenodd"
              />
            </svg>
          </th>
          <th
            className="c27"
            disabled={undefined}
            name="th"
            onClick={[Function]}
            selected={undefined}
          >
            <span>
              Status 
            </span>
          </th>
          <th
            className="c28"
            disabled={undefined}
            name="th"
            onClick={[Function]}
            selected={undefined}
          >
            <span>
              Created 
            </span>
          </th>
          <th
            className="c29"
            disabled={undefined}
            name="th"
            onClick={[Function]}
            selected={undefined}
          >
            <span>
              Short ID 
            </span>
          </th>
          <th
            className="c30 c31"
            disabled={undefined}
            name="th"
            selected={undefined}
          />
        </tr>
      </thead>
      <tbody
        className="c32"
        disabled={undefined}
        name="tbody"
        selected={undefined}
      >
        <tr
          className="c33"
          disabled={undefined}
          name="tr"
          selected={undefined}
        >
          <td
            className="c34 c35"
            disabled={undefined}
            name="td"
            selected={undefined}
          >
            <div
              className="c18 c19 c20"
              name="2252839a-e698-ceec-afac-9549ad0c6624"
              role="group"
              style={undefined}
            >
              <li
                className="c21"
              >
                <div
                  checked={false}
                  className="c22"
                  disabled={false}
                  id="bN"
                  type="checkbox"
                >
                  <input
                    checked={false}
                    className="c23"
                    disabled={false}
                    id="bO"
                    type="checkbox"
                  />
                  <label
                    className="c24"
                    htmlFor="bO"
                  />
                </div>
              </li>
            </div>
          </td>
          <td
            className="c35"
            disabled={undefined}
            name="td"
            selected={undefined}
          >
            <a
              className="c36 c37"
              to="/instances/2252839a"
            >
              2252839a
            </a>
          </td>
          <td
            className="c35"
            disabled={undefined}
            name="td"
            selected={undefined}
          >
            <span>
              <span
                className="c38"
                color="green"
                height="0.6875rem"
                width="0.6875rem"
              />
               
              Running
            </span>
          </td>
          <td
            className="c39"
            disabled={undefined}
            name="td"
            selected={undefined}
          >
            almost NaN years
          </td>
          <td
            className="c40"
            disabled={undefined}
            name="td"
            selected={undefined}
          >
            <code>
              2252839
            </code>
          </td>
          <td
            className="c41 c42"
            disabled={undefined}
            name="td"
            selected={undefined}
          >
            <div
              box={true}
              className="c43"
              onClick={[Function]}
              onMouseEnter={undefined}
              onMouseLeave={undefined}
              tag="div"
            >
              <svg
                className=""
                height="16"
                style={
                  Object {
                    "transform": "rotate(0deg)",
                  }
                }
                viewBox="0 0 4 16"
                width="4"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M2 4a2 2 0 1 0 0-4 2 2 0 0 0 0 4z"
                  fill="rgba(73, 73, 73, 1)"
                  fill-rule="evenodd"
                />
                <path
                  d="M2 4a2 2 0 1 0 0-4 2 2 0 0 0 0 4z"
                  fill="rgba(73, 73, 73, 1)"
                  fill-rule="evenodd"
                  style={
                    Object {
                      "transform": "translateY(0.375rem)",
                    }
                  }
                />
                <path
                  d="M2 4a2 2 0 1 0 0-4 2 2 0 0 0 0 4z"
                  fill="rgba(73, 73, 73, 1)"
                  fill-rule="evenodd"
                  style={
                    Object {
                      "transform": "translateY(0.75rem)",
                    }
                  }
                />
              </svg>
            </div>
          </td>
        </tr>
        <tr
          className="c33"
          disabled={undefined}
          name="tr"
          selected={undefined}
        >
          <td
            className="c34 c35"
            disabled={undefined}
            name="td"
            selected={undefined}
          >
            <div
              className="c18 c19 c20"
              name="f1bd1730-e8a6-4956-e738-d8e85cc6aa04"
              role="group"
              style={undefined}
            >
              <li
                className="c21"
              >
                <div
                  checked={false}
                  className="c22"
                  disabled={false}
                  id="bP"
                  type="checkbox"
                >
                  <input
                    checked={false}
                    className="c23"
                    disabled={false}
                    id="bQ"
                    type="checkbox"
                  />
                  <label
                    className="c24"
                    htmlFor="bQ"
                  />
                </div>
              </li>
            </div>
          </td>
          <td
            className="c35"
            disabled={undefined}
            name="td"
            selected={undefined}
          >
            <a
              className="c36 c37"
              to="/instances/f1bd1730"
            >
              f1bd1730
            </a>
          </td>
          <td
            className="c35"
            disabled={undefined}
            name="td"
            selected={undefined}
          >
            <span>
              <span
                className="c38"
                color="green"
                height="0.6875rem"
                width="0.6875rem"
              />
               
              Running
            </span>
          </td>
          <td
            className="c39"
            disabled={undefined}
            name="td"
            selected={undefined}
          >
            almost NaN years
          </td>
          <td
            className="c40"
            disabled={undefined}
            name="td"
            selected={undefined}
          >
            <code>
              f1bd173
            </code>
          </td>
          <td
            className="c41 c42"
            disabled={undefined}
            name="td"
            selected={undefined}
          >
            <div
              box={true}
              className="c43"
              onClick={[Function]}
              onMouseEnter={undefined}
              onMouseLeave={undefined}
              tag="div"
            >
              <svg
                className=""
                height="16"
                style={
                  Object {
                    "transform": "rotate(0deg)",
                  }
                }
                viewBox="0 0 4 16"
                width="4"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M2 4a2 2 0 1 0 0-4 2 2 0 0 0 0 4z"
                  fill="rgba(73, 73, 73, 1)"
                  fill-rule="evenodd"
                />
                <path
                  d="M2 4a2 2 0 1 0 0-4 2 2 0 0 0 0 4z"
                  fill="rgba(73, 73, 73, 1)"
                  fill-rule="evenodd"
                  style={
                    Object {
                      "transform": "translateY(0.375rem)",
                    }
                  }
                />
                <path
                  d="M2 4a2 2 0 1 0 0-4 2 2 0 0 0 0 4z"
                  fill="rgba(73, 73, 73, 1)"
                  fill-rule="evenodd"
                  style={
                    Object {
                      "transform": "translateY(0.75rem)",
                    }
                  }
                />
              </svg>
            </div>
          </td>
        </tr>
      </tbody>
    </table>
  </form>
  <div
    className="c44 c45"
  >
    <div
      className="c46"
    >
      <div
        className="c47"
      >
        <div
          className="c48"
        >
          <span
            name="react-responsive-mock"
            query="only screen and (max-width: 47.9375rem)"
          >
            <button
              className="c49 c11 c12"
              disabled={true}
              href=""
              icon={true}
              onClick={[Function]}
              type="button"
            >
              <svg
                className=""
                height="15"
                style={
                  Object {
                    "transform": "rotate(0deg)",
                  }
                }
                version="1.1"
                width="15"
                xmlnsXlink="http://www.w3.org/1999/xlink"
              >
                <g
                  transform="translate(18292 -19563)"
                >
                  <mask
                    id="L"
                  >
                    <rect
                      fill="#fff"
                      height={15}
                      transform="matrix(6.12323e-17 1 -1 6.12323e-17 -18278 19564)"
                      width={15}
                      x={-1}
                      y={-1}
                    />
                    <use
                      fill="#000"
                      transform="matrix(6.12323e-17 1 -1 6.12323e-17 -18278 19564)"
                      xlinkHref="#M"
                    />
                  </mask>
                  <g
                    mask="url(#L"
                  >
                    <use
                      fill="rgb(216, 216, 216)"
                      transform="matrix(6.12323e-17 1 -1 6.12323e-17 -18278 19564)"
                      xlinkHref="#N"
                    />
                  </g>
                </g>
                <defs>
                  <path
                    d="M5.595 1.93a1 1 0 0 1 1.81 0l4.056 8.645A1 1 0 0 1 10.556 12H2.444a1 1 0 0 1-.905-1.425L5.595 1.93z"
                    id="M"
                  />
                  <path
                    d="M1.54 10.575l-1.812-.85 1.811.85zM7.404 1.93l-1.81.85 1.81-.85zm-1.81.85l4.055 8.645 3.621-1.7-4.055-8.644-3.621 1.698zm4.96 7.22h-8.11v4h8.11v-4zM3.35 11.425l4.055-8.646-3.621-1.698-4.056 8.645 3.622 1.699zM2.444 10a1 1 0 0 1 .906 1.425l-3.622-1.7C-1.205 11.716.247 14 2.444 14v-4zm7.206 1.425A1 1 0 0 1 10.555 10v4c2.198 0 3.65-2.285 2.716-4.274l-3.62 1.699zM9.216 1.08c-1.08-2.302-4.353-2.302-5.432 0l3.621 1.698a1 1 0 0 1-1.81 0l3.621-1.698z"
                    id="N"
                  />
                </defs>
              </svg>
            </button>
          </span>
          <span
            name="react-responsive-mock"
            query="only screen and (min-width: 48rem)"
          >
            <button
              className="c50 c11 c12"
              disabled={true}
              href=""
              icon={true}
              onClick={[Function]}
              type="button"
            >
              <svg
                className=""
                height="15"
                style={
                  Object {
                    "transform": "rotate(0deg)",
                  }
                }
                version="1.1"
                width="15"
                xmlnsXlink="http://www.w3.org/1999/xlink"
              >
                <g
                  transform="translate(18292 -19563)"
                >
                  <mask
                    id="L"
                  >
                    <rect
                      fill="#fff"
                      height={15}
                      transform="matrix(6.12323e-17 1 -1 6.12323e-17 -18278 19564)"
                      width={15}
                      x={-1}
                      y={-1}
                    />
                    <use
                      fill="#000"
                      transform="matrix(6.12323e-17 1 -1 6.12323e-17 -18278 19564)"
                      xlinkHref="#M"
                    />
                  </mask>
                  <g
                    mask="url(#L"
                  >
                    <use
                      fill="rgb(216, 216, 216)"
                      transform="matrix(6.12323e-17 1 -1 6.12323e-17 -18278 19564)"
                      xlinkHref="#N"
                    />
                  </g>
                </g>
                <defs>
                  <path
                    d="M5.595 1.93a1 1 0 0 1 1.81 0l4.056 8.645A1 1 0 0 1 10.556 12H2.444a1 1 0 0 1-.905-1.425L5.595 1.93z"
                    id="M"
                  />
                  <path
                    d="M1.54 10.575l-1.812-.85 1.811.85zM7.404 1.93l-1.81.85 1.81-.85zm-1.81.85l4.055 8.645 3.621-1.7-4.055-8.644-3.621 1.698zm4.96 7.22h-8.11v4h8.11v-4zM3.35 11.425l4.055-8.646-3.621-1.698-4.056 8.645 3.622 1.699zM2.444 10a1 1 0 0 1 .906 1.425l-3.622-1.7C-1.205 11.716.247 14 2.444 14v-4zm7.206 1.425A1 1 0 0 1 10.555 10v4c2.198 0 3.65-2.285 2.716-4.274l-3.62 1.699zM9.216 1.08c-1.08-2.302-4.353-2.302-5.432 0l3.621 1.698a1 1 0 0 1-1.81 0l3.621-1.698z"
                    id="N"
                  />
                </defs>
              </svg>
              <span>
                Start
              </span>
            </button>
          </span>
          <span
            name="react-responsive-mock"
            query="only screen and (max-width: 47.9375rem)"
          >
            <button
              className="c49 c11 c12"
              disabled={true}
              href=""
              icon={true}
              onClick={[Function]}
              type="button"
            >
              <svg
                className=""
                height="14"
                style={
                  Object {
                    "transform": "rotate(0deg)",
                  }
                }
                version="1.1"
                viewBox="0 0 14 14"
                width="14"
                xmlns="http://www.w3.org/2000/svg"
                xmlnsXlink="http://www.w3.org/1999/xlink"
              >
                <g
                  transform="translate(18113 -18582)"
                >
                  <g>
                    <mask
                      id="O"
                    >
                      <use
                        fill="white"
                        transform="translate(-18113 18582)"
                        xlinkHref="#P"
                      />
                    </mask>
                    <g
                      mask="url(#O)"
                    >
                      <use
                        fill="rgb(216, 216, 216)"
                        transform="translate(-18113 18582)"
                        xlinkHref="#Q"
                      />
                    </g>
                  </g>
                </g>
                <defs>
                  <path
                    d="M 0 2C 0 0.895431 0.895431 0 2 0L 12 0C 13.1046 0 14 0.895431 14 2L 14 12C 14 13.1046 13.1046 14 12 14L 2 14C 0.895431 14 0 13.1046 0 12L 0 2Z"
                    id="P"
                  />
                  <path
                    d="M 2 2L 12 2L 12 -2L 2 -2L 2 2ZM 12 2L 12 12L 16 12L 16 2L 12 2ZM 12 12L 2 12L 2 16L 12 16L 12 12ZM 2 12L 2 2L -2 2L -2 12L 2 12ZM 2 12L 2 12L -2 12C -2 14.2091 -0.209139 16 2 16L 2 12ZM 12 12L 12 12L 12 16C 14.2091 16 16 14.2091 16 12L 12 12ZM 12 2L 12 2L 16 2C 16 -0.209139 14.2091 -2 12 -2L 12 2ZM 2 -2C -0.209139 -2 -2 -0.209139 -2 2L 2 2L 2 2L 2 -2Z"
                    id="Q"
                  />
                </defs>
              </svg>
            </button>
          </span>
          <span
            name="react-responsive-mock"
            query="only screen and (min-width: 48rem)"
          >
            <button
              className="c50 c11 c12"
              disabled={true}
              href=""
              icon={true}
              onClick={[Function]}
              type="button"
            >
              <svg
                className=""
                height="14"
                style={
                  Object {
                    "transform": "rotate(0deg)",
                  }
                }
                version="1.1"
                viewBox="0 0 14 14"
                width="14"
                xmlns="http://www.w3.org/2000/svg"
                xmlnsXlink="http://www.w3.org/1999/xlink"
              >
                <g
                  transform="translate(18113 -18582)"
                >
                  <g>
                    <mask
                      id="O"
                    >
                      <use
                        fill="white"
                        transform="translate(-18113 18582)"
                        xlinkHref="#P"
                      />
                    </mask>
                    <g
                      mask="url(#O)"
                    >
                      <use
                        fill="rgb(216, 216, 216)"
                        transform="translate(-18113 18582)"
                        xlinkHref="#Q"
                      />
                    </g>
                  </g>
                </g>
                <defs>
                  <path
                    d="M 0 2C 0 0.895431 0.895431 0 2 0L 12 0C 13.1046 0 14 0.895431 14 2L 14 12C 14 13.1046 13.1046 14 12 14L 2 14C 0.895431 14 0 13.1046 0 12L 0 2Z"
                    id="P"
                  />
                  <path
                    d="M 2 2L 12 2L 12 -2L 2 -2L 2 2ZM 12 2L 12 12L 16 12L 16 2L 12 2ZM 12 12L 2 12L 2 16L 12 16L 12 12ZM 2 12L 2 2L -2 2L -2 12L 2 12ZM 2 12L 2 12L -2 12C -2 14.2091 -0.209139 16 2 16L 2 12ZM 12 12L 12 12L 12 16C 14.2091 16 16 14.2091 16 12L 12 12ZM 12 2L 12 2L 16 2C 16 -0.209139 14.2091 -2 12 -2L 12 2ZM 2 -2C -0.209139 -2 -2 -0.209139 -2 2L 2 2L 2 2L 2 -2Z"
                    id="Q"
                  />
                </defs>
              </svg>
              <span>
                Stop
              </span>
            </button>
          </span>
          <span
            name="react-responsive-mock"
            query="only screen and (max-width: 47.9375rem)"
          >
            <button
              className="c49 c11 c12"
              disabled={true}
              href=""
              icon={true}
              onClick={[Function]}
              type="button"
            >
              <svg
                className=""
                height="21"
                style={
                  Object {
                    "transform": "rotate(0deg)",
                  }
                }
                version="1.1"
                viewBox="0 0 20 21"
                width="20"
                xmlns="http://www.w3.org/2000/svg"
                xmlnsXlink="http://www.w3.org/1999/xlink"
              >
                <g
                  transform="translate(17997 -18577)"
                >
                  <g>
                    <use
                      fill="rgb(216, 216, 216)"
                      transform="matrix(0.866025 0.5 -0.5 0.866025 -17988.7 18577.9)"
                      xlinkHref="#K"
                    />
                  </g>
                </g>
                <defs>
                  <path
                    d="M 5.39661 3.57718L 5.3977 5.34469L 10.0255 2.67281L 5.39715 0L 5.39832 2.00201C 2.33086 2.5484 0.00065755 5.23112 0 8.45654C 0.000380483 12.0783 2.93556 15.0137 6.55562 15.0143C 10.1774 15.014 13.1128 12.0788 13.1124 8.45702L 11.5697 8.45687C 11.5697 11.2264 9.32527 13.4717 6.55578 13.4716C 3.78629 13.4716 1.54268 11.2262 1.5427 8.45669C 1.54135 6.08718 3.18616 4.10012 5.39661 3.57718Z"
                    fillRule="evenodd"
                    id="K"
                  />
                </defs>
              </svg>
            </button>
          </span>
          <span
            name="react-responsive-mock"
            query="only screen and (min-width: 48rem)"
          >
            <button
              className="c50 c11 c12"
              disabled={true}
              href=""
              icon={true}
              onClick={[Function]}
              type="button"
            >
              <svg
                className=""
                height="21"
                style={
                  Object {
                    "transform": "rotate(0deg)",
                  }
                }
                version="1.1"
                viewBox="0 0 20 21"
                width="20"
                xmlns="http://www.w3.org/2000/svg"
                xmlnsXlink="http://www.w3.org/1999/xlink"
              >
                <g
                  transform="translate(17997 -18577)"
                >
                  <g>
                    <use
                      fill="rgb(216, 216, 216)"
                      transform="matrix(0.866025 0.5 -0.5 0.866025 -17988.7 18577.9)"
                      xlinkHref="#K"
                    />
                  </g>
                </g>
                <defs>
                  <path
                    d="M 5.39661 3.57718L 5.3977 5.34469L 10.0255 2.67281L 5.39715 0L 5.39832 2.00201C 2.33086 2.5484 0.00065755 5.23112 0 8.45654C 0.000380483 12.0783 2.93556 15.0137 6.55562 15.0143C 10.1774 15.014 13.1128 12.0788 13.1124 8.45702L 11.5697 8.45687C 11.5697 11.2264 9.32527 13.4717 6.55578 13.4716C 3.78629 13.4716 1.54268 11.2262 1.5427 8.45669C 1.54135 6.08718 3.18616 4.10012 5.39661 3.57718Z"
                    fillRule="evenodd"
                    id="K"
                  />
                </defs>
              </svg>
              <span>
                Reboot
              </span>
            </button>
          </span>
        </div>
        <div
          className="c51"
        >
          <span
            name="react-responsive-mock"
            query="only screen and (max-width: 47.9375rem)"
          >
            <button
              className="c52 c11 c12"
              disabled={true}
              href=""
              icon={true}
              onClick={[Function]}
              type="button"
            >
              <svg
                className=""
                height="12"
                style={
                  Object {
                    "transform": "rotate(0deg)",
                  }
                }
                version="1.1"
                viewBox="0 0 9 12"
                width="9"
                xmlns="http://www.w3.org/2000/svg"
                xmlnsXlink="http://www.w3.org/1999/xlink"
              >
                <g
                  transform="translate(17403 -18583)"
                >
                  <g>
                    <use
                      fill="rgba(73, 73, 73, 1)"
                      transform="translate(-17403 18583)"
                      xlinkHref="#j"
                    />
                  </g>
                </g>
                <defs>
                  <path
                    d="M 2 0L 2 1L 0 1L 0 2L 9 2L 9 1L 7 1L 7 0L 2 0ZM 0 3L 1 12L 8 12L 9 3L 0 3ZM 6 4L 7.882 4L 7.104 11L 6 11L 6 4ZM 4 11L 5.001 11L 5.001 4L 4 4L 4 11ZM 1.11719 4L 3.00019 4L 3.00019 11L 1.89619 11L 1.11719 4Z"
                    fillRule="evenodd"
                    id="j"
                  />
                </defs>
              </svg>
            </button>
          </span>
          <span
            name="react-responsive-mock"
            query="only screen and (min-width: 48rem)"
          >
            <button
              className="c53 c11 c12"
              disabled={true}
              href=""
              icon={true}
              onClick={[Function]}
              type="button"
            >
              <svg
                className=""
                height="12"
                style={
                  Object {
                    "transform": "rotate(0deg)",
                  }
                }
                version="1.1"
                viewBox="0 0 9 12"
                width="9"
                xmlns="http://www.w3.org/2000/svg"
                xmlnsXlink="http://www.w3.org/1999/xlink"
              >
                <g
                  transform="translate(17403 -18583)"
                >
                  <g>
                    <use
                      fill="rgb(216, 216, 216)"
                      transform="translate(-17403 18583)"
                      xlinkHref="#j"
                    />
                  </g>
                </g>
                <defs>
                  <path
                    d="M 2 0L 2 1L 0 1L 0 2L 9 2L 9 1L 7 1L 7 0L 2 0ZM 0 3L 1 12L 8 12L 9 3L 0 3ZM 6 4L 7.882 4L 7.104 11L 6 11L 6 4ZM 4 11L 5.001 11L 5.001 4L 4 4L 4 11ZM 1.11719 4L 3.00019 4L 3.00019 11L 1.89619 11L 1.11719 4Z"
                    fillRule="evenodd"
                    id="j"
                  />
                </defs>
              </svg>
              <span>
                Remove
              </span>
            </button>
          </span>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`renders <List instances selected=all allowedActions /> without throwing 1`] = `
.c37 {
  background-color: transparent;
  text-decoration-skip: objects;
}

.c36 {
  color: rgb(59,70,204);
  -webkit-text-fill-color: currentcolor;
}

.c36:hover {
  text-decoration: none;
}

.c12 {
  font-family: sans-serif;
  font-size: 100%;
  line-height: 1.15;
  margin: 0;
  overflow: visible;
  text-transform: none;
  -webkit-appearance: button;
  -moz-appearance: button;
  appearance: button;
  min-width: 7.5rem;
}

.c12::-moz-focus-inner,
.c12[type='button']::-moz-focus-inner,
.c12[type='reset']::-moz-focus-inner,
.c12[type='submit']::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

.c12:-moz-focusring,
.c12[type='button']:-moz-focusring,
.c12[type='reset']:-moz-focusring,
.c12[type='submit']:-moz-focusring {
  outline: 0.0625rem dotted ButtonText;
}

.c12 + button {
  margin-left: 0.375rem;
}

.c11 {
  display: inline-block;
}

.c10 {
  box-sizing: border-box;
  display: inline-block;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-height: 3rem;
  height: 3rem;
  min-width: 7.5rem;
  margin-bottom: 0.5rem;
  margin-top: 0.5rem;
  padding: 0.9375rem 1.125rem;
  position: relative;
  font-size: 0.9375rem;
  text-align: center;
  font-style: normal;
  font-stretch: normal;
  line-height: normal;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  text-decoration: none;
  white-space: nowrap;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  color: rgb(255,255,255);
  -webkit-text-fill-color: currentcolor;
  background-image: none;
  background-color: rgb(59,70,204);
  border-radius: 0.25rem;
  border: solid 0.0625rem rgb(45,56,132);
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 100%;
  max-width: 100%;
}

.c10:focus {
  outline: 0;
  text-decoration: none;
  background-color: rgb(59,70,204);
  border-color: rgb(45,56,132);
}

.c10:hover {
  background-color: rgb(72,83,217);
  border: solid 0.0625rem rgb(45,56,132);
}

.c10:active,
.c10:active:hover,
.c10:active:focus {
  background-image: none;
  outline: 0;
  background-color: rgb(45,56,132);
  border-color: rgb(45,56,132);
}

.c10[disabled] {
  cursor: not-allowed;
  pointer-events: none;
}

.c10 svg + span {
  margin-left: 0.75rem;
}

.c10 svg {
  max-height: 1.125rem;
}

.c51 {
  box-sizing: border-box;
  display: inline-block;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-height: 3rem;
  height: 3rem;
  min-width: 7.5rem;
  margin-bottom: 0.5rem;
  margin-top: 0.5rem;
  padding: 0.9375rem 1.125rem;
  position: relative;
  font-size: 0.9375rem;
  text-align: center;
  font-style: normal;
  font-stretch: normal;
  line-height: normal;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  text-decoration: none;
  white-space: nowrap;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  color: rgb(255,255,255);
  -webkit-text-fill-color: currentcolor;
  background-image: none;
  background-color: rgb(59,70,204);
  border-radius: 0.25rem;
  border: solid 0.0625rem rgb(45,56,132);
  color: rgb(70,70,70);
  -webkit-text-fill-color: currentcolor;
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
  cursor: not-allowed;
  pointer-events: none;
  color: rgb(216,216,216);
  background-color: rgb(250,250,250);
  border-color: rgb(216,216,216);
  padding: 0.5625rem 1.125rem;
  font-size: 0.8125rem;
  min-width: 0rem;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c51:focus {
  outline: 0;
  text-decoration: none;
  background-color: rgb(59,70,204);
  border-color: rgb(45,56,132);
}

.c51:hover {
  background-color: rgb(72,83,217);
  border: solid 0.0625rem rgb(45,56,132);
}

.c51:active,
.c51:active:hover,
.c51:active:focus {
  background-image: none;
  outline: 0;
  background-color: rgb(45,56,132);
  border-color: rgb(45,56,132);
}

.c51[disabled] {
  cursor: not-allowed;
  pointer-events: none;
}

.c51:focus {
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
}

.c51:hover {
  background-color: rgb(247,247,247);
  border-color: rgb(216,216,216);
}

.c51:active,
.c51:active:hover,
.c51:active:focus {
  background-color: rgb(230,230,230);
  border-color: rgb(216,216,216);
}

.c51:focus {
  background-color: rgb(250,250,250);
  border-color: rgb(216,216,216);
}

.c51:hover {
  background-color: rgb(250,250,250);
  border-color: rgb(250,250,250);
}

.c51:active,
.c51:active:hover,
.c51:active:focus {
  background-color: rgb(250,250,250);
  border-color: rgb(250,250,250);
}

.c51 svg + span {
  margin-left: 0.75rem;
}

.c51 svg {
  max-height: 1.125rem;
}

.c52 {
  box-sizing: border-box;
  display: inline-block;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-height: 3rem;
  height: 3rem;
  min-width: 7.5rem;
  margin-bottom: 0.5rem;
  margin-top: 0.5rem;
  padding: 0.9375rem 1.125rem;
  position: relative;
  font-size: 0.9375rem;
  text-align: center;
  font-style: normal;
  font-stretch: normal;
  line-height: normal;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  text-decoration: none;
  white-space: nowrap;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  color: rgb(255,255,255);
  -webkit-text-fill-color: currentcolor;
  background-image: none;
  background-color: rgb(59,70,204);
  border-radius: 0.25rem;
  border: solid 0.0625rem rgb(45,56,132);
  color: rgb(70,70,70);
  -webkit-text-fill-color: currentcolor;
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
  cursor: not-allowed;
  pointer-events: none;
  color: rgb(216,216,216);
  background-color: rgb(250,250,250);
  border-color: rgb(216,216,216);
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c52:focus {
  outline: 0;
  text-decoration: none;
  background-color: rgb(59,70,204);
  border-color: rgb(45,56,132);
}

.c52:hover {
  background-color: rgb(72,83,217);
  border: solid 0.0625rem rgb(45,56,132);
}

.c52:active,
.c52:active:hover,
.c52:active:focus {
  background-image: none;
  outline: 0;
  background-color: rgb(45,56,132);
  border-color: rgb(45,56,132);
}

.c52[disabled] {
  cursor: not-allowed;
  pointer-events: none;
}

.c52:focus {
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
}

.c52:hover {
  background-color: rgb(247,247,247);
  border-color: rgb(216,216,216);
}

.c52:active,
.c52:active:hover,
.c52:active:focus {
  background-color: rgb(230,230,230);
  border-color: rgb(216,216,216);
}

.c52:focus {
  background-color: rgb(250,250,250);
  border-color: rgb(216,216,216);
}

.c52:hover {
  background-color: rgb(250,250,250);
  border-color: rgb(250,250,250);
}

.c52:active,
.c52:active:hover,
.c52:active:focus {
  background-color: rgb(250,250,250);
  border-color: rgb(250,250,250);
}

.c52 svg + span {
  margin-left: 0.75rem;
}

.c52 svg {
  max-height: 1.125rem;
}

.c54 {
  box-sizing: border-box;
  display: inline-block;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-height: 3rem;
  height: 3rem;
  min-width: 7.5rem;
  margin-bottom: 0.5rem;
  margin-top: 0.5rem;
  padding: 0.9375rem 1.125rem;
  position: relative;
  font-size: 0.9375rem;
  text-align: center;
  font-style: normal;
  font-stretch: normal;
  line-height: normal;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  text-decoration: none;
  white-space: nowrap;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  color: rgb(255,255,255);
  -webkit-text-fill-color: currentcolor;
  background-image: none;
  background-color: rgb(59,70,204);
  border-radius: 0.25rem;
  border: solid 0.0625rem rgb(45,56,132);
  color: rgb(70,70,70);
  -webkit-text-fill-color: currentcolor;
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
  color: rgb(210,67,58);
  -webkit-text-fill-color: currentcolor;
  background-color: rgb(255,255,255);
  border-color: rgb(210,67,58);
  cursor: not-allowed;
  pointer-events: none;
  color: rgb(216,216,216);
  background-color: rgb(250,250,250);
  border-color: rgb(216,216,216);
  padding: 0.5625rem 1.125rem;
  font-size: 0.8125rem;
  min-width: 0rem;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  float: right;
}

.c54:focus {
  outline: 0;
  text-decoration: none;
  background-color: rgb(59,70,204);
  border-color: rgb(45,56,132);
}

.c54:hover {
  background-color: rgb(72,83,217);
  border: solid 0.0625rem rgb(45,56,132);
}

.c54:active,
.c54:active:hover,
.c54:active:focus {
  background-image: none;
  outline: 0;
  background-color: rgb(45,56,132);
  border-color: rgb(45,56,132);
}

.c54[disabled] {
  cursor: not-allowed;
  pointer-events: none;
}

.c54:focus {
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
}

.c54:hover {
  background-color: rgb(247,247,247);
  border-color: rgb(216,216,216);
}

.c54:active,
.c54:active:hover,
.c54:active:focus {
  background-color: rgb(230,230,230);
  border-color: rgb(216,216,216);
}

.c54:focus {
  background-color: rgb(255,255,255);
  border-color: rgb(210,67,58);
}

.c54:hover {
  background-color: rgb(247,247,247);
  border-color: rgb(210,67,58);
}

.c54:active,
.c54:active:hover,
.c54:active:focus {
  background-color: rgb(230,230,230);
  border-color: rgb(210,67,58);
}

.c54:focus {
  background-color: rgb(250,250,250);
  border-color: rgb(216,216,216);
}

.c54:hover {
  background-color: rgb(250,250,250);
  border-color: rgb(250,250,250);
}

.c54:active,
.c54:active:hover,
.c54:active:focus {
  background-color: rgb(250,250,250);
  border-color: rgb(250,250,250);
}

.c54 svg + span {
  margin-left: 0.75rem;
}

.c54 svg {
  max-height: 1.125rem;
}

.c55 {
  box-sizing: border-box;
  display: inline-block;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-height: 3rem;
  height: 3rem;
  min-width: 7.5rem;
  margin-bottom: 0.5rem;
  margin-top: 0.5rem;
  padding: 0.9375rem 1.125rem;
  position: relative;
  font-size: 0.9375rem;
  text-align: center;
  font-style: normal;
  font-stretch: normal;
  line-height: normal;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  text-decoration: none;
  white-space: nowrap;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  color: rgb(255,255,255);
  -webkit-text-fill-color: currentcolor;
  background-image: none;
  background-color: rgb(59,70,204);
  border-radius: 0.25rem;
  border: solid 0.0625rem rgb(45,56,132);
  color: rgb(70,70,70);
  -webkit-text-fill-color: currentcolor;
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
  color: rgb(210,67,58);
  -webkit-text-fill-color: currentcolor;
  background-color: rgb(255,255,255);
  border-color: rgb(210,67,58);
  cursor: not-allowed;
  pointer-events: none;
  color: rgb(216,216,216);
  background-color: rgb(250,250,250);
  border-color: rgb(216,216,216);
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  float: right;
}

.c55:focus {
  outline: 0;
  text-decoration: none;
  background-color: rgb(59,70,204);
  border-color: rgb(45,56,132);
}

.c55:hover {
  background-color: rgb(72,83,217);
  border: solid 0.0625rem rgb(45,56,132);
}

.c55:active,
.c55:active:hover,
.c55:active:focus {
  background-image: none;
  outline: 0;
  background-color: rgb(45,56,132);
  border-color: rgb(45,56,132);
}

.c55[disabled] {
  cursor: not-allowed;
  pointer-events: none;
}

.c55:focus {
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
}

.c55:hover {
  background-color: rgb(247,247,247);
  border-color: rgb(216,216,216);
}

.c55:active,
.c55:active:hover,
.c55:active:focus {
  background-color: rgb(230,230,230);
  border-color: rgb(216,216,216);
}

.c55:focus {
  background-color: rgb(255,255,255);
  border-color: rgb(210,67,58);
}

.c55:hover {
  background-color: rgb(247,247,247);
  border-color: rgb(210,67,58);
}

.c55:active,
.c55:active:hover,
.c55:active:focus {
  background-color: rgb(230,230,230);
  border-color: rgb(210,67,58);
}

.c55:focus {
  background-color: rgb(250,250,250);
  border-color: rgb(216,216,216);
}

.c55:hover {
  background-color: rgb(250,250,250);
  border-color: rgb(250,250,250);
}

.c55:active,
.c55:active:hover,
.c55:active:focus {
  background-color: rgb(250,250,250);
  border-color: rgb(250,250,250);
}

.c55 svg + span {
  margin-left: 0.75rem;
}

.c55 svg {
  max-height: 1.125rem;
}

.c49 {
  box-sizing: border-box;
  display: inline-block;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-height: 3rem;
  height: 3rem;
  min-width: 7.5rem;
  margin-bottom: 0.5rem;
  margin-top: 0.5rem;
  padding: 0.9375rem 1.125rem;
  position: relative;
  font-size: 0.9375rem;
  text-align: center;
  font-style: normal;
  font-stretch: normal;
  line-height: normal;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  text-decoration: none;
  white-space: nowrap;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  color: rgb(255,255,255);
  -webkit-text-fill-color: currentcolor;
  background-image: none;
  background-color: rgb(59,70,204);
  border-radius: 0.25rem;
  border: solid 0.0625rem rgb(45,56,132);
  color: rgb(70,70,70);
  -webkit-text-fill-color: currentcolor;
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
  padding: 0.5625rem 1.125rem;
  font-size: 0.8125rem;
  min-width: 0rem;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c49:focus {
  outline: 0;
  text-decoration: none;
  background-color: rgb(59,70,204);
  border-color: rgb(45,56,132);
}

.c49:hover {
  background-color: rgb(72,83,217);
  border: solid 0.0625rem rgb(45,56,132);
}

.c49:active,
.c49:active:hover,
.c49:active:focus {
  background-image: none;
  outline: 0;
  background-color: rgb(45,56,132);
  border-color: rgb(45,56,132);
}

.c49[disabled] {
  cursor: not-allowed;
  pointer-events: none;
}

.c49:focus {
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
}

.c49:hover {
  background-color: rgb(247,247,247);
  border-color: rgb(216,216,216);
}

.c49:active,
.c49:active:hover,
.c49:active:focus {
  background-color: rgb(230,230,230);
  border-color: rgb(216,216,216);
}

.c49 svg + span {
  margin-left: 0.75rem;
}

.c49 svg {
  max-height: 1.125rem;
}

.c50 {
  box-sizing: border-box;
  display: inline-block;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-height: 3rem;
  height: 3rem;
  min-width: 7.5rem;
  margin-bottom: 0.5rem;
  margin-top: 0.5rem;
  padding: 0.9375rem 1.125rem;
  position: relative;
  font-size: 0.9375rem;
  text-align: center;
  font-style: normal;
  font-stretch: normal;
  line-height: normal;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  text-decoration: none;
  white-space: nowrap;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  color: rgb(255,255,255);
  -webkit-text-fill-color: currentcolor;
  background-image: none;
  background-color: rgb(59,70,204);
  border-radius: 0.25rem;
  border: solid 0.0625rem rgb(45,56,132);
  color: rgb(70,70,70);
  -webkit-text-fill-color: currentcolor;
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c50:focus {
  outline: 0;
  text-decoration: none;
  background-color: rgb(59,70,204);
  border-color: rgb(45,56,132);
}

.c50:hover {
  background-color: rgb(72,83,217);
  border: solid 0.0625rem rgb(45,56,132);
}

.c50:active,
.c50:active:hover,
.c50:active:focus {
  background-image: none;
  outline: 0;
  background-color: rgb(45,56,132);
  border-color: rgb(45,56,132);
}

.c50[disabled] {
  cursor: not-allowed;
  pointer-events: none;
}

.c50:focus {
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
}

.c50:hover {
  background-color: rgb(247,247,247);
  border-color: rgb(216,216,216);
}

.c50:active,
.c50:active:hover,
.c50:active:focus {
  background-color: rgb(230,230,230);
  border-color: rgb(216,216,216);
}

.c50 svg + span {
  margin-left: 0.75rem;
}

.c50 svg {
  max-height: 1.125rem;
}

.c2 {
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 0 1 auto;
  -ms-flex: 0 1 auto;
  flex: 0 1 auto;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-right: -0.5rem;
  margin-left: -0.5rem;
}

.c4 {
  box-sizing: border-box;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  padding-right: 0.5rem;
  padding-left: 0.5rem;
}

.c8 {
  box-sizing: border-box;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  padding-right: 0.5rem;
  padding-left: 0.5rem;
}

.c48 {
  box-sizing: border-box;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  padding-right: 0.5rem;
  padding-left: 0.5rem;
}

.c53 {
  box-sizing: border-box;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  padding-right: 0.5rem;
  padding-left: 0.5rem;
}

.c0 {
  margin-right: auto;
  margin-left: auto;
  box-sizing: border-box;
  width: 100%;
  max-width: 62.5rem;
  padding-bottom: 1.125rem;
}

.c1 {
  background-color: rgb(216,216,216);
  margin: 0;
  background-color: transparent;
  height: 1.875rem;
}

.c46 {
  margin-right: auto;
  margin-left: auto;
  box-sizing: border-box;
  width: 100%;
  max-width: 62.5rem;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: nowrap;
  -ms-flex-wrap: nowrap;
  flex-wrap: nowrap;
  -webkit-align-content: stretch;
  -ms-flex-line-pack: stretch;
  align-content: stretch;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
}

.c45 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex-wrap: nowrap;
  -ms-flex-wrap: nowrap;
  flex-wrap: nowrap;
  -webkit-align-content: stretch;
  -ms-flex-line-pack: stretch;
  align-content: stretch;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  background-color: rgb(30,49,59);
  max-height: 3.3125rem;
  min-height: 3.3125rem;
  line-height: 1.5625rem;
  position: fixed;
  left: 0;
  right: 0;
  bottom: 0;
}

.c44 {
  background-color: rgba(241,241,241,1);
  border-top: 0.0625rem solid rgb(216,216,216);
  height: 4.375rem;
  max-height: 4.375rem;
}

.c3 {
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 0 1 auto;
  -ms-flex: 0 1 auto;
  flex: 0 1 auto;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-right: -0.5rem;
  margin-left: -0.5rem;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
}

.c47 {
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 0 1 auto;
  -ms-flex: 0 1 auto;
  flex: 0 1 auto;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-right: -0.5rem;
  margin-left: -0.5rem;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
}

.c26 {
  margin-bottom: 0.125rem;
  margin-left: 0.5625rem;
}

.c38 {
  width: 0.375rem;
  height: 0.375rem;
  border-radius: 0.1875rem;
  background-color: rgb(0,152,88);
  display: inline-block;
  height: 0.6875rem;
  width: 0.6875rem;
  border-radius: 0.6875rem;
}

.c23 {
  font-family: sans-serif;
  font-size: 100%;
  line-height: 1.15;
  margin: 0;
  overflow: visible;
  display: none;
}

.c23[type='checkbox'],
.c23[type='radio'] {
  box-sizing: border-box;
  padding: 0;
}

.c23[type='number']::-webkit-inner-spin-button,
.c23[type='number']::-webkit-outer-spin-button {
  height: auto;
}

.c23[type='search'] {
  -webkit-appearance: textfield;
  -moz-appearance: textfield;
  appearance: textfield;
  outline-offset: -0.125rem;
}

.c23[type='search']::-webkit-search-cancel-button,
.c23[type='search']::-webkit-search-decoration {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.c23::-webkit-file-upload-button {
  -webkit-appearance: button;
  -moz-appearance: button;
  appearance: button;
  font: inherit;
}

.c23:checked + label::after {
  opacity: 1;
}

.c23:selected + label::after {
  opacity: 1;
}

.c23:checked + label {
  border-color: rgb(59,70,204);
}

.c23:selected + label {
  border-color: rgb(59,70,204);
}

.c23:disabled + label {
  background-color: rgb(249,249,249);
  cursor: not-allowed;
}

.c24 {
  color: rgb(100,100,100);
  position: absolute;
  width: 1.125rem;
  height: 1.125rem;
  box-sizing: border-box;
  top: 0;
  right: 0;
  cursor: pointer;
  background-color: rgb(255,255,255);
  box-shadow: none;
  border: 0.0625rem solid rgb(216,216,216);
  cursor: pointer;
  border-radius: 0.25rem;
  width: 1.125rem;
  height: 1.125rem;
}

.c24::after {
  opacity: 0;
  content: '';
  position: absolute;
  width: 0.375rem;
  height: 0.125rem;
  background: transparent;
  top: 0.3125rem;
  left: 0.25rem;
  border: 0.125rem solid rgb(45,45,45);
  border-top: none;
  border-right: none;
  -webkit-transform: rotate(-45deg);
  -ms-transform: rotate(-45deg);
  transform: rotate(-45deg);
}

.c22 {
  display: inline-block;
  vertical-align: text-bottom;
  width: 1.125rem;
  height: 1.125rem;
  position: relative;
  cursor: pointer;
}

.c21 {
  list-style-type: none;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c21 label {
  font-weight: 400;
}

.c5 {
  display: inline-block;
  margin: 0;
  padding: 0;
  border: none;
  overflow: hidden;
  height: auto;
  -webkit-margin-start: 0;
  -webkit-margin-end: 0;
  -webkit-padding-before: 0;
  -webkit-padding-start: 0;
  -webkit-padding-end: 0;
  -webkit-padding-after: 0;
  width: 100%;
}

.c9 {
  display: inline-block;
  margin: 0;
  padding: 0;
  border: none;
  overflow: hidden;
  height: auto;
  -webkit-margin-start: 0;
  -webkit-margin-end: 0;
  -webkit-padding-before: 0;
  -webkit-padding-start: 0;
  -webkit-padding-end: 0;
  -webkit-padding-after: 0;
  float: right;
}

.c20 {
  display: inline-block;
  margin: 0;
  padding: 0;
  border: none;
  overflow: hidden;
  height: auto;
  -webkit-margin-start: 0;
  -webkit-margin-end: 0;
  -webkit-padding-before: 0;
  -webkit-padding-start: 0;
  -webkit-padding-end: 0;
  -webkit-padding-after: 0;
}

.c19 {
  padding-top: 0.25rem;
}

.c18 {
  padding-top: 0.25rem;
}

.c7 {
  box-sizing: border-box;
  width: 18.75rem;
  height: 3rem;
  min-height: 3rem;
  margin-bottom: 0.5rem;
  margin-top: 0.5rem;
  padding: 0.8125rem 1.125rem;
  border-radius: 0.25rem;
  background-color: rgb(255,255,255);
  border: 0.0625rem solid rgb(216,216,216);
  color: rgba(73,73,73,1);
  width: 100%;
  text-overflow: ellipsis;
  font-size: 0.9375rem;
  line-height: normal !important;
  font-style: normal;
  font-stretch: normal;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  outline: 0;
}

.c7::-webkit-input-placeholder {
  color: rgba(73,73,73,0.5);
}

.c7::-moz-placeholder {
  color: rgba(73,73,73,0.5);
}

.c7:-ms-input-placeholder {
  color: rgba(73,73,73,0.5);
}

.c7:invalid {
  box-shadow: none;
}

.c7:disabled {
  background-color: rgb(250,250,250);
  color: rgb(216,216,216);
  cursor: not-allowed;
}

.c7:disabled::-webkit-input-placeholder {
  color: rgba(73,73,73,0.5);
}

.c7:disabled::-moz-placeholder {
  color: rgba(73,73,73,0.5);
}

.c7:disabled:-ms-input-placeholder {
  color: rgba(73,73,73,0.5);
}

.c7:focus {
  border-color: rgb(59,70,204);
  outline: 0;
}

.c6 {
  font-size: 0.9375rem;
  font-style: normal;
  font-stretch: normal;
  display: block;
  color: rgb(70,70,70);
  text-align: left;
  margin-right: 0.75rem;
  font-weight: bold;
  white-space: pre;
  font-size: 0.8125rem;
}

.c43 {
  cursor: pointer;
  height: 100%;
  width: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c13 {
  overflow: hidden;
  border-spacing: 0;
  border-collapse: separate;
  table-layout: fixed;
  width: 100%;
  max-width: 100%;
}

.c14 {
  width: 100%;
  background: rgb(250,250,250);
}

.c14 th:first-child {
  border-top-left-radius: 0.25rem;
}

.c14 th:last-child {
  border-top-right-radius: 0.25rem;
}

.c32 {
  width: 100%;
}

.c32 tr:first-child td {
  border-top: none;
}

.c17 {
  border-width: 0.0625rem;
  border-style: solid;
  border-color: rgb(216,216,216);
  border-spacing: 0;
  white-space: nowrap;
  box-sizing: border-box;
  padding: 0 1.5rem;
  height: 3.75rem;
  width: 2rem;
  display: table-cell;
  vertical-align: middle;
  text-align: left;
  height: 2.625rem;
  color: rgb(189,189,189);
  font-weight: 500;
}

.c17:not(:first-child) {
  border-left-width: 0;
}

.c17:not(:last-child) {
  border-right-width: 0;
}

.c25 {
  border-width: 0.0625rem;
  border-style: solid;
  border-color: rgb(216,216,216);
  border-spacing: 0;
  white-space: nowrap;
  box-sizing: border-box;
  padding: 0 1.5rem;
  height: 3.75rem;
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  vertical-align: middle;
  text-align: left;
  height: 2.625rem;
  color: rgb(189,189,189);
  font-weight: 500;
  color: rgba(73,73,73,1);
  font-weight: bold;
}

.c25:not(:first-child) {
  border-left-width: 0;
}

.c25:not(:last-child) {
  border-right-width: 0;
}

.c27 {
  border-width: 0.0625rem;
  border-style: solid;
  border-color: rgb(216,216,216);
  border-spacing: 0;
  white-space: nowrap;
  box-sizing: border-box;
  padding: 0 1.5rem;
  height: 3.75rem;
  width: 9.375rem;
  display: table-cell;
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  vertical-align: middle;
  text-align: left;
  height: 2.625rem;
  color: rgb(189,189,189);
  font-weight: 500;
}

.c27:not(:first-child) {
  border-left-width: 0;
}

.c27:not(:last-child) {
  border-right-width: 0;
}

.c28 {
  border-width: 0.0625rem;
  border-style: solid;
  border-color: rgb(216,216,216);
  border-spacing: 0;
  white-space: nowrap;
  box-sizing: border-box;
  padding: 0 1.5rem;
  height: 3.75rem;
  width: 0rem;
  display: none;
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  vertical-align: middle;
  text-align: left;
  height: 2.625rem;
  color: rgb(189,189,189);
  font-weight: 500;
}

.c28:not(:first-child) {
  border-left-width: 0;
}

.c28:not(:last-child) {
  border-right-width: 0;
}

.c29 {
  border-width: 0.0625rem;
  border-style: solid;
  border-color: rgb(216,216,216);
  border-spacing: 0;
  white-space: nowrap;
  box-sizing: border-box;
  padding: 0 1.5rem;
  height: 3.75rem;
  width: 0rem;
  display: none;
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  vertical-align: middle;
  text-align: left;
  height: 2.625rem;
  color: rgb(189,189,189);
  font-weight: 500;
}

.c29:not(:first-child) {
  border-left-width: 0;
}

.c29:not(:last-child) {
  border-right-width: 0;
}

.c31 {
  border-width: 0.0625rem;
  border-style: solid;
  border-color: rgb(216,216,216);
  border-spacing: 0;
  white-space: nowrap;
  box-sizing: border-box;
  padding: 0 1.5rem;
  height: 3.75rem;
  width: 3.75rem;
  display: table-cell;
  height: 2.625rem;
  color: rgb(189,189,189);
  font-weight: 500;
}

.c31:not(:first-child) {
  border-left-width: 0;
}

.c31:not(:last-child) {
  border-right-width: 0;
}

.c35 {
  border-width: 0.0625rem;
  border-style: solid;
  border-color: rgb(216,216,216);
  border-spacing: 0;
  white-space: nowrap;
  box-sizing: border-box;
  padding: 0 1.5rem;
  height: 3.75rem;
  vertical-align: middle;
  text-align: left;
  border-bottom-width: 0;
}

.c35:not(:first-child) {
  border-left-width: 0;
}

.c35:not(:last-child) {
  border-right-width: 0;
}

.c39 {
  border-width: 0.0625rem;
  border-style: solid;
  border-color: rgb(216,216,216);
  border-spacing: 0;
  white-space: nowrap;
  box-sizing: border-box;
  padding: 0 1.5rem;
  height: 3.75rem;
  width: 0rem;
  display: none;
  vertical-align: middle;
  text-align: left;
  border-bottom-width: 0;
}

.c39:not(:first-child) {
  border-left-width: 0;
}

.c39:not(:last-child) {
  border-right-width: 0;
}

.c40 {
  border-width: 0.0625rem;
  border-style: solid;
  border-color: rgb(216,216,216);
  border-spacing: 0;
  white-space: nowrap;
  box-sizing: border-box;
  padding: 0 1.5rem;
  height: 3.75rem;
  width: 0rem;
  display: none;
  vertical-align: middle;
  text-align: left;
  border-bottom-width: 0;
}

.c40:not(:first-child) {
  border-left-width: 0;
}

.c40:not(:last-child) {
  border-right-width: 0;
}

.c42 {
  border-width: 0.0625rem;
  border-style: solid;
  border-color: rgb(216,216,216);
  border-spacing: 0;
  white-space: nowrap;
  box-sizing: border-box;
  padding: 0 1.5rem;
  height: 3.75rem;
  border-bottom-width: 0;
  border-left-width: 0.0625rem !important;
}

.c42:not(:first-child) {
  border-left-width: 0;
}

.c42:not(:last-child) {
  border-right-width: 0;
}

.c15 {
  display: table-row;
  color: rgba(73,73,73,1);
  background-color: rgb(255,255,255);
  box-shadow: 0 0.125rem 0 rgba(0,0,0,0.05);
  box-sizing: border-box;
  color: rgba(73,73,73,1);
  background-color: transparent;
  border: none;
  box-shadow: none;
}

.c15:last-child {
  box-shadow: none;
}

.c15:last-child td {
  border-bottom-width: 0.0625rem;
}

.c33 {
  display: table-row;
  color: rgba(73,73,73,1);
  background-color: rgb(255,255,255);
  box-shadow: 0 0.125rem 0 rgba(0,0,0,0.05);
  box-sizing: border-box;
}

.c33:last-child {
  box-shadow: none;
}

.c33:last-child td {
  border-bottom-width: 0.0625rem;
}

.c16 {
  padding: 0rem;
  padding-left: 0.75rem;
}

.c30 {
  padding: 0rem;
}

.c34 {
  padding: 0rem;
  padding-left: 0.75rem;
}

.c41 {
  padding: 0rem;
}

@media only screen and (min-width:0em) {
  .c4 {
    -webkit-flex-basis: 58.333333333333336%;
    -ms-flex-preferred-size: 58.333333333333336%;
    flex-basis: 58.333333333333336%;
    max-width: 58.333333333333336%;
    display: block;
  }
}

@media only screen and (min-width:48em) {
  .c4 {
    -webkit-flex-basis: 41.66666666666667%;
    -ms-flex-preferred-size: 41.66666666666667%;
    flex-basis: 41.66666666666667%;
    max-width: 41.66666666666667%;
    display: block;
  }
}

@media only screen and (min-width:0em) {
  .c8 {
    -webkit-flex-basis: 41.66666666666667%;
    -ms-flex-preferred-size: 41.66666666666667%;
    flex-basis: 41.66666666666667%;
    max-width: 41.66666666666667%;
    display: block;
  }
}

@media only screen and (min-width:48em) {
  .c8 {
    -webkit-flex-basis: 58.333333333333336%;
    -ms-flex-preferred-size: 58.333333333333336%;
    flex-basis: 58.333333333333336%;
    max-width: 58.333333333333336%;
    display: block;
  }
}

@media only screen and (min-width:0em) {
  .c48 {
    -webkit-flex-basis: 58.333333333333336%;
    -ms-flex-preferred-size: 58.333333333333336%;
    flex-basis: 58.333333333333336%;
    max-width: 58.333333333333336%;
    display: block;
  }
}

@media only screen and (min-width:0em) {
  .c53 {
    -webkit-flex-basis: 41.66666666666667%;
    -ms-flex-preferred-size: 41.66666666666667%;
    flex-basis: 41.66666666666667%;
    max-width: 41.66666666666667%;
    display: block;
  }
}

@media only screen and (min-width:48em) {
  .c0 {
    width: 46rem;
  }
}

@media only screen and (min-width:64em) {
  .c0 {
    width: 61rem;
  }
}

@media only screen and (min-width:75em) {
  .c0 {
    width: 76rem;
  }
}

@media only screen and (max-width:47.9375rem) {
  .c0 {
    padding-left: 0.375rem;
    padding-right: 0.375rem;
  }
}

@media only screen and (min-width:48em) {
  .c46 {
    width: 46rem;
  }
}

@media only screen and (min-width:64em) {
  .c46 {
    width: 61rem;
  }
}

@media only screen and (min-width:75em) {
  .c46 {
    width: 76rem;
  }
}

@media only screen and (max-width:47.9375rem) {
  .c46 {
    padding-left: 0.375rem;
    padding-right: 0.375rem;
  }
}

@media only screen and (min-width:0em) {
  .c47 {
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
  }
}

@media only screen and (min-width:0em) {
  .c47 {
    -webkit-box-pack: justify;
    -webkit-justify-content: space-between;
    -ms-flex-pack: justify;
    justify-content: space-between;
  }
}

@media only screen and (min-width:47.9375rem) {
  .c28 {
    width: 10rem;
    display: table-cell;
  }
}

@media only screen and (min-width:47.9375rem) {
  .c29 {
    width: 8.125rem;
    display: table-cell;
  }
}

@media only screen and (min-width:47.9375rem) {
  .c39 {
    width: 10rem;
    display: table-cell;
  }
}

@media only screen and (min-width:47.9375rem) {
  .c40 {
    width: 8.125rem;
    display: table-cell;
  }
}

<div
  className="c0"
>
  <div
    className="c1 c2"
    height="1.875rem"
  />
  <form
    onSubmit={undefined}
  >
    <div
      className="c3"
    >
      <div
        className="c4"
      >
        <div
          className="c5"
          name="filter"
          role="group"
          style={undefined}
        >
          <label
            className="c6"
            htmlFor="bR"
          >
            Filter instances
          </label>
          <input
            className="c7"
            disabled={false}
            id="bR"
            placeholder="Search for name, state, tags, etc..."
          />
        </div>
      </div>
      <div
        className="c8"
      >
        <div
          className="c9"
          role="group"
          style={undefined}
        >
          <label
            className="c6"
            htmlFor="bT"
          >
            ⁣
          </label>
          <button
            className="c10 c11 c12"
            disabled={false}
            href=""
            icon={true}
            onClick={[Function]}
            type="button"
          >
            Create Instance
          </button>
        </div>
      </div>
    </div>
  </form>
  <form>
    <table
      className="c13"
    >
      <thead
        className="c14"
        disabled={undefined}
        name="thdead"
        selected={undefined}
      >
        <tr
          className="c15"
          disabled={undefined}
          name="tr"
          selected={undefined}
        >
          <th
            className="c16 c17"
            disabled={undefined}
            name="th"
            selected={undefined}
          >
            <div
              className="c18 c19 c20"
              role="group"
              style={undefined}
            >
              <li
                className="c21"
              >
                <div
                  checked={true}
                  className="c22"
                  disabled={false}
                  id="bV"
                  onChange={[Function]}
                  type="checkbox"
                >
                  <input
                    checked={true}
                    className="c23"
                    disabled={false}
                    id="bW"
                    onChange={[Function]}
                    type="checkbox"
                  />
                  <label
                    className="c24"
                    htmlFor="bW"
                  />
                </div>
              </li>
            </div>
          </th>
          <th
            className="c25"
            disabled={undefined}
            name="th"
            onClick={[Function]}
            selected={undefined}
          >
            <span>
              Name 
            </span>
            <svg
              className="c26"
              height="6"
              marginBottom="0.125rem"
              marginLeft="0.5625rem"
              style={
                Object {
                  "transform": "rotate(180deg)",
                }
              }
              viewBox="0 0 9 6"
              width="9"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M9 1.386L7.648 0 4.5 3.228 1.352 0 0 1.386 4.5 6z"
                fill="rgba(73, 73, 73, 1)"
                fillRule="evenodd"
              />
            </svg>
          </th>
          <th
            className="c27"
            disabled={undefined}
            name="th"
            onClick={[Function]}
            selected={undefined}
          >
            <span>
              Status 
            </span>
          </th>
          <th
            className="c28"
            disabled={undefined}
            name="th"
            onClick={[Function]}
            selected={undefined}
          >
            <span>
              Created 
            </span>
          </th>
          <th
            className="c29"
            disabled={undefined}
            name="th"
            onClick={[Function]}
            selected={undefined}
          >
            <span>
              Short ID 
            </span>
          </th>
          <th
            className="c30 c31"
            disabled={undefined}
            name="th"
            selected={undefined}
          />
        </tr>
      </thead>
      <tbody
        className="c32"
        disabled={undefined}
        name="tbody"
        selected={undefined}
      >
        <tr
          className="c33"
          disabled={undefined}
          name="tr"
          selected={undefined}
        >
          <td
            className="c34 c35"
            disabled={undefined}
            name="td"
            selected={undefined}
          >
            <div
              className="c18 c19 c20"
              name="2252839a-e698-ceec-afac-9549ad0c6624"
              role="group"
              style={undefined}
            >
              <li
                className="c21"
              >
                <div
                  checked={false}
                  className="c22"
                  disabled={false}
                  id="bX"
                  type="checkbox"
                >
                  <input
                    checked={false}
                    className="c23"
                    disabled={false}
                    id="bY"
                    type="checkbox"
                  />
                  <label
                    className="c24"
                    htmlFor="bY"
                  />
                </div>
              </li>
            </div>
          </td>
          <td
            className="c35"
            disabled={undefined}
            name="td"
            selected={undefined}
          >
            <a
              className="c36 c37"
              to="/instances/2252839a"
            >
              2252839a
            </a>
          </td>
          <td
            className="c35"
            disabled={undefined}
            name="td"
            selected={undefined}
          >
            <span>
              <span
                className="c38"
                color="green"
                height="0.6875rem"
                width="0.6875rem"
              />
               
              Running
            </span>
          </td>
          <td
            className="c39"
            disabled={undefined}
            name="td"
            selected={undefined}
          >
            almost NaN years
          </td>
          <td
            className="c40"
            disabled={undefined}
            name="td"
            selected={undefined}
          >
            <code>
              2252839
            </code>
          </td>
          <td
            className="c41 c42"
            disabled={undefined}
            name="td"
            selected={undefined}
          >
            <div
              box={true}
              className="c43"
              onClick={[Function]}
              onMouseEnter={undefined}
              onMouseLeave={undefined}
              tag="div"
            >
              <svg
                className=""
                height="16"
                style={
                  Object {
                    "transform": "rotate(0deg)",
                  }
                }
                viewBox="0 0 4 16"
                width="4"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M2 4a2 2 0 1 0 0-4 2 2 0 0 0 0 4z"
                  fill="rgba(73, 73, 73, 1)"
                  fill-rule="evenodd"
                />
                <path
                  d="M2 4a2 2 0 1 0 0-4 2 2 0 0 0 0 4z"
                  fill="rgba(73, 73, 73, 1)"
                  fill-rule="evenodd"
                  style={
                    Object {
                      "transform": "translateY(0.375rem)",
                    }
                  }
                />
                <path
                  d="M2 4a2 2 0 1 0 0-4 2 2 0 0 0 0 4z"
                  fill="rgba(73, 73, 73, 1)"
                  fill-rule="evenodd"
                  style={
                    Object {
                      "transform": "translateY(0.75rem)",
                    }
                  }
                />
              </svg>
            </div>
          </td>
        </tr>
        <tr
          className="c33"
          disabled={undefined}
          name="tr"
          selected={undefined}
        >
          <td
            className="c34 c35"
            disabled={undefined}
            name="td"
            selected={undefined}
          >
            <div
              className="c18 c19 c20"
              name="f1bd1730-e8a6-4956-e738-d8e85cc6aa04"
              role="group"
              style={undefined}
            >
              <li
                className="c21"
              >
                <div
                  checked={false}
                  className="c22"
                  disabled={false}
                  id="bZ"
                  type="checkbox"
                >
                  <input
                    checked={false}
                    className="c23"
                    disabled={false}
                    id="ca"
                    type="checkbox"
                  />
                  <label
                    className="c24"
                    htmlFor="ca"
                  />
                </div>
              </li>
            </div>
          </td>
          <td
            className="c35"
            disabled={undefined}
            name="td"
            selected={undefined}
          >
            <a
              className="c36 c37"
              to="/instances/f1bd1730"
            >
              f1bd1730
            </a>
          </td>
          <td
            className="c35"
            disabled={undefined}
            name="td"
            selected={undefined}
          >
            <span>
              <span
                className="c38"
                color="green"
                height="0.6875rem"
                width="0.6875rem"
              />
               
              Running
            </span>
          </td>
          <td
            className="c39"
            disabled={undefined}
            name="td"
            selected={undefined}
          >
            almost NaN years
          </td>
          <td
            className="c40"
            disabled={undefined}
            name="td"
            selected={undefined}
          >
            <code>
              f1bd173
            </code>
          </td>
          <td
            className="c41 c42"
            disabled={undefined}
            name="td"
            selected={undefined}
          >
            <div
              box={true}
              className="c43"
              onClick={[Function]}
              onMouseEnter={undefined}
              onMouseLeave={undefined}
              tag="div"
            >
              <svg
                className=""
                height="16"
                style={
                  Object {
                    "transform": "rotate(0deg)",
                  }
                }
                viewBox="0 0 4 16"
                width="4"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M2 4a2 2 0 1 0 0-4 2 2 0 0 0 0 4z"
                  fill="rgba(73, 73, 73, 1)"
                  fill-rule="evenodd"
                />
                <path
                  d="M2 4a2 2 0 1 0 0-4 2 2 0 0 0 0 4z"
                  fill="rgba(73, 73, 73, 1)"
                  fill-rule="evenodd"
                  style={
                    Object {
                      "transform": "translateY(0.375rem)",
                    }
                  }
                />
                <path
                  d="M2 4a2 2 0 1 0 0-4 2 2 0 0 0 0 4z"
                  fill="rgba(73, 73, 73, 1)"
                  fill-rule="evenodd"
                  style={
                    Object {
                      "transform": "translateY(0.75rem)",
                    }
                  }
                />
              </svg>
            </div>
          </td>
        </tr>
      </tbody>
    </table>
  </form>
  <div
    className="c44 c45"
  >
    <div
      className="c46"
    >
      <div
        className="c47"
      >
        <div
          className="c48"
        >
          <span
            name="react-responsive-mock"
            query="only screen and (max-width: 47.9375rem)"
          >
            <button
              className="c49 c11 c12"
              disabled={false}
              href=""
              icon={true}
              onClick={[Function]}
              type="button"
            >
              <svg
                className=""
                height="15"
                style={
                  Object {
                    "transform": "rotate(0deg)",
                  }
                }
                version="1.1"
                width="15"
                xmlnsXlink="http://www.w3.org/1999/xlink"
              >
                <g
                  transform="translate(18292 -19563)"
                >
                  <mask
                    id="L"
                  >
                    <rect
                      fill="#fff"
                      height={15}
                      transform="matrix(6.12323e-17 1 -1 6.12323e-17 -18278 19564)"
                      width={15}
                      x={-1}
                      y={-1}
                    />
                    <use
                      fill="#000"
                      transform="matrix(6.12323e-17 1 -1 6.12323e-17 -18278 19564)"
                      xlinkHref="#M"
                    />
                  </mask>
                  <g
                    mask="url(#L"
                  >
                    <use
                      fill="rgba(73, 73, 73, 1)"
                      transform="matrix(6.12323e-17 1 -1 6.12323e-17 -18278 19564)"
                      xlinkHref="#N"
                    />
                  </g>
                </g>
                <defs>
                  <path
                    d="M5.595 1.93a1 1 0 0 1 1.81 0l4.056 8.645A1 1 0 0 1 10.556 12H2.444a1 1 0 0 1-.905-1.425L5.595 1.93z"
                    id="M"
                  />
                  <path
                    d="M1.54 10.575l-1.812-.85 1.811.85zM7.404 1.93l-1.81.85 1.81-.85zm-1.81.85l4.055 8.645 3.621-1.7-4.055-8.644-3.621 1.698zm4.96 7.22h-8.11v4h8.11v-4zM3.35 11.425l4.055-8.646-3.621-1.698-4.056 8.645 3.622 1.699zM2.444 10a1 1 0 0 1 .906 1.425l-3.622-1.7C-1.205 11.716.247 14 2.444 14v-4zm7.206 1.425A1 1 0 0 1 10.555 10v4c2.198 0 3.65-2.285 2.716-4.274l-3.62 1.699zM9.216 1.08c-1.08-2.302-4.353-2.302-5.432 0l3.621 1.698a1 1 0 0 1-1.81 0l3.621-1.698z"
                    id="N"
                  />
                </defs>
              </svg>
            </button>
          </span>
          <span
            name="react-responsive-mock"
            query="only screen and (min-width: 48rem)"
          >
            <button
              className="c50 c11 c12"
              disabled={false}
              href=""
              icon={true}
              onClick={[Function]}
              type="button"
            >
              <svg
                className=""
                height="15"
                style={
                  Object {
                    "transform": "rotate(0deg)",
                  }
                }
                version="1.1"
                width="15"
                xmlnsXlink="http://www.w3.org/1999/xlink"
              >
                <g
                  transform="translate(18292 -19563)"
                >
                  <mask
                    id="L"
                  >
                    <rect
                      fill="#fff"
                      height={15}
                      transform="matrix(6.12323e-17 1 -1 6.12323e-17 -18278 19564)"
                      width={15}
                      x={-1}
                      y={-1}
                    />
                    <use
                      fill="#000"
                      transform="matrix(6.12323e-17 1 -1 6.12323e-17 -18278 19564)"
                      xlinkHref="#M"
                    />
                  </mask>
                  <g
                    mask="url(#L"
                  >
                    <use
                      fill="rgba(73, 73, 73, 1)"
                      transform="matrix(6.12323e-17 1 -1 6.12323e-17 -18278 19564)"
                      xlinkHref="#N"
                    />
                  </g>
                </g>
                <defs>
                  <path
                    d="M5.595 1.93a1 1 0 0 1 1.81 0l4.056 8.645A1 1 0 0 1 10.556 12H2.444a1 1 0 0 1-.905-1.425L5.595 1.93z"
                    id="M"
                  />
                  <path
                    d="M1.54 10.575l-1.812-.85 1.811.85zM7.404 1.93l-1.81.85 1.81-.85zm-1.81.85l4.055 8.645 3.621-1.7-4.055-8.644-3.621 1.698zm4.96 7.22h-8.11v4h8.11v-4zM3.35 11.425l4.055-8.646-3.621-1.698-4.056 8.645 3.622 1.699zM2.444 10a1 1 0 0 1 .906 1.425l-3.622-1.7C-1.205 11.716.247 14 2.444 14v-4zm7.206 1.425A1 1 0 0 1 10.555 10v4c2.198 0 3.65-2.285 2.716-4.274l-3.62 1.699zM9.216 1.08c-1.08-2.302-4.353-2.302-5.432 0l3.621 1.698a1 1 0 0 1-1.81 0l3.621-1.698z"
                    id="N"
                  />
                </defs>
              </svg>
              <span>
                Start
              </span>
            </button>
          </span>
          <span
            name="react-responsive-mock"
            query="only screen and (max-width: 47.9375rem)"
          >
            <button
              className="c51 c11 c12"
              disabled={true}
              href=""
              icon={true}
              onClick={[Function]}
              type="button"
            >
              <svg
                className=""
                height="14"
                style={
                  Object {
                    "transform": "rotate(0deg)",
                  }
                }
                version="1.1"
                viewBox="0 0 14 14"
                width="14"
                xmlns="http://www.w3.org/2000/svg"
                xmlnsXlink="http://www.w3.org/1999/xlink"
              >
                <g
                  transform="translate(18113 -18582)"
                >
                  <g>
                    <mask
                      id="O"
                    >
                      <use
                        fill="white"
                        transform="translate(-18113 18582)"
                        xlinkHref="#P"
                      />
                    </mask>
                    <g
                      mask="url(#O)"
                    >
                      <use
                        fill="rgb(216, 216, 216)"
                        transform="translate(-18113 18582)"
                        xlinkHref="#Q"
                      />
                    </g>
                  </g>
                </g>
                <defs>
                  <path
                    d="M 0 2C 0 0.895431 0.895431 0 2 0L 12 0C 13.1046 0 14 0.895431 14 2L 14 12C 14 13.1046 13.1046 14 12 14L 2 14C 0.895431 14 0 13.1046 0 12L 0 2Z"
                    id="P"
                  />
                  <path
                    d="M 2 2L 12 2L 12 -2L 2 -2L 2 2ZM 12 2L 12 12L 16 12L 16 2L 12 2ZM 12 12L 2 12L 2 16L 12 16L 12 12ZM 2 12L 2 2L -2 2L -2 12L 2 12ZM 2 12L 2 12L -2 12C -2 14.2091 -0.209139 16 2 16L 2 12ZM 12 12L 12 12L 12 16C 14.2091 16 16 14.2091 16 12L 12 12ZM 12 2L 12 2L 16 2C 16 -0.209139 14.2091 -2 12 -2L 12 2ZM 2 -2C -0.209139 -2 -2 -0.209139 -2 2L 2 2L 2 2L 2 -2Z"
                    id="Q"
                  />
                </defs>
              </svg>
            </button>
          </span>
          <span
            name="react-responsive-mock"
            query="only screen and (min-width: 48rem)"
          >
            <button
              className="c52 c11 c12"
              disabled={true}
              href=""
              icon={true}
              onClick={[Function]}
              type="button"
            >
              <svg
                className=""
                height="14"
                style={
                  Object {
                    "transform": "rotate(0deg)",
                  }
                }
                version="1.1"
                viewBox="0 0 14 14"
                width="14"
                xmlns="http://www.w3.org/2000/svg"
                xmlnsXlink="http://www.w3.org/1999/xlink"
              >
                <g
                  transform="translate(18113 -18582)"
                >
                  <g>
                    <mask
                      id="O"
                    >
                      <use
                        fill="white"
                        transform="translate(-18113 18582)"
                        xlinkHref="#P"
                      />
                    </mask>
                    <g
                      mask="url(#O)"
                    >
                      <use
                        fill="rgb(216, 216, 216)"
                        transform="translate(-18113 18582)"
                        xlinkHref="#Q"
                      />
                    </g>
                  </g>
                </g>
                <defs>
                  <path
                    d="M 0 2C 0 0.895431 0.895431 0 2 0L 12 0C 13.1046 0 14 0.895431 14 2L 14 12C 14 13.1046 13.1046 14 12 14L 2 14C 0.895431 14 0 13.1046 0 12L 0 2Z"
                    id="P"
                  />
                  <path
                    d="M 2 2L 12 2L 12 -2L 2 -2L 2 2ZM 12 2L 12 12L 16 12L 16 2L 12 2ZM 12 12L 2 12L 2 16L 12 16L 12 12ZM 2 12L 2 2L -2 2L -2 12L 2 12ZM 2 12L 2 12L -2 12C -2 14.2091 -0.209139 16 2 16L 2 12ZM 12 12L 12 12L 12 16C 14.2091 16 16 14.2091 16 12L 12 12ZM 12 2L 12 2L 16 2C 16 -0.209139 14.2091 -2 12 -2L 12 2ZM 2 -2C -0.209139 -2 -2 -0.209139 -2 2L 2 2L 2 2L 2 -2Z"
                    id="Q"
                  />
                </defs>
              </svg>
              <span>
                Stop
              </span>
            </button>
          </span>
          <span
            name="react-responsive-mock"
            query="only screen and (max-width: 47.9375rem)"
          >
            <button
              className="c51 c11 c12"
              disabled={true}
              href=""
              icon={true}
              onClick={[Function]}
              type="button"
            >
              <svg
                className=""
                height="21"
                style={
                  Object {
                    "transform": "rotate(0deg)",
                  }
                }
                version="1.1"
                viewBox="0 0 20 21"
                width="20"
                xmlns="http://www.w3.org/2000/svg"
                xmlnsXlink="http://www.w3.org/1999/xlink"
              >
                <g
                  transform="translate(17997 -18577)"
                >
                  <g>
                    <use
                      fill="rgb(216, 216, 216)"
                      transform="matrix(0.866025 0.5 -0.5 0.866025 -17988.7 18577.9)"
                      xlinkHref="#K"
                    />
                  </g>
                </g>
                <defs>
                  <path
                    d="M 5.39661 3.57718L 5.3977 5.34469L 10.0255 2.67281L 5.39715 0L 5.39832 2.00201C 2.33086 2.5484 0.00065755 5.23112 0 8.45654C 0.000380483 12.0783 2.93556 15.0137 6.55562 15.0143C 10.1774 15.014 13.1128 12.0788 13.1124 8.45702L 11.5697 8.45687C 11.5697 11.2264 9.32527 13.4717 6.55578 13.4716C 3.78629 13.4716 1.54268 11.2262 1.5427 8.45669C 1.54135 6.08718 3.18616 4.10012 5.39661 3.57718Z"
                    fillRule="evenodd"
                    id="K"
                  />
                </defs>
              </svg>
            </button>
          </span>
          <span
            name="react-responsive-mock"
            query="only screen and (min-width: 48rem)"
          >
            <button
              className="c52 c11 c12"
              disabled={true}
              href=""
              icon={true}
              onClick={[Function]}
              type="button"
            >
              <svg
                className=""
                height="21"
                style={
                  Object {
                    "transform": "rotate(0deg)",
                  }
                }
                version="1.1"
                viewBox="0 0 20 21"
                width="20"
                xmlns="http://www.w3.org/2000/svg"
                xmlnsXlink="http://www.w3.org/1999/xlink"
              >
                <g
                  transform="translate(17997 -18577)"
                >
                  <g>
                    <use
                      fill="rgb(216, 216, 216)"
                      transform="matrix(0.866025 0.5 -0.5 0.866025 -17988.7 18577.9)"
                      xlinkHref="#K"
                    />
                  </g>
                </g>
                <defs>
                  <path
                    d="M 5.39661 3.57718L 5.3977 5.34469L 10.0255 2.67281L 5.39715 0L 5.39832 2.00201C 2.33086 2.5484 0.00065755 5.23112 0 8.45654C 0.000380483 12.0783 2.93556 15.0137 6.55562 15.0143C 10.1774 15.014 13.1128 12.0788 13.1124 8.45702L 11.5697 8.45687C 11.5697 11.2264 9.32527 13.4717 6.55578 13.4716C 3.78629 13.4716 1.54268 11.2262 1.5427 8.45669C 1.54135 6.08718 3.18616 4.10012 5.39661 3.57718Z"
                    fillRule="evenodd"
                    id="K"
                  />
                </defs>
              </svg>
              <span>
                Reboot
              </span>
            </button>
          </span>
        </div>
        <div
          className="c53"
        >
          <span
            name="react-responsive-mock"
            query="only screen and (max-width: 47.9375rem)"
          >
            <button
              className="c54 c11 c12"
              disabled={true}
              href=""
              icon={true}
              onClick={[Function]}
              type="button"
            >
              <svg
                className=""
                height="12"
                style={
                  Object {
                    "transform": "rotate(0deg)",
                  }
                }
                version="1.1"
                viewBox="0 0 9 12"
                width="9"
                xmlns="http://www.w3.org/2000/svg"
                xmlnsXlink="http://www.w3.org/1999/xlink"
              >
                <g
                  transform="translate(17403 -18583)"
                >
                  <g>
                    <use
                      fill="rgba(73, 73, 73, 1)"
                      transform="translate(-17403 18583)"
                      xlinkHref="#j"
                    />
                  </g>
                </g>
                <defs>
                  <path
                    d="M 2 0L 2 1L 0 1L 0 2L 9 2L 9 1L 7 1L 7 0L 2 0ZM 0 3L 1 12L 8 12L 9 3L 0 3ZM 6 4L 7.882 4L 7.104 11L 6 11L 6 4ZM 4 11L 5.001 11L 5.001 4L 4 4L 4 11ZM 1.11719 4L 3.00019 4L 3.00019 11L 1.89619 11L 1.11719 4Z"
                    fillRule="evenodd"
                    id="j"
                  />
                </defs>
              </svg>
            </button>
          </span>
          <span
            name="react-responsive-mock"
            query="only screen and (min-width: 48rem)"
          >
            <button
              className="c55 c11 c12"
              disabled={true}
              href=""
              icon={true}
              onClick={[Function]}
              type="button"
            >
              <svg
                className=""
                height="12"
                style={
                  Object {
                    "transform": "rotate(0deg)",
                  }
                }
                version="1.1"
                viewBox="0 0 9 12"
                width="9"
                xmlns="http://www.w3.org/2000/svg"
                xmlnsXlink="http://www.w3.org/1999/xlink"
              >
                <g
                  transform="translate(17403 -18583)"
                >
                  <g>
                    <use
                      fill="rgb(216, 216, 216)"
                      transform="translate(-17403 18583)"
                      xlinkHref="#j"
                    />
                  </g>
                </g>
                <defs>
                  <path
                    d="M 2 0L 2 1L 0 1L 0 2L 9 2L 9 1L 7 1L 7 0L 2 0ZM 0 3L 1 12L 8 12L 9 3L 0 3ZM 6 4L 7.882 4L 7.104 11L 6 11L 6 4ZM 4 11L 5.001 11L 5.001 4L 4 4L 4 11ZM 1.11719 4L 3.00019 4L 3.00019 11L 1.89619 11L 1.11719 4Z"
                    fillRule="evenodd"
                    id="j"
                  />
                </defs>
              </svg>
              <span>
                Remove
              </span>
            </button>
          </span>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`renders <List loading /> without throwing 1`] = `
.c14 {
  fill: rgb(59,70,204);
  stroke: rgb(59,70,204);
  -webkit-animation: iCqDak 1.5s ease-out 0s infinite;
  animation: iCqDak 1.5s ease-out 0s infinite;
}

.c15 {
  fill: rgb(59,70,204);
  stroke: rgb(59,70,204);
  -webkit-animation: iCqDak 1.5s ease-out 0s infinite;
  animation: iCqDak 1.5s ease-out 0s infinite;
  -webkit-animation-delay: 0.5s;
  animation-delay: 0.5s;
}

.c16 {
  fill: rgb(59,70,204);
  stroke: rgb(59,70,204);
  -webkit-animation: iCqDak 1.5s ease-out 0s infinite;
  animation: iCqDak 1.5s ease-out 0s infinite;
  -webkit-animation-delay: 1s;
  animation-delay: 1s;
}

.c13 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-flex-wrap: nowrap;
  -ms-flex-wrap: nowrap;
  flex-wrap: nowrap;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-content: center;
  -ms-flex-line-pack: center;
  align-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-height: 1.25rem;
  -webkit-flex: 1 0 auto;
  -ms-flex: 1 0 auto;
  flex: 1 0 auto;
}

.c17 {
  color: rgba(73,73,73,1);
  line-height: 1.5rem;
  font-size: 0.9375rem;
  margin: 0;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  -webkit-align-self: stretch;
  -ms-flex-item-align: stretch;
  align-self: stretch;
  text-align: center;
  margin-bottom: 0;
  margin-left: 0.375rem;
}

.c17 + p,
.c17 + small,
.c17 + h1,
.c17 + h2,
.c17 + label,
.c17 + h3,
.c17 + h4,
.c17 + h5,
.c17 + div,
.c17 + span {
  padding-bottom: 2.25rem;
}

.c12 {
  font-family: sans-serif;
  font-size: 100%;
  line-height: 1.15;
  margin: 0;
  overflow: visible;
  text-transform: none;
  -webkit-appearance: button;
  -moz-appearance: button;
  appearance: button;
  min-width: 7.5rem;
}

.c12::-moz-focus-inner,
.c12[type='button']::-moz-focus-inner,
.c12[type='reset']::-moz-focus-inner,
.c12[type='submit']::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

.c12:-moz-focusring,
.c12[type='button']:-moz-focusring,
.c12[type='reset']:-moz-focusring,
.c12[type='submit']:-moz-focusring {
  outline: 0.0625rem dotted ButtonText;
}

.c12 + button {
  margin-left: 0.375rem;
}

.c11 {
  display: inline-block;
}

.c10 {
  box-sizing: border-box;
  display: inline-block;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-height: 3rem;
  height: 3rem;
  min-width: 7.5rem;
  margin-bottom: 0.5rem;
  margin-top: 0.5rem;
  padding: 0.9375rem 1.125rem;
  position: relative;
  font-size: 0.9375rem;
  text-align: center;
  font-style: normal;
  font-stretch: normal;
  line-height: normal;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  text-decoration: none;
  white-space: nowrap;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  color: rgb(255,255,255);
  -webkit-text-fill-color: currentcolor;
  background-image: none;
  background-color: rgb(59,70,204);
  border-radius: 0.25rem;
  border: solid 0.0625rem rgb(45,56,132);
  cursor: not-allowed;
  pointer-events: none;
  color: rgb(216,216,216);
  background-color: rgb(250,250,250);
  border-color: rgb(216,216,216);
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 100%;
  max-width: 100%;
}

.c10:focus {
  outline: 0;
  text-decoration: none;
  background-color: rgb(59,70,204);
  border-color: rgb(45,56,132);
}

.c10:hover {
  background-color: rgb(72,83,217);
  border: solid 0.0625rem rgb(45,56,132);
}

.c10:active,
.c10:active:hover,
.c10:active:focus {
  background-image: none;
  outline: 0;
  background-color: rgb(45,56,132);
  border-color: rgb(45,56,132);
}

.c10[disabled] {
  cursor: not-allowed;
  pointer-events: none;
}

.c10:focus {
  background-color: rgb(250,250,250);
  border-color: rgb(216,216,216);
}

.c10:hover {
  background-color: rgb(250,250,250);
  border-color: rgb(250,250,250);
}

.c10:active,
.c10:active:hover,
.c10:active:focus {
  background-color: rgb(250,250,250);
  border-color: rgb(250,250,250);
}

.c10 svg + span {
  margin-left: 0.75rem;
}

.c10 svg {
  max-height: 1.125rem;
}

.c2 {
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 0 1 auto;
  -ms-flex: 0 1 auto;
  flex: 0 1 auto;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-right: -0.5rem;
  margin-left: -0.5rem;
}

.c4 {
  box-sizing: border-box;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  padding-right: 0.5rem;
  padding-left: 0.5rem;
}

.c8 {
  box-sizing: border-box;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  padding-right: 0.5rem;
  padding-left: 0.5rem;
}

.c0 {
  margin-right: auto;
  margin-left: auto;
  box-sizing: border-box;
  width: 100%;
  max-width: 62.5rem;
  padding-bottom: 1.125rem;
}

.c1 {
  background-color: rgb(216,216,216);
  margin: 0;
  background-color: transparent;
  height: 1.875rem;
}

.c3 {
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 0 1 auto;
  -ms-flex: 0 1 auto;
  flex: 0 1 auto;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-right: -0.5rem;
  margin-left: -0.5rem;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
}

.c5 {
  display: inline-block;
  margin: 0;
  padding: 0;
  border: none;
  overflow: hidden;
  height: auto;
  -webkit-margin-start: 0;
  -webkit-margin-end: 0;
  -webkit-padding-before: 0;
  -webkit-padding-start: 0;
  -webkit-padding-end: 0;
  -webkit-padding-after: 0;
  width: 100%;
}

.c9 {
  display: inline-block;
  margin: 0;
  padding: 0;
  border: none;
  overflow: hidden;
  height: auto;
  -webkit-margin-start: 0;
  -webkit-margin-end: 0;
  -webkit-padding-before: 0;
  -webkit-padding-start: 0;
  -webkit-padding-end: 0;
  -webkit-padding-after: 0;
  float: right;
}

.c7 {
  box-sizing: border-box;
  width: 18.75rem;
  height: 3rem;
  min-height: 3rem;
  margin-bottom: 0.5rem;
  margin-top: 0.5rem;
  padding: 0.8125rem 1.125rem;
  border-radius: 0.25rem;
  background-color: rgb(255,255,255);
  border: 0.0625rem solid rgb(216,216,216);
  color: rgb(250,250,250);
  background-color: rgb(250,250,250);
  color: rgb(216,216,216);
  cursor: not-allowed;
  width: 100%;
  text-overflow: ellipsis;
  font-size: 0.9375rem;
  line-height: normal !important;
  font-style: normal;
  font-stretch: normal;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  outline: 0;
}

.c7::-webkit-input-placeholder {
  color: rgba(73,73,73,0.5);
}

.c7::-moz-placeholder {
  color: rgba(73,73,73,0.5);
}

.c7:-ms-input-placeholder {
  color: rgba(73,73,73,0.5);
}

.c7:invalid {
  box-shadow: none;
}

.c7::-webkit-input-placeholder {
  color: rgb(216,216,216);
}

.c7::-moz-placeholder {
  color: rgb(216,216,216);
}

.c7:-ms-input-placeholder {
  color: rgb(216,216,216);
}

.c7:disabled {
  background-color: rgb(250,250,250);
  color: rgb(216,216,216);
  cursor: not-allowed;
}

.c7:disabled::-webkit-input-placeholder {
  color: rgba(73,73,73,0.5);
}

.c7:disabled::-moz-placeholder {
  color: rgba(73,73,73,0.5);
}

.c7:disabled:-ms-input-placeholder {
  color: rgba(73,73,73,0.5);
}

.c7:focus {
  border-color: rgb(59,70,204);
  outline: 0;
}

.c6 {
  font-size: 0.9375rem;
  font-style: normal;
  font-stretch: normal;
  display: block;
  color: rgb(70,70,70);
  text-align: left;
  margin-right: 0.75rem;
  font-weight: bold;
  white-space: pre;
  font-size: 0.8125rem;
}

@media only screen and (min-width:0em) {
  .c4 {
    -webkit-flex-basis: 58.333333333333336%;
    -ms-flex-preferred-size: 58.333333333333336%;
    flex-basis: 58.333333333333336%;
    max-width: 58.333333333333336%;
    display: block;
  }
}

@media only screen and (min-width:48em) {
  .c4 {
    -webkit-flex-basis: 41.66666666666667%;
    -ms-flex-preferred-size: 41.66666666666667%;
    flex-basis: 41.66666666666667%;
    max-width: 41.66666666666667%;
    display: block;
  }
}

@media only screen and (min-width:0em) {
  .c8 {
    -webkit-flex-basis: 41.66666666666667%;
    -ms-flex-preferred-size: 41.66666666666667%;
    flex-basis: 41.66666666666667%;
    max-width: 41.66666666666667%;
    display: block;
  }
}

@media only screen and (min-width:48em) {
  .c8 {
    -webkit-flex-basis: 58.333333333333336%;
    -ms-flex-preferred-size: 58.333333333333336%;
    flex-basis: 58.333333333333336%;
    max-width: 58.333333333333336%;
    display: block;
  }
}

@media only screen and (min-width:48em) {
  .c0 {
    width: 46rem;
  }
}

@media only screen and (min-width:64em) {
  .c0 {
    width: 61rem;
  }
}

@media only screen and (min-width:75em) {
  .c0 {
    width: 76rem;
  }
}

@media only screen and (max-width:47.9375rem) {
  .c0 {
    padding-left: 0.375rem;
    padding-right: 0.375rem;
  }
}

<div
  className="c0"
>
  <div
    className="c1 c2"
    height="1.875rem"
  />
  <form
    onSubmit={undefined}
  >
    <div
      className="c3"
    >
      <div
        className="c4"
      >
        <div
          className="c5"
          name="filter"
          role="group"
          style={undefined}
        >
          <label
            className="c6"
            htmlFor="be"
          >
            Filter instances
          </label>
          <input
            className="c7"
            disabled={true}
            id="be"
            placeholder="Search for name, state, tags, etc..."
          />
        </div>
      </div>
      <div
        className="c8"
      >
        <div
          className="c9"
          role="group"
          style={undefined}
        >
          <label
            className="c6"
            htmlFor="bg"
          >
            ⁣
          </label>
          <button
            className="c10 c11 c12"
            disabled={true}
            href=""
            icon={true}
            onClick={[Function]}
            type="button"
          >
            Create Instance
          </button>
        </div>
      </div>
    </div>
  </form>
  <div
    className="c1 c2"
    height="1.875rem"
  />
  <div
    className="c13"
  >
    <svg
      height="10"
      width="28"
    >
      <rect
        className="c14"
        height="6"
        width="6"
        x="2"
        y="2"
      />
      <rect
        className="c15"
        height="6"
        width="6"
        x="11"
        y="2"
      />
      <rect
        className="c16"
        height="6"
        width="6"
        x="20"
        y="2"
      />
    </svg>
    <p
      className="c17"
    >
      Loading...
    </p>
  </div>
</div>
`;
