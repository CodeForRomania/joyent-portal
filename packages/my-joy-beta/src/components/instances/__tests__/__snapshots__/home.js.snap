// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders <CopiableField /> without throwing 1`] = `
.c0 {
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 0 1 auto;
  -ms-flex: 0 1 auto;
  flex: 0 1 auto;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-right: -0.5rem;
  margin-left: -0.5rem;
}

.c1 {
  box-sizing: border-box;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  padding-right: 0.5rem;
  padding-left: 0.5rem;
}

.c4 {
  box-sizing: border-box;
  font-family: 'Libre Franklin', -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen-Sans, Ubuntu, Cantarell, Helvetica, sans-serif;
  width: 100%;
  height: 3rem;
  min-height: 3rem;
  margin-bottom: 0.5rem;
  margin-top: 0.5rem;
  padding: 0.8125rem 1.125rem;
  border-radius: 0.25rem;
  border: 0.0625rem solid;
  max-width: 100%;
  font-size: 0.9375rem;
  line-height: normal !important;
  font-weight: 400;
  font-style: normal;
  font-stretch: normal;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  outline: 0;
}

.c4:invalid {
  box-shadow: none;
}

.c4:focus {
  outline: 0;
}

.c2 {
  font-weight: 400;
  font-size: 0.9375rem;
  font-style: normal;
  font-stretch: normal;
  display: block;
  text-align: left;
  margin-right: 0.75rem;
  font-weight: bold;
  white-space: pre;
  font-size: 0.8125rem;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  margin-bottom: 0.625rem;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c3 input {
  padding-right: 1.875rem;
}

.c3 div {
  position: relative;
  left: -1.625rem;
}

.c5 {
  cursor: pointer;
}

@media only screen and (min-width:0em) {
  .c1 {
    -webkit-flex-basis: 100%;
    -ms-flex-preferred-size: 100%;
    flex-basis: 100%;
    max-width: 100%;
    display: block;
  }
}

@media only screen and (min-width:64em) {
  .c1 {
    -webkit-flex-basis: 58.333333333333336%;
    -ms-flex-preferred-size: 58.333333333333336%;
    flex-basis: 58.333333333333336%;
    max-width: 58.333333333333336%;
    display: block;
  }
}

<div
  className="c0"
>
  <div
    className="c1"
  >
    <label
      className="c2"
      htmlFor=""
    >
      test
    </label>
    <div
      className="c3"
    >
      <input
        className="c4"
        disabled={false}
        id=""
        value="test"
      />
      <div
        onClick={undefined}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        tag={false}
      >
        <svg
          className="c5 "
          height="16"
          onClick={[Function]}
          style={
            Object {
              "transform": "rotate(0deg)",
            }
          }
          version="1.1"
          width="13"
          xmlnsXlink="http://www.w3.org/1999/xlink"
        >
          <g
            transform="translate(-2367 443)"
          >
            <use
              fill="#464646"
              transform="translate(2370 -437)"
              xlinkHref="#e"
            />
            <use
              fill="#464646"
              transform="translate(2367 -443)"
              xlinkHref="#f"
            />
          </g>
          <defs>
            <path
              d="M6 3L4 5V0H3v5L1 3 0 4l3.5 3L7 4 6 3z"
              id="e"
            />
            <path
              d="M12 1h-2V0H3v1H1c-.6 0-1 .4-1 1v13c0 .6.4 1 1 1h11c.6 0 1-.4 1-1V2c0-.6-.4-1-1-1zM4 1h5v2H4V1zm8 14H1V2h2v2h7V2h2v13z"
              id="f"
            />
          </defs>
        </svg>
      </div>
    </div>
  </div>
</div>
`;

exports[`renders <CopyToClipboardTooltip /> without throwing 1`] = `
.c0 {
  cursor: pointer;
}

<div
  onClick={undefined}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
  tag={false}
>
  <svg
    className="c0 "
    height="16"
    onClick={[Function]}
    style={
      Object {
        "transform": "rotate(0deg)",
      }
    }
    version="1.1"
    width="13"
    xmlnsXlink="http://www.w3.org/1999/xlink"
  >
    <g
      transform="translate(-2367 443)"
    >
      <use
        fill="#464646"
        transform="translate(2370 -437)"
        xlinkHref="#e"
      />
      <use
        fill="#464646"
        transform="translate(2367 -443)"
        xlinkHref="#f"
      />
    </g>
    <defs>
      <path
        d="M6 3L4 5V0H3v5L1 3 0 4l3.5 3L7 4 6 3z"
        id="e"
      />
      <path
        d="M12 1h-2V0H3v1H1c-.6 0-1 .4-1 1v13c0 .6.4 1 1 1h11c.6 0 1-.4 1-1V2c0-.6-.4-1-1-1zM4 1h5v2H4V1zm8 14H1V2h2v2h7V2h2v13z"
        id="f"
      />
    </defs>
  </svg>
</div>
`;

exports[`renders <Meta /> without throwing 1`] = `
Array [
  .c0 {
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 0 1 auto;
  -ms-flex: 0 1 auto;
  flex: 0 1 auto;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-right: -0.5rem;
  margin-left: -0.5rem;
}

.c1 {
  box-sizing: border-box;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  padding-right: 0.5rem;
  padding-left: 0.5rem;
}

.c2 {
  margin: 0;
  font-weight: 400;
  line-height: 1.875rem;
  font-size: 1.5rem;
}

.c2 + p,
.c2 + small,
.c2 + h1,
.c2 + h2,
.c2 + label,
.c2 + h3,
.c2 + h4,
.c2 + h5,
.c2 + div,
.c2 + span {
  margin-top: 1.5rem;
}

@media only screen and (min-width:0em) {
  .c0 {
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
  }
}

@media only screen and (min-width:0em) {
  .c1 {
    -webkit-flex-basis: 100%;
    -ms-flex-preferred-size: 100%;
    flex-basis: 100%;
    max-width: 100%;
    display: block;
  }
}

<div
    className="c0"
>
    <div
        className="c1"
    >
        <h2
            className="c2"
        />
    </div>
</div>,
  .c0 {
  margin-top: 0.5rem;
  margin-bottom: 1rem;
}

.c5 {
  margin-top: 0.25rem;
}

.c2 {
  font-weight: 400;
  font-size: 0.9375rem;
  font-style: normal;
  font-stretch: normal;
  display: block;
  text-align: left;
}

.c4 {
  width: 0.375rem;
  height: 0.375rem;
  border-radius: 0.1875rem;
  display: inline-block;
  margin-top: 0.0625rem;
  margin-right: 0.375rem;
  height: 0.6875rem;
  width: 0.6875rem;
  border-radius: 50%;
}

.c6 {
  opacity: 0.5;
  padding-right: 0.1875rem;
}

.c1 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
}

.c3 {
  width: 0.0625rem;
  height: 1.5rem;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-self: flex-end;
  -ms-flex-item-align: end;
  align-self: flex-end;
  margin: 0 1.125rem;
}

@media (max-width:47.9375rem) {
  .c1 {
    display: block;
  }
}

@media (max-width:47.9375rem) {
  .c3 {
    display: none;
  }
}

<div
    className="c0"
>
    <div
        className="c1"
    >
        <label
            className="c2"
        >
            
        </label>
        <div
            className="c3"
        />
        <label
            className="c2"
        >
            Hardware Virtual Machine
        </label>
        <div
            className="c3"
        />
        <div
            className="c1"
        >
            <span
                className="c4"
                color="green"
                height="0.6875rem"
                width="0.6875rem"
            />
            Running
        </div>
    </div>
    <div
        className="c5"
    >
        <div
            className="c1"
        >
            <div
                className="c1"
            >
                <label
                    className="c6 c2"
                >
                    Created: 
                </label>
                <label
                    className="c2"
                >
                     
                    about 2 months
                     ago
                </label>
            </div>
            <div
                className="c3"
            />
            <div
                className="c1"
            >
                <label
                    className="c6 c2"
                >
                    Updated: 
                </label>
                <label
                    className="c2"
                >
                     
                    1 day
                     ago
                </label>
            </div>
        </div>
    </div>
</div>,
]
`;
