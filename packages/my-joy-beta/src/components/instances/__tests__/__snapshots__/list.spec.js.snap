// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders <Actions /> without throwing 1`] = `
.c7 {
  font-family: sans-serif;
  font-size: 100%;
  line-height: 1.15;
  margin: 0;
  overflow: visible;
  text-transform: none;
  -webkit-appearance: button;
  -moz-appearance: button;
  appearance: button;
  min-width: 7.5rem;
}

.c7::-moz-focus-inner,
.c7[type='button']::-moz-focus-inner,
.c7[type='reset']::-moz-focus-inner,
.c7[type='submit']::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

.c7:-moz-focusring,
.c7[type='button']:-moz-focusring,
.c7[type='reset']:-moz-focusring,
.c7[type='submit']:-moz-focusring {
  outline: 0.0625rem dotted ButtonText;
}

.c7 + button {
  margin-left: 0.375rem;
}

.c6 {
  display: inline-block;
}

.c5 {
  box-sizing: border-box;
  display: inline-block;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-height: 3rem;
  height: 3rem;
  min-width: 7.5rem;
  margin-bottom: 0.5rem;
  margin-top: 0.5rem;
  padding: 0.9375rem 1.125rem;
  position: relative;
  font-size: 0.9375rem;
  text-align: center;
  font-style: normal;
  font-stretch: normal;
  line-height: normal;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  text-decoration: none;
  white-space: nowrap;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  color: rgb(255,255,255);
  -webkit-text-fill-color: currentcolor;
  background-image: none;
  background-color: rgb(59,70,204);
  border-radius: 0.25rem;
  border: solid 0.0625rem rgb(45,56,132);
  color: rgb(70,70,70);
  -webkit-text-fill-color: currentcolor;
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
  cursor: not-allowed;
  pointer-events: none;
  color: rgb(216,216,216);
  background-color: rgb(250,250,250);
  border-color: rgb(216,216,216);
  padding: 0.5625rem 1.125rem;
  font-size: 0.8125rem;
  min-width: 0rem;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c5:focus {
  outline: 0;
  text-decoration: none;
  background-color: rgb(59,70,204);
  border-color: rgb(45,56,132);
}

.c5:hover {
  background-color: rgb(72,83,217);
  border: solid 0.0625rem rgb(45,56,132);
}

.c5:active,
.c5:active:hover,
.c5:active:focus {
  background-image: none;
  outline: 0;
  background-color: rgb(45,56,132);
  border-color: rgb(45,56,132);
}

.c5[disabled] {
  cursor: not-allowed;
  pointer-events: none;
}

.c5:focus {
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
}

.c5:hover {
  background-color: rgb(247,247,247);
  border-color: rgb(216,216,216);
}

.c5:active,
.c5:active:hover,
.c5:active:focus {
  background-color: rgb(230,230,230);
  border-color: rgb(216,216,216);
}

.c5:focus {
  background-color: rgb(250,250,250);
  border-color: rgb(216,216,216);
}

.c5:hover {
  background-color: rgb(250,250,250);
  border-color: rgb(250,250,250);
}

.c5:active,
.c5:active:hover,
.c5:active:focus {
  background-color: rgb(250,250,250);
  border-color: rgb(250,250,250);
}

.c5 svg + span {
  margin-left: 0.75rem;
}

.c5 svg {
  max-height: 1.125rem;
}

.c8 {
  box-sizing: border-box;
  display: inline-block;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-height: 3rem;
  height: 3rem;
  min-width: 7.5rem;
  margin-bottom: 0.5rem;
  margin-top: 0.5rem;
  padding: 0.9375rem 1.125rem;
  position: relative;
  font-size: 0.9375rem;
  text-align: center;
  font-style: normal;
  font-stretch: normal;
  line-height: normal;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  text-decoration: none;
  white-space: nowrap;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  color: rgb(255,255,255);
  -webkit-text-fill-color: currentcolor;
  background-image: none;
  background-color: rgb(59,70,204);
  border-radius: 0.25rem;
  border: solid 0.0625rem rgb(45,56,132);
  color: rgb(70,70,70);
  -webkit-text-fill-color: currentcolor;
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
  cursor: not-allowed;
  pointer-events: none;
  color: rgb(216,216,216);
  background-color: rgb(250,250,250);
  border-color: rgb(216,216,216);
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c8:focus {
  outline: 0;
  text-decoration: none;
  background-color: rgb(59,70,204);
  border-color: rgb(45,56,132);
}

.c8:hover {
  background-color: rgb(72,83,217);
  border: solid 0.0625rem rgb(45,56,132);
}

.c8:active,
.c8:active:hover,
.c8:active:focus {
  background-image: none;
  outline: 0;
  background-color: rgb(45,56,132);
  border-color: rgb(45,56,132);
}

.c8[disabled] {
  cursor: not-allowed;
  pointer-events: none;
}

.c8:focus {
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
}

.c8:hover {
  background-color: rgb(247,247,247);
  border-color: rgb(216,216,216);
}

.c8:active,
.c8:active:hover,
.c8:active:focus {
  background-color: rgb(230,230,230);
  border-color: rgb(216,216,216);
}

.c8:focus {
  background-color: rgb(250,250,250);
  border-color: rgb(216,216,216);
}

.c8:hover {
  background-color: rgb(250,250,250);
  border-color: rgb(250,250,250);
}

.c8:active,
.c8:active:hover,
.c8:active:focus {
  background-color: rgb(250,250,250);
  border-color: rgb(250,250,250);
}

.c8 svg + span {
  margin-left: 0.75rem;
}

.c8 svg {
  max-height: 1.125rem;
}

.c10 {
  box-sizing: border-box;
  display: inline-block;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-height: 3rem;
  height: 3rem;
  min-width: 7.5rem;
  margin-bottom: 0.5rem;
  margin-top: 0.5rem;
  padding: 0.9375rem 1.125rem;
  position: relative;
  font-size: 0.9375rem;
  text-align: center;
  font-style: normal;
  font-stretch: normal;
  line-height: normal;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  text-decoration: none;
  white-space: nowrap;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  color: rgb(255,255,255);
  -webkit-text-fill-color: currentcolor;
  background-image: none;
  background-color: rgb(59,70,204);
  border-radius: 0.25rem;
  border: solid 0.0625rem rgb(45,56,132);
  color: rgb(70,70,70);
  -webkit-text-fill-color: currentcolor;
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
  padding: 0.5625rem 1.125rem;
  font-size: 0.8125rem;
  min-width: 0rem;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  float: right;
}

.c10:focus {
  outline: 0;
  text-decoration: none;
  background-color: rgb(59,70,204);
  border-color: rgb(45,56,132);
}

.c10:hover {
  background-color: rgb(72,83,217);
  border: solid 0.0625rem rgb(45,56,132);
}

.c10:active,
.c10:active:hover,
.c10:active:focus {
  background-image: none;
  outline: 0;
  background-color: rgb(45,56,132);
  border-color: rgb(45,56,132);
}

.c10[disabled] {
  cursor: not-allowed;
  pointer-events: none;
}

.c10:focus {
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
}

.c10:hover {
  background-color: rgb(247,247,247);
  border-color: rgb(216,216,216);
}

.c10:active,
.c10:active:hover,
.c10:active:focus {
  background-color: rgb(230,230,230);
  border-color: rgb(216,216,216);
}

.c10 svg + span {
  margin-left: 0.75rem;
}

.c10 svg {
  max-height: 1.125rem;
}

.c11 {
  box-sizing: border-box;
  display: inline-block;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-height: 3rem;
  height: 3rem;
  min-width: 7.5rem;
  margin-bottom: 0.5rem;
  margin-top: 0.5rem;
  padding: 0.9375rem 1.125rem;
  position: relative;
  font-size: 0.9375rem;
  text-align: center;
  font-style: normal;
  font-stretch: normal;
  line-height: normal;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  text-decoration: none;
  white-space: nowrap;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  color: rgb(255,255,255);
  -webkit-text-fill-color: currentcolor;
  background-image: none;
  background-color: rgb(59,70,204);
  border-radius: 0.25rem;
  border: solid 0.0625rem rgb(45,56,132);
  color: rgb(70,70,70);
  -webkit-text-fill-color: currentcolor;
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  float: right;
}

.c11:focus {
  outline: 0;
  text-decoration: none;
  background-color: rgb(59,70,204);
  border-color: rgb(45,56,132);
}

.c11:hover {
  background-color: rgb(72,83,217);
  border: solid 0.0625rem rgb(45,56,132);
}

.c11:active,
.c11:active:hover,
.c11:active:focus {
  background-image: none;
  outline: 0;
  background-color: rgb(45,56,132);
  border-color: rgb(45,56,132);
}

.c11[disabled] {
  cursor: not-allowed;
  pointer-events: none;
}

.c11:focus {
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
}

.c11:hover {
  background-color: rgb(247,247,247);
  border-color: rgb(216,216,216);
}

.c11:active,
.c11:active:hover,
.c11:active:focus {
  background-color: rgb(230,230,230);
  border-color: rgb(216,216,216);
}

.c11 svg + span {
  margin-left: 0.75rem;
}

.c11 svg {
  max-height: 1.125rem;
}

.c4 {
  box-sizing: border-box;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  padding-right: 0.5rem;
  padding-left: 0.5rem;
}

.c9 {
  box-sizing: border-box;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  padding-right: 0.5rem;
  padding-left: 0.5rem;
}

.c2 {
  margin-right: auto;
  margin-left: auto;
  box-sizing: border-box;
  width: 100%;
  max-width: 62.5rem;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: nowrap;
  -ms-flex-wrap: nowrap;
  flex-wrap: nowrap;
  -webkit-align-content: stretch;
  -ms-flex-line-pack: stretch;
  align-content: stretch;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex-wrap: nowrap;
  -ms-flex-wrap: nowrap;
  flex-wrap: nowrap;
  -webkit-align-content: stretch;
  -ms-flex-line-pack: stretch;
  align-content: stretch;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  background-color: rgb(30,49,59);
  max-height: 3.3125rem;
  min-height: 3.3125rem;
  line-height: 1.5625rem;
  position: fixed;
  left: 0;
  right: 0;
  bottom: 0;
}

.c0 {
  background-color: rgba(241,241,241,1);
  border-top: 0.0625rem solid rgb(216,216,216);
  height: 4.375rem;
  max-height: 4.375rem;
}

.c3 {
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 0 1 auto;
  -ms-flex: 0 1 auto;
  flex: 0 1 auto;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-right: -0.5rem;
  margin-left: -0.5rem;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
}

@media only screen and (min-width:0em) {
  .c4 {
    -webkit-flex-basis: 58.333333333333336%;
    -ms-flex-preferred-size: 58.333333333333336%;
    flex-basis: 58.333333333333336%;
    max-width: 58.333333333333336%;
    display: block;
  }
}

@media only screen and (min-width:0em) {
  .c9 {
    -webkit-flex-basis: 41.66666666666667%;
    -ms-flex-preferred-size: 41.66666666666667%;
    flex-basis: 41.66666666666667%;
    max-width: 41.66666666666667%;
    display: block;
  }
}

@media only screen and (min-width:48em) {
  .c2 {
    width: 46rem;
  }
}

@media only screen and (min-width:64em) {
  .c2 {
    width: 61rem;
  }
}

@media only screen and (min-width:75em) {
  .c2 {
    width: 76rem;
  }
}

@media only screen and (max-width:47.9375rem) {
  .c2 {
    padding-left: 0.375rem;
    padding-right: 0.375rem;
  }
}

@media only screen and (min-width:0em) {
  .c3 {
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
  }
}

@media only screen and (min-width:0em) {
  .c3 {
    -webkit-box-pack: justify;
    -webkit-justify-content: space-between;
    -ms-flex-pack: justify;
    justify-content: space-between;
  }
}

<div
  className="c0 c1"
>
  <div
    className="c2"
  >
    <div
      className="c3"
    >
      <div
        className="c4"
      >
        <span
          name="react-responsive-mock"
          query="only screen and (max-width: 47.9375rem)"
        >
          <button
            className="c5 c6 c7"
            disabled={true}
            href=""
            icon={true}
            onClick={[Function]}
            type="button"
          >
            <svg
              className=""
              height="15"
              style={
                Object {
                  "transform": "rotate(0deg)",
                }
              }
              version="1.1"
              viewBox="0 0 15 15"
              width="15"
              xmlns="http://www.w3.org/2000/svg"
              xmlnsXlink="http://www.w3.org/1999/xlink"
            >
              <g
                transform="translate(18240 -18581)"
              >
                <g>
                  <mask>
                    <rect
                      fill="white"
                      height={16}
                      transform="matrix(6.12323e-17 1 -1 6.12323e-17 -18226 18582)"
                      width={15}
                      x={-1}
                      xlinkHref="#L"
                      y={-1}
                    />
                    <use
                      fill="rgb(216, 216, 216)"
                      transform="matrix(6.12323e-17 1 -1 6.12323e-17 -18226 18582)"
                      xlinkHref="#M"
                    />
                  </mask>
                  <g
                    mask="url(#L)"
                  >
                    <use
                      fill="rgb(216, 216, 216)"
                      transform="matrix(6.12323e-17 1 -1 6.12323e-17 -18226 18582)"
                      xlinkHref="#N"
                    />
                  </g>
                </g>
              </g>
              <defs>
                <path
                  d="M 5.59466 1.92996C 5.9545 1.16288 7.0455 1.16288 7.40534 1.92996L 11.4608 10.5753C 11.7719 11.2385 11.288 12 10.5555 12L 2.44449 12C 1.71201 12 1.22807 11.2385 1.53915 10.5753L 5.59466 1.92996Z"
                  id="M"
                />
                <path
                  d="M 1.53915 10.5753L -0.271523 9.72593L 1.53915 10.5753ZM 7.40534 1.92996L 5.59466 2.77934L 7.40534 1.92996ZM 5.59466 2.77934L 9.65017 11.4247L 13.2715 9.72593L 9.21601 1.08058L 5.59466 2.77934ZM 10.5555 10L 2.44449 10L 2.44449 14L 10.5555 14L 10.5555 10ZM 3.34983 11.4247L 7.40534 2.77934L 3.78399 1.08058L -0.271523 9.72593L 3.34983 11.4247ZM 2.44449 10C 3.17698 10 3.66091 10.7615 3.34983 11.4247L -0.271523 9.72593C -1.20476 11.7154 0.247037 14 2.44449 14L 2.44449 10ZM 9.65017 11.4247C 9.33909 10.7615 9.82302 10 10.5555 10L 10.5555 14C 12.753 14 14.2048 11.7154 13.2715 9.72593L 9.65017 11.4247ZM 9.21601 1.08058C 8.13651 -1.22066 4.86349 -1.22066 3.78399 1.08058L 7.40534 2.77934C 7.0455 3.54642 5.9545 3.54642 5.59466 2.77934L 9.21601 1.08058Z"
                  id="N"
                />
              </defs>
            </svg>
          </button>
        </span>
        <span
          name="react-responsive-mock"
          query="only screen and (min-width: 48rem)"
        >
          <button
            className="c8 c6 c7"
            disabled={true}
            href=""
            icon={true}
            onClick={[Function]}
            type="button"
          >
            <svg
              className=""
              height="15"
              style={
                Object {
                  "transform": "rotate(0deg)",
                }
              }
              version="1.1"
              viewBox="0 0 15 15"
              width="15"
              xmlns="http://www.w3.org/2000/svg"
              xmlnsXlink="http://www.w3.org/1999/xlink"
            >
              <g
                transform="translate(18240 -18581)"
              >
                <g>
                  <mask>
                    <rect
                      fill="white"
                      height={16}
                      transform="matrix(6.12323e-17 1 -1 6.12323e-17 -18226 18582)"
                      width={15}
                      x={-1}
                      xlinkHref="#L"
                      y={-1}
                    />
                    <use
                      fill="rgb(216, 216, 216)"
                      transform="matrix(6.12323e-17 1 -1 6.12323e-17 -18226 18582)"
                      xlinkHref="#M"
                    />
                  </mask>
                  <g
                    mask="url(#L)"
                  >
                    <use
                      fill="rgb(216, 216, 216)"
                      transform="matrix(6.12323e-17 1 -1 6.12323e-17 -18226 18582)"
                      xlinkHref="#N"
                    />
                  </g>
                </g>
              </g>
              <defs>
                <path
                  d="M 5.59466 1.92996C 5.9545 1.16288 7.0455 1.16288 7.40534 1.92996L 11.4608 10.5753C 11.7719 11.2385 11.288 12 10.5555 12L 2.44449 12C 1.71201 12 1.22807 11.2385 1.53915 10.5753L 5.59466 1.92996Z"
                  id="M"
                />
                <path
                  d="M 1.53915 10.5753L -0.271523 9.72593L 1.53915 10.5753ZM 7.40534 1.92996L 5.59466 2.77934L 7.40534 1.92996ZM 5.59466 2.77934L 9.65017 11.4247L 13.2715 9.72593L 9.21601 1.08058L 5.59466 2.77934ZM 10.5555 10L 2.44449 10L 2.44449 14L 10.5555 14L 10.5555 10ZM 3.34983 11.4247L 7.40534 2.77934L 3.78399 1.08058L -0.271523 9.72593L 3.34983 11.4247ZM 2.44449 10C 3.17698 10 3.66091 10.7615 3.34983 11.4247L -0.271523 9.72593C -1.20476 11.7154 0.247037 14 2.44449 14L 2.44449 10ZM 9.65017 11.4247C 9.33909 10.7615 9.82302 10 10.5555 10L 10.5555 14C 12.753 14 14.2048 11.7154 13.2715 9.72593L 9.65017 11.4247ZM 9.21601 1.08058C 8.13651 -1.22066 4.86349 -1.22066 3.78399 1.08058L 7.40534 2.77934C 7.0455 3.54642 5.9545 3.54642 5.59466 2.77934L 9.21601 1.08058Z"
                  id="N"
                />
              </defs>
            </svg>
            <span>
              Start
            </span>
          </button>
        </span>
        <span
          name="react-responsive-mock"
          query="only screen and (max-width: 47.9375rem)"
        >
          <button
            className="c5 c6 c7"
            disabled={true}
            href=""
            icon={true}
            onClick={[Function]}
            type="button"
          >
            <svg
              className=""
              height="14"
              style={
                Object {
                  "transform": "rotate(0deg)",
                }
              }
              version="1.1"
              viewBox="0 0 14 14"
              width="14"
              xmlns="http://www.w3.org/2000/svg"
              xmlnsXlink="http://www.w3.org/1999/xlink"
            >
              <g
                transform="translate(18113 -18582)"
              >
                <g>
                  <mask
                    id="O"
                  >
                    <use
                      fill="white"
                      transform="translate(-18113 18582)"
                      xlinkHref="#P"
                    />
                  </mask>
                  <g
                    mask="url(#O)"
                  >
                    <use
                      fill="rgb(216, 216, 216)"
                      transform="translate(-18113 18582)"
                      xlinkHref="#Q"
                    />
                  </g>
                </g>
              </g>
              <defs>
                <path
                  d="M 0 2C 0 0.895431 0.895431 0 2 0L 12 0C 13.1046 0 14 0.895431 14 2L 14 12C 14 13.1046 13.1046 14 12 14L 2 14C 0.895431 14 0 13.1046 0 12L 0 2Z"
                  id="P"
                />
                <path
                  d="M 2 2L 12 2L 12 -2L 2 -2L 2 2ZM 12 2L 12 12L 16 12L 16 2L 12 2ZM 12 12L 2 12L 2 16L 12 16L 12 12ZM 2 12L 2 2L -2 2L -2 12L 2 12ZM 2 12L 2 12L -2 12C -2 14.2091 -0.209139 16 2 16L 2 12ZM 12 12L 12 12L 12 16C 14.2091 16 16 14.2091 16 12L 12 12ZM 12 2L 12 2L 16 2C 16 -0.209139 14.2091 -2 12 -2L 12 2ZM 2 -2C -0.209139 -2 -2 -0.209139 -2 2L 2 2L 2 2L 2 -2Z"
                  id="Q"
                />
              </defs>
            </svg>
          </button>
        </span>
        <span
          name="react-responsive-mock"
          query="only screen and (min-width: 48rem)"
        >
          <button
            className="c8 c6 c7"
            disabled={true}
            href=""
            icon={true}
            onClick={[Function]}
            type="button"
          >
            <svg
              className=""
              height="14"
              style={
                Object {
                  "transform": "rotate(0deg)",
                }
              }
              version="1.1"
              viewBox="0 0 14 14"
              width="14"
              xmlns="http://www.w3.org/2000/svg"
              xmlnsXlink="http://www.w3.org/1999/xlink"
            >
              <g
                transform="translate(18113 -18582)"
              >
                <g>
                  <mask
                    id="O"
                  >
                    <use
                      fill="white"
                      transform="translate(-18113 18582)"
                      xlinkHref="#P"
                    />
                  </mask>
                  <g
                    mask="url(#O)"
                  >
                    <use
                      fill="rgb(216, 216, 216)"
                      transform="translate(-18113 18582)"
                      xlinkHref="#Q"
                    />
                  </g>
                </g>
              </g>
              <defs>
                <path
                  d="M 0 2C 0 0.895431 0.895431 0 2 0L 12 0C 13.1046 0 14 0.895431 14 2L 14 12C 14 13.1046 13.1046 14 12 14L 2 14C 0.895431 14 0 13.1046 0 12L 0 2Z"
                  id="P"
                />
                <path
                  d="M 2 2L 12 2L 12 -2L 2 -2L 2 2ZM 12 2L 12 12L 16 12L 16 2L 12 2ZM 12 12L 2 12L 2 16L 12 16L 12 12ZM 2 12L 2 2L -2 2L -2 12L 2 12ZM 2 12L 2 12L -2 12C -2 14.2091 -0.209139 16 2 16L 2 12ZM 12 12L 12 12L 12 16C 14.2091 16 16 14.2091 16 12L 12 12ZM 12 2L 12 2L 16 2C 16 -0.209139 14.2091 -2 12 -2L 12 2ZM 2 -2C -0.209139 -2 -2 -0.209139 -2 2L 2 2L 2 2L 2 -2Z"
                  id="Q"
                />
              </defs>
            </svg>
            <span>
              Stop
            </span>
          </button>
        </span>
        <span
          name="react-responsive-mock"
          query="only screen and (max-width: 47.9375rem)"
        >
          <button
            className="c5 c6 c7"
            disabled={true}
            href=""
            icon={true}
            onClick={[Function]}
            type="button"
          >
            <svg
              className=""
              height="21"
              style={
                Object {
                  "transform": "rotate(0deg)",
                }
              }
              version="1.1"
              viewBox="0 0 20 21"
              width="20"
              xmlns="http://www.w3.org/2000/svg"
              xmlnsXlink="http://www.w3.org/1999/xlink"
            >
              <g
                transform="translate(17997 -18577)"
              >
                <g>
                  <use
                    fill="rgb(216, 216, 216)"
                    transform="matrix(0.866025 0.5 -0.5 0.866025 -17988.7 18577.9)"
                    xlinkHref="#K"
                  />
                </g>
              </g>
              <defs>
                <path
                  d="M 5.39661 3.57718L 5.3977 5.34469L 10.0255 2.67281L 5.39715 0L 5.39832 2.00201C 2.33086 2.5484 0.00065755 5.23112 0 8.45654C 0.000380483 12.0783 2.93556 15.0137 6.55562 15.0143C 10.1774 15.014 13.1128 12.0788 13.1124 8.45702L 11.5697 8.45687C 11.5697 11.2264 9.32527 13.4717 6.55578 13.4716C 3.78629 13.4716 1.54268 11.2262 1.5427 8.45669C 1.54135 6.08718 3.18616 4.10012 5.39661 3.57718Z"
                  fillRule="evenodd"
                  id="K"
                />
              </defs>
            </svg>
          </button>
        </span>
        <span
          name="react-responsive-mock"
          query="only screen and (min-width: 48rem)"
        >
          <button
            className="c8 c6 c7"
            disabled={true}
            href=""
            icon={true}
            onClick={[Function]}
            type="button"
          >
            <svg
              className=""
              height="21"
              style={
                Object {
                  "transform": "rotate(0deg)",
                }
              }
              version="1.1"
              viewBox="0 0 20 21"
              width="20"
              xmlns="http://www.w3.org/2000/svg"
              xmlnsXlink="http://www.w3.org/1999/xlink"
            >
              <g
                transform="translate(17997 -18577)"
              >
                <g>
                  <use
                    fill="rgb(216, 216, 216)"
                    transform="matrix(0.866025 0.5 -0.5 0.866025 -17988.7 18577.9)"
                    xlinkHref="#K"
                  />
                </g>
              </g>
              <defs>
                <path
                  d="M 5.39661 3.57718L 5.3977 5.34469L 10.0255 2.67281L 5.39715 0L 5.39832 2.00201C 2.33086 2.5484 0.00065755 5.23112 0 8.45654C 0.000380483 12.0783 2.93556 15.0137 6.55562 15.0143C 10.1774 15.014 13.1128 12.0788 13.1124 8.45702L 11.5697 8.45687C 11.5697 11.2264 9.32527 13.4717 6.55578 13.4716C 3.78629 13.4716 1.54268 11.2262 1.5427 8.45669C 1.54135 6.08718 3.18616 4.10012 5.39661 3.57718Z"
                  fillRule="evenodd"
                  id="K"
                />
              </defs>
            </svg>
            <span>
              Reboot
            </span>
          </button>
        </span>
      </div>
      <div
        className="c9"
      >
        <span
          name="react-responsive-mock"
          query="only screen and (max-width: 47.9375rem)"
        >
          <button
            className="c10 c6 c7"
            disabled={false}
            href=""
            icon={true}
            onClick={[Function]}
            type="button"
          >
            <svg
              className=""
              height="12"
              style={
                Object {
                  "transform": "rotate(0deg)",
                }
              }
              version="1.1"
              viewBox="0 0 9 12"
              width="9"
              xmlns="http://www.w3.org/2000/svg"
              xmlnsXlink="http://www.w3.org/1999/xlink"
            >
              <g
                transform="translate(17403 -18583)"
              >
                <g>
                  <use
                    fill="rgba(73, 73, 73, 1)"
                    transform="translate(-17403 18583)"
                    xlinkHref="#j"
                  />
                </g>
              </g>
              <defs>
                <path
                  d="M 2 0L 2 1L 0 1L 0 2L 9 2L 9 1L 7 1L 7 0L 2 0ZM 0 3L 1 12L 8 12L 9 3L 0 3ZM 6 4L 7.882 4L 7.104 11L 6 11L 6 4ZM 4 11L 5.001 11L 5.001 4L 4 4L 4 11ZM 1.11719 4L 3.00019 4L 3.00019 11L 1.89619 11L 1.11719 4Z"
                  fillRule="evenodd"
                  id="j"
                />
              </defs>
            </svg>
          </button>
        </span>
        <span
          name="react-responsive-mock"
          query="only screen and (min-width: 48rem)"
        >
          <button
            className="c11 c6 c7"
            disabled={false}
            href=""
            icon={true}
            onClick={[Function]}
            type="button"
          >
            <svg
              className=""
              height="12"
              style={
                Object {
                  "transform": "rotate(0deg)",
                }
              }
              version="1.1"
              viewBox="0 0 9 12"
              width="9"
              xmlns="http://www.w3.org/2000/svg"
              xmlnsXlink="http://www.w3.org/1999/xlink"
            >
              <g
                transform="translate(17403 -18583)"
              >
                <g>
                  <use
                    fill="rgba(73, 73, 73, 1)"
                    transform="translate(-17403 18583)"
                    xlinkHref="#j"
                  />
                </g>
              </g>
              <defs>
                <path
                  d="M 2 0L 2 1L 0 1L 0 2L 9 2L 9 1L 7 1L 7 0L 2 0ZM 0 3L 1 12L 8 12L 9 3L 0 3ZM 6 4L 7.882 4L 7.104 11L 6 11L 6 4ZM 4 11L 5.001 11L 5.001 4L 4 4L 4 11ZM 1.11719 4L 3.00019 4L 3.00019 11L 1.89619 11L 1.11719 4Z"
                  fillRule="evenodd"
                  id="j"
                />
              </defs>
            </svg>
            <span>
              Delete
            </span>
          </button>
        </span>
      </div>
    </div>
  </div>
</div>
`;

exports[`renders <Actions allowedActions /> without throwing 1`] = `
.c7 {
  font-family: sans-serif;
  font-size: 100%;
  line-height: 1.15;
  margin: 0;
  overflow: visible;
  text-transform: none;
  -webkit-appearance: button;
  -moz-appearance: button;
  appearance: button;
  min-width: 7.5rem;
}

.c7::-moz-focus-inner,
.c7[type='button']::-moz-focus-inner,
.c7[type='reset']::-moz-focus-inner,
.c7[type='submit']::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

.c7:-moz-focusring,
.c7[type='button']:-moz-focusring,
.c7[type='reset']:-moz-focusring,
.c7[type='submit']:-moz-focusring {
  outline: 0.0625rem dotted ButtonText;
}

.c7 + button {
  margin-left: 0.375rem;
}

.c6 {
  display: inline-block;
}

.c10 {
  box-sizing: border-box;
  display: inline-block;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-height: 3rem;
  height: 3rem;
  min-width: 7.5rem;
  margin-bottom: 0.5rem;
  margin-top: 0.5rem;
  padding: 0.9375rem 1.125rem;
  position: relative;
  font-size: 0.9375rem;
  text-align: center;
  font-style: normal;
  font-stretch: normal;
  line-height: normal;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  text-decoration: none;
  white-space: nowrap;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  color: rgb(255,255,255);
  -webkit-text-fill-color: currentcolor;
  background-image: none;
  background-color: rgb(59,70,204);
  border-radius: 0.25rem;
  border: solid 0.0625rem rgb(45,56,132);
  color: rgb(70,70,70);
  -webkit-text-fill-color: currentcolor;
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
  padding: 0.5625rem 1.125rem;
  font-size: 0.8125rem;
  min-width: 0rem;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  float: right;
}

.c10:focus {
  outline: 0;
  text-decoration: none;
  background-color: rgb(59,70,204);
  border-color: rgb(45,56,132);
}

.c10:hover {
  background-color: rgb(72,83,217);
  border: solid 0.0625rem rgb(45,56,132);
}

.c10:active,
.c10:active:hover,
.c10:active:focus {
  background-image: none;
  outline: 0;
  background-color: rgb(45,56,132);
  border-color: rgb(45,56,132);
}

.c10[disabled] {
  cursor: not-allowed;
  pointer-events: none;
}

.c10:focus {
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
}

.c10:hover {
  background-color: rgb(247,247,247);
  border-color: rgb(216,216,216);
}

.c10:active,
.c10:active:hover,
.c10:active:focus {
  background-color: rgb(230,230,230);
  border-color: rgb(216,216,216);
}

.c10 svg + span {
  margin-left: 0.75rem;
}

.c10 svg {
  max-height: 1.125rem;
}

.c11 {
  box-sizing: border-box;
  display: inline-block;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-height: 3rem;
  height: 3rem;
  min-width: 7.5rem;
  margin-bottom: 0.5rem;
  margin-top: 0.5rem;
  padding: 0.9375rem 1.125rem;
  position: relative;
  font-size: 0.9375rem;
  text-align: center;
  font-style: normal;
  font-stretch: normal;
  line-height: normal;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  text-decoration: none;
  white-space: nowrap;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  color: rgb(255,255,255);
  -webkit-text-fill-color: currentcolor;
  background-image: none;
  background-color: rgb(59,70,204);
  border-radius: 0.25rem;
  border: solid 0.0625rem rgb(45,56,132);
  color: rgb(70,70,70);
  -webkit-text-fill-color: currentcolor;
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  float: right;
}

.c11:focus {
  outline: 0;
  text-decoration: none;
  background-color: rgb(59,70,204);
  border-color: rgb(45,56,132);
}

.c11:hover {
  background-color: rgb(72,83,217);
  border: solid 0.0625rem rgb(45,56,132);
}

.c11:active,
.c11:active:hover,
.c11:active:focus {
  background-image: none;
  outline: 0;
  background-color: rgb(45,56,132);
  border-color: rgb(45,56,132);
}

.c11[disabled] {
  cursor: not-allowed;
  pointer-events: none;
}

.c11:focus {
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
}

.c11:hover {
  background-color: rgb(247,247,247);
  border-color: rgb(216,216,216);
}

.c11:active,
.c11:active:hover,
.c11:active:focus {
  background-color: rgb(230,230,230);
  border-color: rgb(216,216,216);
}

.c11 svg + span {
  margin-left: 0.75rem;
}

.c11 svg {
  max-height: 1.125rem;
}

.c5 {
  box-sizing: border-box;
  display: inline-block;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-height: 3rem;
  height: 3rem;
  min-width: 7.5rem;
  margin-bottom: 0.5rem;
  margin-top: 0.5rem;
  padding: 0.9375rem 1.125rem;
  position: relative;
  font-size: 0.9375rem;
  text-align: center;
  font-style: normal;
  font-stretch: normal;
  line-height: normal;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  text-decoration: none;
  white-space: nowrap;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  color: rgb(255,255,255);
  -webkit-text-fill-color: currentcolor;
  background-image: none;
  background-color: rgb(59,70,204);
  border-radius: 0.25rem;
  border: solid 0.0625rem rgb(45,56,132);
  color: rgb(70,70,70);
  -webkit-text-fill-color: currentcolor;
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
  padding: 0.5625rem 1.125rem;
  font-size: 0.8125rem;
  min-width: 0rem;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c5:focus {
  outline: 0;
  text-decoration: none;
  background-color: rgb(59,70,204);
  border-color: rgb(45,56,132);
}

.c5:hover {
  background-color: rgb(72,83,217);
  border: solid 0.0625rem rgb(45,56,132);
}

.c5:active,
.c5:active:hover,
.c5:active:focus {
  background-image: none;
  outline: 0;
  background-color: rgb(45,56,132);
  border-color: rgb(45,56,132);
}

.c5[disabled] {
  cursor: not-allowed;
  pointer-events: none;
}

.c5:focus {
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
}

.c5:hover {
  background-color: rgb(247,247,247);
  border-color: rgb(216,216,216);
}

.c5:active,
.c5:active:hover,
.c5:active:focus {
  background-color: rgb(230,230,230);
  border-color: rgb(216,216,216);
}

.c5 svg + span {
  margin-left: 0.75rem;
}

.c5 svg {
  max-height: 1.125rem;
}

.c8 {
  box-sizing: border-box;
  display: inline-block;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-height: 3rem;
  height: 3rem;
  min-width: 7.5rem;
  margin-bottom: 0.5rem;
  margin-top: 0.5rem;
  padding: 0.9375rem 1.125rem;
  position: relative;
  font-size: 0.9375rem;
  text-align: center;
  font-style: normal;
  font-stretch: normal;
  line-height: normal;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  text-decoration: none;
  white-space: nowrap;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  color: rgb(255,255,255);
  -webkit-text-fill-color: currentcolor;
  background-image: none;
  background-color: rgb(59,70,204);
  border-radius: 0.25rem;
  border: solid 0.0625rem rgb(45,56,132);
  color: rgb(70,70,70);
  -webkit-text-fill-color: currentcolor;
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c8:focus {
  outline: 0;
  text-decoration: none;
  background-color: rgb(59,70,204);
  border-color: rgb(45,56,132);
}

.c8:hover {
  background-color: rgb(72,83,217);
  border: solid 0.0625rem rgb(45,56,132);
}

.c8:active,
.c8:active:hover,
.c8:active:focus {
  background-image: none;
  outline: 0;
  background-color: rgb(45,56,132);
  border-color: rgb(45,56,132);
}

.c8[disabled] {
  cursor: not-allowed;
  pointer-events: none;
}

.c8:focus {
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
}

.c8:hover {
  background-color: rgb(247,247,247);
  border-color: rgb(216,216,216);
}

.c8:active,
.c8:active:hover,
.c8:active:focus {
  background-color: rgb(230,230,230);
  border-color: rgb(216,216,216);
}

.c8 svg + span {
  margin-left: 0.75rem;
}

.c8 svg {
  max-height: 1.125rem;
}

.c4 {
  box-sizing: border-box;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  padding-right: 0.5rem;
  padding-left: 0.5rem;
}

.c9 {
  box-sizing: border-box;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  padding-right: 0.5rem;
  padding-left: 0.5rem;
}

.c2 {
  margin-right: auto;
  margin-left: auto;
  box-sizing: border-box;
  width: 100%;
  max-width: 62.5rem;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: nowrap;
  -ms-flex-wrap: nowrap;
  flex-wrap: nowrap;
  -webkit-align-content: stretch;
  -ms-flex-line-pack: stretch;
  align-content: stretch;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex-wrap: nowrap;
  -ms-flex-wrap: nowrap;
  flex-wrap: nowrap;
  -webkit-align-content: stretch;
  -ms-flex-line-pack: stretch;
  align-content: stretch;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  background-color: rgb(30,49,59);
  max-height: 3.3125rem;
  min-height: 3.3125rem;
  line-height: 1.5625rem;
  position: fixed;
  left: 0;
  right: 0;
  bottom: 0;
}

.c0 {
  background-color: rgba(241,241,241,1);
  border-top: 0.0625rem solid rgb(216,216,216);
  height: 4.375rem;
  max-height: 4.375rem;
}

.c3 {
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 0 1 auto;
  -ms-flex: 0 1 auto;
  flex: 0 1 auto;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-right: -0.5rem;
  margin-left: -0.5rem;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
}

@media only screen and (min-width:0em) {
  .c4 {
    -webkit-flex-basis: 58.333333333333336%;
    -ms-flex-preferred-size: 58.333333333333336%;
    flex-basis: 58.333333333333336%;
    max-width: 58.333333333333336%;
    display: block;
  }
}

@media only screen and (min-width:0em) {
  .c9 {
    -webkit-flex-basis: 41.66666666666667%;
    -ms-flex-preferred-size: 41.66666666666667%;
    flex-basis: 41.66666666666667%;
    max-width: 41.66666666666667%;
    display: block;
  }
}

@media only screen and (min-width:48em) {
  .c2 {
    width: 46rem;
  }
}

@media only screen and (min-width:64em) {
  .c2 {
    width: 61rem;
  }
}

@media only screen and (min-width:75em) {
  .c2 {
    width: 76rem;
  }
}

@media only screen and (max-width:47.9375rem) {
  .c2 {
    padding-left: 0.375rem;
    padding-right: 0.375rem;
  }
}

@media only screen and (min-width:0em) {
  .c3 {
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
  }
}

@media only screen and (min-width:0em) {
  .c3 {
    -webkit-box-pack: justify;
    -webkit-justify-content: space-between;
    -ms-flex-pack: justify;
    justify-content: space-between;
  }
}

<div
  className="c0 c1"
>
  <div
    className="c2"
  >
    <div
      className="c3"
    >
      <div
        className="c4"
      >
        <span
          name="react-responsive-mock"
          query="only screen and (max-width: 47.9375rem)"
        >
          <button
            className="c5 c6 c7"
            disabled={false}
            href=""
            icon={true}
            onClick={[Function]}
            type="button"
          >
            <svg
              className=""
              height="15"
              style={
                Object {
                  "transform": "rotate(0deg)",
                }
              }
              version="1.1"
              viewBox="0 0 15 15"
              width="15"
              xmlns="http://www.w3.org/2000/svg"
              xmlnsXlink="http://www.w3.org/1999/xlink"
            >
              <g
                transform="translate(18240 -18581)"
              >
                <g>
                  <mask>
                    <rect
                      fill="white"
                      height={16}
                      transform="matrix(6.12323e-17 1 -1 6.12323e-17 -18226 18582)"
                      width={15}
                      x={-1}
                      xlinkHref="#L"
                      y={-1}
                    />
                    <use
                      fill="rgba(73, 73, 73, 1)"
                      transform="matrix(6.12323e-17 1 -1 6.12323e-17 -18226 18582)"
                      xlinkHref="#M"
                    />
                  </mask>
                  <g
                    mask="url(#L)"
                  >
                    <use
                      fill="rgba(73, 73, 73, 1)"
                      transform="matrix(6.12323e-17 1 -1 6.12323e-17 -18226 18582)"
                      xlinkHref="#N"
                    />
                  </g>
                </g>
              </g>
              <defs>
                <path
                  d="M 5.59466 1.92996C 5.9545 1.16288 7.0455 1.16288 7.40534 1.92996L 11.4608 10.5753C 11.7719 11.2385 11.288 12 10.5555 12L 2.44449 12C 1.71201 12 1.22807 11.2385 1.53915 10.5753L 5.59466 1.92996Z"
                  id="M"
                />
                <path
                  d="M 1.53915 10.5753L -0.271523 9.72593L 1.53915 10.5753ZM 7.40534 1.92996L 5.59466 2.77934L 7.40534 1.92996ZM 5.59466 2.77934L 9.65017 11.4247L 13.2715 9.72593L 9.21601 1.08058L 5.59466 2.77934ZM 10.5555 10L 2.44449 10L 2.44449 14L 10.5555 14L 10.5555 10ZM 3.34983 11.4247L 7.40534 2.77934L 3.78399 1.08058L -0.271523 9.72593L 3.34983 11.4247ZM 2.44449 10C 3.17698 10 3.66091 10.7615 3.34983 11.4247L -0.271523 9.72593C -1.20476 11.7154 0.247037 14 2.44449 14L 2.44449 10ZM 9.65017 11.4247C 9.33909 10.7615 9.82302 10 10.5555 10L 10.5555 14C 12.753 14 14.2048 11.7154 13.2715 9.72593L 9.65017 11.4247ZM 9.21601 1.08058C 8.13651 -1.22066 4.86349 -1.22066 3.78399 1.08058L 7.40534 2.77934C 7.0455 3.54642 5.9545 3.54642 5.59466 2.77934L 9.21601 1.08058Z"
                  id="N"
                />
              </defs>
            </svg>
          </button>
        </span>
        <span
          name="react-responsive-mock"
          query="only screen and (min-width: 48rem)"
        >
          <button
            className="c8 c6 c7"
            disabled={false}
            href=""
            icon={true}
            onClick={[Function]}
            type="button"
          >
            <svg
              className=""
              height="15"
              style={
                Object {
                  "transform": "rotate(0deg)",
                }
              }
              version="1.1"
              viewBox="0 0 15 15"
              width="15"
              xmlns="http://www.w3.org/2000/svg"
              xmlnsXlink="http://www.w3.org/1999/xlink"
            >
              <g
                transform="translate(18240 -18581)"
              >
                <g>
                  <mask>
                    <rect
                      fill="white"
                      height={16}
                      transform="matrix(6.12323e-17 1 -1 6.12323e-17 -18226 18582)"
                      width={15}
                      x={-1}
                      xlinkHref="#L"
                      y={-1}
                    />
                    <use
                      fill="rgba(73, 73, 73, 1)"
                      transform="matrix(6.12323e-17 1 -1 6.12323e-17 -18226 18582)"
                      xlinkHref="#M"
                    />
                  </mask>
                  <g
                    mask="url(#L)"
                  >
                    <use
                      fill="rgba(73, 73, 73, 1)"
                      transform="matrix(6.12323e-17 1 -1 6.12323e-17 -18226 18582)"
                      xlinkHref="#N"
                    />
                  </g>
                </g>
              </g>
              <defs>
                <path
                  d="M 5.59466 1.92996C 5.9545 1.16288 7.0455 1.16288 7.40534 1.92996L 11.4608 10.5753C 11.7719 11.2385 11.288 12 10.5555 12L 2.44449 12C 1.71201 12 1.22807 11.2385 1.53915 10.5753L 5.59466 1.92996Z"
                  id="M"
                />
                <path
                  d="M 1.53915 10.5753L -0.271523 9.72593L 1.53915 10.5753ZM 7.40534 1.92996L 5.59466 2.77934L 7.40534 1.92996ZM 5.59466 2.77934L 9.65017 11.4247L 13.2715 9.72593L 9.21601 1.08058L 5.59466 2.77934ZM 10.5555 10L 2.44449 10L 2.44449 14L 10.5555 14L 10.5555 10ZM 3.34983 11.4247L 7.40534 2.77934L 3.78399 1.08058L -0.271523 9.72593L 3.34983 11.4247ZM 2.44449 10C 3.17698 10 3.66091 10.7615 3.34983 11.4247L -0.271523 9.72593C -1.20476 11.7154 0.247037 14 2.44449 14L 2.44449 10ZM 9.65017 11.4247C 9.33909 10.7615 9.82302 10 10.5555 10L 10.5555 14C 12.753 14 14.2048 11.7154 13.2715 9.72593L 9.65017 11.4247ZM 9.21601 1.08058C 8.13651 -1.22066 4.86349 -1.22066 3.78399 1.08058L 7.40534 2.77934C 7.0455 3.54642 5.9545 3.54642 5.59466 2.77934L 9.21601 1.08058Z"
                  id="N"
                />
              </defs>
            </svg>
            <span>
              Start
            </span>
          </button>
        </span>
        <span
          name="react-responsive-mock"
          query="only screen and (max-width: 47.9375rem)"
        >
          <button
            className="c5 c6 c7"
            disabled={false}
            href=""
            icon={true}
            onClick={[Function]}
            type="button"
          >
            <svg
              className=""
              height="14"
              style={
                Object {
                  "transform": "rotate(0deg)",
                }
              }
              version="1.1"
              viewBox="0 0 14 14"
              width="14"
              xmlns="http://www.w3.org/2000/svg"
              xmlnsXlink="http://www.w3.org/1999/xlink"
            >
              <g
                transform="translate(18113 -18582)"
              >
                <g>
                  <mask
                    id="O"
                  >
                    <use
                      fill="white"
                      transform="translate(-18113 18582)"
                      xlinkHref="#P"
                    />
                  </mask>
                  <g
                    mask="url(#O)"
                  >
                    <use
                      fill="rgba(73, 73, 73, 1)"
                      transform="translate(-18113 18582)"
                      xlinkHref="#Q"
                    />
                  </g>
                </g>
              </g>
              <defs>
                <path
                  d="M 0 2C 0 0.895431 0.895431 0 2 0L 12 0C 13.1046 0 14 0.895431 14 2L 14 12C 14 13.1046 13.1046 14 12 14L 2 14C 0.895431 14 0 13.1046 0 12L 0 2Z"
                  id="P"
                />
                <path
                  d="M 2 2L 12 2L 12 -2L 2 -2L 2 2ZM 12 2L 12 12L 16 12L 16 2L 12 2ZM 12 12L 2 12L 2 16L 12 16L 12 12ZM 2 12L 2 2L -2 2L -2 12L 2 12ZM 2 12L 2 12L -2 12C -2 14.2091 -0.209139 16 2 16L 2 12ZM 12 12L 12 12L 12 16C 14.2091 16 16 14.2091 16 12L 12 12ZM 12 2L 12 2L 16 2C 16 -0.209139 14.2091 -2 12 -2L 12 2ZM 2 -2C -0.209139 -2 -2 -0.209139 -2 2L 2 2L 2 2L 2 -2Z"
                  id="Q"
                />
              </defs>
            </svg>
          </button>
        </span>
        <span
          name="react-responsive-mock"
          query="only screen and (min-width: 48rem)"
        >
          <button
            className="c8 c6 c7"
            disabled={false}
            href=""
            icon={true}
            onClick={[Function]}
            type="button"
          >
            <svg
              className=""
              height="14"
              style={
                Object {
                  "transform": "rotate(0deg)",
                }
              }
              version="1.1"
              viewBox="0 0 14 14"
              width="14"
              xmlns="http://www.w3.org/2000/svg"
              xmlnsXlink="http://www.w3.org/1999/xlink"
            >
              <g
                transform="translate(18113 -18582)"
              >
                <g>
                  <mask
                    id="O"
                  >
                    <use
                      fill="white"
                      transform="translate(-18113 18582)"
                      xlinkHref="#P"
                    />
                  </mask>
                  <g
                    mask="url(#O)"
                  >
                    <use
                      fill="rgba(73, 73, 73, 1)"
                      transform="translate(-18113 18582)"
                      xlinkHref="#Q"
                    />
                  </g>
                </g>
              </g>
              <defs>
                <path
                  d="M 0 2C 0 0.895431 0.895431 0 2 0L 12 0C 13.1046 0 14 0.895431 14 2L 14 12C 14 13.1046 13.1046 14 12 14L 2 14C 0.895431 14 0 13.1046 0 12L 0 2Z"
                  id="P"
                />
                <path
                  d="M 2 2L 12 2L 12 -2L 2 -2L 2 2ZM 12 2L 12 12L 16 12L 16 2L 12 2ZM 12 12L 2 12L 2 16L 12 16L 12 12ZM 2 12L 2 2L -2 2L -2 12L 2 12ZM 2 12L 2 12L -2 12C -2 14.2091 -0.209139 16 2 16L 2 12ZM 12 12L 12 12L 12 16C 14.2091 16 16 14.2091 16 12L 12 12ZM 12 2L 12 2L 16 2C 16 -0.209139 14.2091 -2 12 -2L 12 2ZM 2 -2C -0.209139 -2 -2 -0.209139 -2 2L 2 2L 2 2L 2 -2Z"
                  id="Q"
                />
              </defs>
            </svg>
            <span>
              Stop
            </span>
          </button>
        </span>
        <span
          name="react-responsive-mock"
          query="only screen and (max-width: 47.9375rem)"
        >
          <button
            className="c5 c6 c7"
            disabled={false}
            href=""
            icon={true}
            onClick={[Function]}
            type="button"
          >
            <svg
              className=""
              height="21"
              style={
                Object {
                  "transform": "rotate(0deg)",
                }
              }
              version="1.1"
              viewBox="0 0 20 21"
              width="20"
              xmlns="http://www.w3.org/2000/svg"
              xmlnsXlink="http://www.w3.org/1999/xlink"
            >
              <g
                transform="translate(17997 -18577)"
              >
                <g>
                  <use
                    fill="rgba(73, 73, 73, 1)"
                    transform="matrix(0.866025 0.5 -0.5 0.866025 -17988.7 18577.9)"
                    xlinkHref="#K"
                  />
                </g>
              </g>
              <defs>
                <path
                  d="M 5.39661 3.57718L 5.3977 5.34469L 10.0255 2.67281L 5.39715 0L 5.39832 2.00201C 2.33086 2.5484 0.00065755 5.23112 0 8.45654C 0.000380483 12.0783 2.93556 15.0137 6.55562 15.0143C 10.1774 15.014 13.1128 12.0788 13.1124 8.45702L 11.5697 8.45687C 11.5697 11.2264 9.32527 13.4717 6.55578 13.4716C 3.78629 13.4716 1.54268 11.2262 1.5427 8.45669C 1.54135 6.08718 3.18616 4.10012 5.39661 3.57718Z"
                  fillRule="evenodd"
                  id="K"
                />
              </defs>
            </svg>
          </button>
        </span>
        <span
          name="react-responsive-mock"
          query="only screen and (min-width: 48rem)"
        >
          <button
            className="c8 c6 c7"
            disabled={false}
            href=""
            icon={true}
            onClick={[Function]}
            type="button"
          >
            <svg
              className=""
              height="21"
              style={
                Object {
                  "transform": "rotate(0deg)",
                }
              }
              version="1.1"
              viewBox="0 0 20 21"
              width="20"
              xmlns="http://www.w3.org/2000/svg"
              xmlnsXlink="http://www.w3.org/1999/xlink"
            >
              <g
                transform="translate(17997 -18577)"
              >
                <g>
                  <use
                    fill="rgba(73, 73, 73, 1)"
                    transform="matrix(0.866025 0.5 -0.5 0.866025 -17988.7 18577.9)"
                    xlinkHref="#K"
                  />
                </g>
              </g>
              <defs>
                <path
                  d="M 5.39661 3.57718L 5.3977 5.34469L 10.0255 2.67281L 5.39715 0L 5.39832 2.00201C 2.33086 2.5484 0.00065755 5.23112 0 8.45654C 0.000380483 12.0783 2.93556 15.0137 6.55562 15.0143C 10.1774 15.014 13.1128 12.0788 13.1124 8.45702L 11.5697 8.45687C 11.5697 11.2264 9.32527 13.4717 6.55578 13.4716C 3.78629 13.4716 1.54268 11.2262 1.5427 8.45669C 1.54135 6.08718 3.18616 4.10012 5.39661 3.57718Z"
                  fillRule="evenodd"
                  id="K"
                />
              </defs>
            </svg>
            <span>
              Reboot
            </span>
          </button>
        </span>
      </div>
      <div
        className="c9"
      >
        <span
          name="react-responsive-mock"
          query="only screen and (max-width: 47.9375rem)"
        >
          <button
            className="c10 c6 c7"
            disabled={false}
            href=""
            icon={true}
            onClick={[Function]}
            type="button"
          >
            <svg
              className=""
              height="12"
              style={
                Object {
                  "transform": "rotate(0deg)",
                }
              }
              version="1.1"
              viewBox="0 0 9 12"
              width="9"
              xmlns="http://www.w3.org/2000/svg"
              xmlnsXlink="http://www.w3.org/1999/xlink"
            >
              <g
                transform="translate(17403 -18583)"
              >
                <g>
                  <use
                    fill="rgba(73, 73, 73, 1)"
                    transform="translate(-17403 18583)"
                    xlinkHref="#j"
                  />
                </g>
              </g>
              <defs>
                <path
                  d="M 2 0L 2 1L 0 1L 0 2L 9 2L 9 1L 7 1L 7 0L 2 0ZM 0 3L 1 12L 8 12L 9 3L 0 3ZM 6 4L 7.882 4L 7.104 11L 6 11L 6 4ZM 4 11L 5.001 11L 5.001 4L 4 4L 4 11ZM 1.11719 4L 3.00019 4L 3.00019 11L 1.89619 11L 1.11719 4Z"
                  fillRule="evenodd"
                  id="j"
                />
              </defs>
            </svg>
          </button>
        </span>
        <span
          name="react-responsive-mock"
          query="only screen and (min-width: 48rem)"
        >
          <button
            className="c11 c6 c7"
            disabled={false}
            href=""
            icon={true}
            onClick={[Function]}
            type="button"
          >
            <svg
              className=""
              height="12"
              style={
                Object {
                  "transform": "rotate(0deg)",
                }
              }
              version="1.1"
              viewBox="0 0 9 12"
              width="9"
              xmlns="http://www.w3.org/2000/svg"
              xmlnsXlink="http://www.w3.org/1999/xlink"
            >
              <g
                transform="translate(17403 -18583)"
              >
                <g>
                  <use
                    fill="rgba(73, 73, 73, 1)"
                    transform="translate(-17403 18583)"
                    xlinkHref="#j"
                  />
                </g>
              </g>
              <defs>
                <path
                  d="M 2 0L 2 1L 0 1L 0 2L 9 2L 9 1L 7 1L 7 0L 2 0ZM 0 3L 1 12L 8 12L 9 3L 0 3ZM 6 4L 7.882 4L 7.104 11L 6 11L 6 4ZM 4 11L 5.001 11L 5.001 4L 4 4L 4 11ZM 1.11719 4L 3.00019 4L 3.00019 11L 1.89619 11L 1.11719 4Z"
                  fillRule="evenodd"
                  id="j"
                />
              </defs>
            </svg>
            <span>
              Delete
            </span>
          </button>
        </span>
      </div>
    </div>
  </div>
</div>
`;

exports[`renders <Actions submitting /> without throwing 1`] = `
.c7 {
  font-family: sans-serif;
  font-size: 100%;
  line-height: 1.15;
  margin: 0;
  overflow: visible;
  text-transform: none;
  -webkit-appearance: button;
  -moz-appearance: button;
  appearance: button;
  min-width: 7.5rem;
}

.c7::-moz-focus-inner,
.c7[type='button']::-moz-focus-inner,
.c7[type='reset']::-moz-focus-inner,
.c7[type='submit']::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

.c7:-moz-focusring,
.c7[type='button']:-moz-focusring,
.c7[type='reset']:-moz-focusring,
.c7[type='submit']:-moz-focusring {
  outline: 0.0625rem dotted ButtonText;
}

.c7 + button {
  margin-left: 0.375rem;
}

.c6 {
  display: inline-block;
}

.c5 {
  box-sizing: border-box;
  display: inline-block;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-height: 3rem;
  height: 3rem;
  min-width: 7.5rem;
  margin-bottom: 0.5rem;
  margin-top: 0.5rem;
  padding: 0.9375rem 1.125rem;
  position: relative;
  font-size: 0.9375rem;
  text-align: center;
  font-style: normal;
  font-stretch: normal;
  line-height: normal;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  text-decoration: none;
  white-space: nowrap;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  color: rgb(255,255,255);
  -webkit-text-fill-color: currentcolor;
  background-image: none;
  background-color: rgb(59,70,204);
  border-radius: 0.25rem;
  border: solid 0.0625rem rgb(45,56,132);
  color: rgb(70,70,70);
  -webkit-text-fill-color: currentcolor;
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
  cursor: not-allowed;
  pointer-events: none;
  color: rgb(216,216,216);
  background-color: rgb(250,250,250);
  border-color: rgb(216,216,216);
  padding: 0.5625rem 1.125rem;
  font-size: 0.8125rem;
  min-width: 0rem;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c5:focus {
  outline: 0;
  text-decoration: none;
  background-color: rgb(59,70,204);
  border-color: rgb(45,56,132);
}

.c5:hover {
  background-color: rgb(72,83,217);
  border: solid 0.0625rem rgb(45,56,132);
}

.c5:active,
.c5:active:hover,
.c5:active:focus {
  background-image: none;
  outline: 0;
  background-color: rgb(45,56,132);
  border-color: rgb(45,56,132);
}

.c5[disabled] {
  cursor: not-allowed;
  pointer-events: none;
}

.c5:focus {
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
}

.c5:hover {
  background-color: rgb(247,247,247);
  border-color: rgb(216,216,216);
}

.c5:active,
.c5:active:hover,
.c5:active:focus {
  background-color: rgb(230,230,230);
  border-color: rgb(216,216,216);
}

.c5:focus {
  background-color: rgb(250,250,250);
  border-color: rgb(216,216,216);
}

.c5:hover {
  background-color: rgb(250,250,250);
  border-color: rgb(250,250,250);
}

.c5:active,
.c5:active:hover,
.c5:active:focus {
  background-color: rgb(250,250,250);
  border-color: rgb(250,250,250);
}

.c5 svg + span {
  margin-left: 0.75rem;
}

.c5 svg {
  max-height: 1.125rem;
}

.c8 {
  box-sizing: border-box;
  display: inline-block;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-height: 3rem;
  height: 3rem;
  min-width: 7.5rem;
  margin-bottom: 0.5rem;
  margin-top: 0.5rem;
  padding: 0.9375rem 1.125rem;
  position: relative;
  font-size: 0.9375rem;
  text-align: center;
  font-style: normal;
  font-stretch: normal;
  line-height: normal;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  text-decoration: none;
  white-space: nowrap;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  color: rgb(255,255,255);
  -webkit-text-fill-color: currentcolor;
  background-image: none;
  background-color: rgb(59,70,204);
  border-radius: 0.25rem;
  border: solid 0.0625rem rgb(45,56,132);
  color: rgb(70,70,70);
  -webkit-text-fill-color: currentcolor;
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
  cursor: not-allowed;
  pointer-events: none;
  color: rgb(216,216,216);
  background-color: rgb(250,250,250);
  border-color: rgb(216,216,216);
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c8:focus {
  outline: 0;
  text-decoration: none;
  background-color: rgb(59,70,204);
  border-color: rgb(45,56,132);
}

.c8:hover {
  background-color: rgb(72,83,217);
  border: solid 0.0625rem rgb(45,56,132);
}

.c8:active,
.c8:active:hover,
.c8:active:focus {
  background-image: none;
  outline: 0;
  background-color: rgb(45,56,132);
  border-color: rgb(45,56,132);
}

.c8[disabled] {
  cursor: not-allowed;
  pointer-events: none;
}

.c8:focus {
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
}

.c8:hover {
  background-color: rgb(247,247,247);
  border-color: rgb(216,216,216);
}

.c8:active,
.c8:active:hover,
.c8:active:focus {
  background-color: rgb(230,230,230);
  border-color: rgb(216,216,216);
}

.c8:focus {
  background-color: rgb(250,250,250);
  border-color: rgb(216,216,216);
}

.c8:hover {
  background-color: rgb(250,250,250);
  border-color: rgb(250,250,250);
}

.c8:active,
.c8:active:hover,
.c8:active:focus {
  background-color: rgb(250,250,250);
  border-color: rgb(250,250,250);
}

.c8 svg + span {
  margin-left: 0.75rem;
}

.c8 svg {
  max-height: 1.125rem;
}

.c10 {
  box-sizing: border-box;
  display: inline-block;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-height: 3rem;
  height: 3rem;
  min-width: 7.5rem;
  margin-bottom: 0.5rem;
  margin-top: 0.5rem;
  padding: 0.9375rem 1.125rem;
  position: relative;
  font-size: 0.9375rem;
  text-align: center;
  font-style: normal;
  font-stretch: normal;
  line-height: normal;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  text-decoration: none;
  white-space: nowrap;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  color: rgb(255,255,255);
  -webkit-text-fill-color: currentcolor;
  background-image: none;
  background-color: rgb(59,70,204);
  border-radius: 0.25rem;
  border: solid 0.0625rem rgb(45,56,132);
  color: rgb(70,70,70);
  -webkit-text-fill-color: currentcolor;
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
  cursor: not-allowed;
  pointer-events: none;
  color: rgb(216,216,216);
  background-color: rgb(250,250,250);
  border-color: rgb(216,216,216);
  padding: 0.5625rem 1.125rem;
  font-size: 0.8125rem;
  min-width: 0rem;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  float: right;
}

.c10:focus {
  outline: 0;
  text-decoration: none;
  background-color: rgb(59,70,204);
  border-color: rgb(45,56,132);
}

.c10:hover {
  background-color: rgb(72,83,217);
  border: solid 0.0625rem rgb(45,56,132);
}

.c10:active,
.c10:active:hover,
.c10:active:focus {
  background-image: none;
  outline: 0;
  background-color: rgb(45,56,132);
  border-color: rgb(45,56,132);
}

.c10[disabled] {
  cursor: not-allowed;
  pointer-events: none;
}

.c10:focus {
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
}

.c10:hover {
  background-color: rgb(247,247,247);
  border-color: rgb(216,216,216);
}

.c10:active,
.c10:active:hover,
.c10:active:focus {
  background-color: rgb(230,230,230);
  border-color: rgb(216,216,216);
}

.c10:focus {
  background-color: rgb(250,250,250);
  border-color: rgb(216,216,216);
}

.c10:hover {
  background-color: rgb(250,250,250);
  border-color: rgb(250,250,250);
}

.c10:active,
.c10:active:hover,
.c10:active:focus {
  background-color: rgb(250,250,250);
  border-color: rgb(250,250,250);
}

.c10 svg + span {
  margin-left: 0.75rem;
}

.c10 svg {
  max-height: 1.125rem;
}

.c11 {
  box-sizing: border-box;
  display: inline-block;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-height: 3rem;
  height: 3rem;
  min-width: 7.5rem;
  margin-bottom: 0.5rem;
  margin-top: 0.5rem;
  padding: 0.9375rem 1.125rem;
  position: relative;
  font-size: 0.9375rem;
  text-align: center;
  font-style: normal;
  font-stretch: normal;
  line-height: normal;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  text-decoration: none;
  white-space: nowrap;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  color: rgb(255,255,255);
  -webkit-text-fill-color: currentcolor;
  background-image: none;
  background-color: rgb(59,70,204);
  border-radius: 0.25rem;
  border: solid 0.0625rem rgb(45,56,132);
  color: rgb(70,70,70);
  -webkit-text-fill-color: currentcolor;
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
  cursor: not-allowed;
  pointer-events: none;
  color: rgb(216,216,216);
  background-color: rgb(250,250,250);
  border-color: rgb(216,216,216);
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  float: right;
}

.c11:focus {
  outline: 0;
  text-decoration: none;
  background-color: rgb(59,70,204);
  border-color: rgb(45,56,132);
}

.c11:hover {
  background-color: rgb(72,83,217);
  border: solid 0.0625rem rgb(45,56,132);
}

.c11:active,
.c11:active:hover,
.c11:active:focus {
  background-image: none;
  outline: 0;
  background-color: rgb(45,56,132);
  border-color: rgb(45,56,132);
}

.c11[disabled] {
  cursor: not-allowed;
  pointer-events: none;
}

.c11:focus {
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
}

.c11:hover {
  background-color: rgb(247,247,247);
  border-color: rgb(216,216,216);
}

.c11:active,
.c11:active:hover,
.c11:active:focus {
  background-color: rgb(230,230,230);
  border-color: rgb(216,216,216);
}

.c11:focus {
  background-color: rgb(250,250,250);
  border-color: rgb(216,216,216);
}

.c11:hover {
  background-color: rgb(250,250,250);
  border-color: rgb(250,250,250);
}

.c11:active,
.c11:active:hover,
.c11:active:focus {
  background-color: rgb(250,250,250);
  border-color: rgb(250,250,250);
}

.c11 svg + span {
  margin-left: 0.75rem;
}

.c11 svg {
  max-height: 1.125rem;
}

.c4 {
  box-sizing: border-box;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  padding-right: 0.5rem;
  padding-left: 0.5rem;
}

.c9 {
  box-sizing: border-box;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  padding-right: 0.5rem;
  padding-left: 0.5rem;
}

.c2 {
  margin-right: auto;
  margin-left: auto;
  box-sizing: border-box;
  width: 100%;
  max-width: 62.5rem;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: nowrap;
  -ms-flex-wrap: nowrap;
  flex-wrap: nowrap;
  -webkit-align-content: stretch;
  -ms-flex-line-pack: stretch;
  align-content: stretch;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex-wrap: nowrap;
  -ms-flex-wrap: nowrap;
  flex-wrap: nowrap;
  -webkit-align-content: stretch;
  -ms-flex-line-pack: stretch;
  align-content: stretch;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  background-color: rgb(30,49,59);
  max-height: 3.3125rem;
  min-height: 3.3125rem;
  line-height: 1.5625rem;
  position: fixed;
  left: 0;
  right: 0;
  bottom: 0;
}

.c0 {
  background-color: rgba(241,241,241,1);
  border-top: 0.0625rem solid rgb(216,216,216);
  height: 4.375rem;
  max-height: 4.375rem;
}

.c3 {
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 0 1 auto;
  -ms-flex: 0 1 auto;
  flex: 0 1 auto;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-right: -0.5rem;
  margin-left: -0.5rem;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
}

@media only screen and (min-width:0em) {
  .c4 {
    -webkit-flex-basis: 58.333333333333336%;
    -ms-flex-preferred-size: 58.333333333333336%;
    flex-basis: 58.333333333333336%;
    max-width: 58.333333333333336%;
    display: block;
  }
}

@media only screen and (min-width:0em) {
  .c9 {
    -webkit-flex-basis: 41.66666666666667%;
    -ms-flex-preferred-size: 41.66666666666667%;
    flex-basis: 41.66666666666667%;
    max-width: 41.66666666666667%;
    display: block;
  }
}

@media only screen and (min-width:48em) {
  .c2 {
    width: 46rem;
  }
}

@media only screen and (min-width:64em) {
  .c2 {
    width: 61rem;
  }
}

@media only screen and (min-width:75em) {
  .c2 {
    width: 76rem;
  }
}

@media only screen and (max-width:47.9375rem) {
  .c2 {
    padding-left: 0.375rem;
    padding-right: 0.375rem;
  }
}

@media only screen and (min-width:0em) {
  .c3 {
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
  }
}

@media only screen and (min-width:0em) {
  .c3 {
    -webkit-box-pack: justify;
    -webkit-justify-content: space-between;
    -ms-flex-pack: justify;
    justify-content: space-between;
  }
}

<div
  className="c0 c1"
>
  <div
    className="c2"
  >
    <div
      className="c3"
    >
      <div
        className="c4"
      >
        <span
          name="react-responsive-mock"
          query="only screen and (max-width: 47.9375rem)"
        >
          <button
            className="c5 c6 c7"
            disabled={true}
            href=""
            icon={true}
            onClick={[Function]}
            type="button"
          >
            <svg
              className=""
              height="15"
              style={
                Object {
                  "transform": "rotate(0deg)",
                }
              }
              version="1.1"
              viewBox="0 0 15 15"
              width="15"
              xmlns="http://www.w3.org/2000/svg"
              xmlnsXlink="http://www.w3.org/1999/xlink"
            >
              <g
                transform="translate(18240 -18581)"
              >
                <g>
                  <mask>
                    <rect
                      fill="white"
                      height={16}
                      transform="matrix(6.12323e-17 1 -1 6.12323e-17 -18226 18582)"
                      width={15}
                      x={-1}
                      xlinkHref="#L"
                      y={-1}
                    />
                    <use
                      fill="rgb(216, 216, 216)"
                      transform="matrix(6.12323e-17 1 -1 6.12323e-17 -18226 18582)"
                      xlinkHref="#M"
                    />
                  </mask>
                  <g
                    mask="url(#L)"
                  >
                    <use
                      fill="rgb(216, 216, 216)"
                      transform="matrix(6.12323e-17 1 -1 6.12323e-17 -18226 18582)"
                      xlinkHref="#N"
                    />
                  </g>
                </g>
              </g>
              <defs>
                <path
                  d="M 5.59466 1.92996C 5.9545 1.16288 7.0455 1.16288 7.40534 1.92996L 11.4608 10.5753C 11.7719 11.2385 11.288 12 10.5555 12L 2.44449 12C 1.71201 12 1.22807 11.2385 1.53915 10.5753L 5.59466 1.92996Z"
                  id="M"
                />
                <path
                  d="M 1.53915 10.5753L -0.271523 9.72593L 1.53915 10.5753ZM 7.40534 1.92996L 5.59466 2.77934L 7.40534 1.92996ZM 5.59466 2.77934L 9.65017 11.4247L 13.2715 9.72593L 9.21601 1.08058L 5.59466 2.77934ZM 10.5555 10L 2.44449 10L 2.44449 14L 10.5555 14L 10.5555 10ZM 3.34983 11.4247L 7.40534 2.77934L 3.78399 1.08058L -0.271523 9.72593L 3.34983 11.4247ZM 2.44449 10C 3.17698 10 3.66091 10.7615 3.34983 11.4247L -0.271523 9.72593C -1.20476 11.7154 0.247037 14 2.44449 14L 2.44449 10ZM 9.65017 11.4247C 9.33909 10.7615 9.82302 10 10.5555 10L 10.5555 14C 12.753 14 14.2048 11.7154 13.2715 9.72593L 9.65017 11.4247ZM 9.21601 1.08058C 8.13651 -1.22066 4.86349 -1.22066 3.78399 1.08058L 7.40534 2.77934C 7.0455 3.54642 5.9545 3.54642 5.59466 2.77934L 9.21601 1.08058Z"
                  id="N"
                />
              </defs>
            </svg>
          </button>
        </span>
        <span
          name="react-responsive-mock"
          query="only screen and (min-width: 48rem)"
        >
          <button
            className="c8 c6 c7"
            disabled={true}
            href=""
            icon={true}
            onClick={[Function]}
            type="button"
          >
            <svg
              className=""
              height="15"
              style={
                Object {
                  "transform": "rotate(0deg)",
                }
              }
              version="1.1"
              viewBox="0 0 15 15"
              width="15"
              xmlns="http://www.w3.org/2000/svg"
              xmlnsXlink="http://www.w3.org/1999/xlink"
            >
              <g
                transform="translate(18240 -18581)"
              >
                <g>
                  <mask>
                    <rect
                      fill="white"
                      height={16}
                      transform="matrix(6.12323e-17 1 -1 6.12323e-17 -18226 18582)"
                      width={15}
                      x={-1}
                      xlinkHref="#L"
                      y={-1}
                    />
                    <use
                      fill="rgb(216, 216, 216)"
                      transform="matrix(6.12323e-17 1 -1 6.12323e-17 -18226 18582)"
                      xlinkHref="#M"
                    />
                  </mask>
                  <g
                    mask="url(#L)"
                  >
                    <use
                      fill="rgb(216, 216, 216)"
                      transform="matrix(6.12323e-17 1 -1 6.12323e-17 -18226 18582)"
                      xlinkHref="#N"
                    />
                  </g>
                </g>
              </g>
              <defs>
                <path
                  d="M 5.59466 1.92996C 5.9545 1.16288 7.0455 1.16288 7.40534 1.92996L 11.4608 10.5753C 11.7719 11.2385 11.288 12 10.5555 12L 2.44449 12C 1.71201 12 1.22807 11.2385 1.53915 10.5753L 5.59466 1.92996Z"
                  id="M"
                />
                <path
                  d="M 1.53915 10.5753L -0.271523 9.72593L 1.53915 10.5753ZM 7.40534 1.92996L 5.59466 2.77934L 7.40534 1.92996ZM 5.59466 2.77934L 9.65017 11.4247L 13.2715 9.72593L 9.21601 1.08058L 5.59466 2.77934ZM 10.5555 10L 2.44449 10L 2.44449 14L 10.5555 14L 10.5555 10ZM 3.34983 11.4247L 7.40534 2.77934L 3.78399 1.08058L -0.271523 9.72593L 3.34983 11.4247ZM 2.44449 10C 3.17698 10 3.66091 10.7615 3.34983 11.4247L -0.271523 9.72593C -1.20476 11.7154 0.247037 14 2.44449 14L 2.44449 10ZM 9.65017 11.4247C 9.33909 10.7615 9.82302 10 10.5555 10L 10.5555 14C 12.753 14 14.2048 11.7154 13.2715 9.72593L 9.65017 11.4247ZM 9.21601 1.08058C 8.13651 -1.22066 4.86349 -1.22066 3.78399 1.08058L 7.40534 2.77934C 7.0455 3.54642 5.9545 3.54642 5.59466 2.77934L 9.21601 1.08058Z"
                  id="N"
                />
              </defs>
            </svg>
            <span>
              Start
            </span>
          </button>
        </span>
        <span
          name="react-responsive-mock"
          query="only screen and (max-width: 47.9375rem)"
        >
          <button
            className="c5 c6 c7"
            disabled={true}
            href=""
            icon={true}
            onClick={[Function]}
            type="button"
          >
            <svg
              className=""
              height="14"
              style={
                Object {
                  "transform": "rotate(0deg)",
                }
              }
              version="1.1"
              viewBox="0 0 14 14"
              width="14"
              xmlns="http://www.w3.org/2000/svg"
              xmlnsXlink="http://www.w3.org/1999/xlink"
            >
              <g
                transform="translate(18113 -18582)"
              >
                <g>
                  <mask
                    id="O"
                  >
                    <use
                      fill="white"
                      transform="translate(-18113 18582)"
                      xlinkHref="#P"
                    />
                  </mask>
                  <g
                    mask="url(#O)"
                  >
                    <use
                      fill="rgb(216, 216, 216)"
                      transform="translate(-18113 18582)"
                      xlinkHref="#Q"
                    />
                  </g>
                </g>
              </g>
              <defs>
                <path
                  d="M 0 2C 0 0.895431 0.895431 0 2 0L 12 0C 13.1046 0 14 0.895431 14 2L 14 12C 14 13.1046 13.1046 14 12 14L 2 14C 0.895431 14 0 13.1046 0 12L 0 2Z"
                  id="P"
                />
                <path
                  d="M 2 2L 12 2L 12 -2L 2 -2L 2 2ZM 12 2L 12 12L 16 12L 16 2L 12 2ZM 12 12L 2 12L 2 16L 12 16L 12 12ZM 2 12L 2 2L -2 2L -2 12L 2 12ZM 2 12L 2 12L -2 12C -2 14.2091 -0.209139 16 2 16L 2 12ZM 12 12L 12 12L 12 16C 14.2091 16 16 14.2091 16 12L 12 12ZM 12 2L 12 2L 16 2C 16 -0.209139 14.2091 -2 12 -2L 12 2ZM 2 -2C -0.209139 -2 -2 -0.209139 -2 2L 2 2L 2 2L 2 -2Z"
                  id="Q"
                />
              </defs>
            </svg>
          </button>
        </span>
        <span
          name="react-responsive-mock"
          query="only screen and (min-width: 48rem)"
        >
          <button
            className="c8 c6 c7"
            disabled={true}
            href=""
            icon={true}
            onClick={[Function]}
            type="button"
          >
            <svg
              className=""
              height="14"
              style={
                Object {
                  "transform": "rotate(0deg)",
                }
              }
              version="1.1"
              viewBox="0 0 14 14"
              width="14"
              xmlns="http://www.w3.org/2000/svg"
              xmlnsXlink="http://www.w3.org/1999/xlink"
            >
              <g
                transform="translate(18113 -18582)"
              >
                <g>
                  <mask
                    id="O"
                  >
                    <use
                      fill="white"
                      transform="translate(-18113 18582)"
                      xlinkHref="#P"
                    />
                  </mask>
                  <g
                    mask="url(#O)"
                  >
                    <use
                      fill="rgb(216, 216, 216)"
                      transform="translate(-18113 18582)"
                      xlinkHref="#Q"
                    />
                  </g>
                </g>
              </g>
              <defs>
                <path
                  d="M 0 2C 0 0.895431 0.895431 0 2 0L 12 0C 13.1046 0 14 0.895431 14 2L 14 12C 14 13.1046 13.1046 14 12 14L 2 14C 0.895431 14 0 13.1046 0 12L 0 2Z"
                  id="P"
                />
                <path
                  d="M 2 2L 12 2L 12 -2L 2 -2L 2 2ZM 12 2L 12 12L 16 12L 16 2L 12 2ZM 12 12L 2 12L 2 16L 12 16L 12 12ZM 2 12L 2 2L -2 2L -2 12L 2 12ZM 2 12L 2 12L -2 12C -2 14.2091 -0.209139 16 2 16L 2 12ZM 12 12L 12 12L 12 16C 14.2091 16 16 14.2091 16 12L 12 12ZM 12 2L 12 2L 16 2C 16 -0.209139 14.2091 -2 12 -2L 12 2ZM 2 -2C -0.209139 -2 -2 -0.209139 -2 2L 2 2L 2 2L 2 -2Z"
                  id="Q"
                />
              </defs>
            </svg>
            <span>
              Stop
            </span>
          </button>
        </span>
        <span
          name="react-responsive-mock"
          query="only screen and (max-width: 47.9375rem)"
        >
          <button
            className="c5 c6 c7"
            disabled={true}
            href=""
            icon={true}
            onClick={[Function]}
            type="button"
          >
            <svg
              className=""
              height="21"
              style={
                Object {
                  "transform": "rotate(0deg)",
                }
              }
              version="1.1"
              viewBox="0 0 20 21"
              width="20"
              xmlns="http://www.w3.org/2000/svg"
              xmlnsXlink="http://www.w3.org/1999/xlink"
            >
              <g
                transform="translate(17997 -18577)"
              >
                <g>
                  <use
                    fill="rgb(216, 216, 216)"
                    transform="matrix(0.866025 0.5 -0.5 0.866025 -17988.7 18577.9)"
                    xlinkHref="#K"
                  />
                </g>
              </g>
              <defs>
                <path
                  d="M 5.39661 3.57718L 5.3977 5.34469L 10.0255 2.67281L 5.39715 0L 5.39832 2.00201C 2.33086 2.5484 0.00065755 5.23112 0 8.45654C 0.000380483 12.0783 2.93556 15.0137 6.55562 15.0143C 10.1774 15.014 13.1128 12.0788 13.1124 8.45702L 11.5697 8.45687C 11.5697 11.2264 9.32527 13.4717 6.55578 13.4716C 3.78629 13.4716 1.54268 11.2262 1.5427 8.45669C 1.54135 6.08718 3.18616 4.10012 5.39661 3.57718Z"
                  fillRule="evenodd"
                  id="K"
                />
              </defs>
            </svg>
          </button>
        </span>
        <span
          name="react-responsive-mock"
          query="only screen and (min-width: 48rem)"
        >
          <button
            className="c8 c6 c7"
            disabled={true}
            href=""
            icon={true}
            onClick={[Function]}
            type="button"
          >
            <svg
              className=""
              height="21"
              style={
                Object {
                  "transform": "rotate(0deg)",
                }
              }
              version="1.1"
              viewBox="0 0 20 21"
              width="20"
              xmlns="http://www.w3.org/2000/svg"
              xmlnsXlink="http://www.w3.org/1999/xlink"
            >
              <g
                transform="translate(17997 -18577)"
              >
                <g>
                  <use
                    fill="rgb(216, 216, 216)"
                    transform="matrix(0.866025 0.5 -0.5 0.866025 -17988.7 18577.9)"
                    xlinkHref="#K"
                  />
                </g>
              </g>
              <defs>
                <path
                  d="M 5.39661 3.57718L 5.3977 5.34469L 10.0255 2.67281L 5.39715 0L 5.39832 2.00201C 2.33086 2.5484 0.00065755 5.23112 0 8.45654C 0.000380483 12.0783 2.93556 15.0137 6.55562 15.0143C 10.1774 15.014 13.1128 12.0788 13.1124 8.45702L 11.5697 8.45687C 11.5697 11.2264 9.32527 13.4717 6.55578 13.4716C 3.78629 13.4716 1.54268 11.2262 1.5427 8.45669C 1.54135 6.08718 3.18616 4.10012 5.39661 3.57718Z"
                  fillRule="evenodd"
                  id="K"
                />
              </defs>
            </svg>
            <span>
              Reboot
            </span>
          </button>
        </span>
      </div>
      <div
        className="c9"
      >
        <span
          name="react-responsive-mock"
          query="only screen and (max-width: 47.9375rem)"
        >
          <button
            className="c10 c6 c7"
            disabled={true}
            href=""
            icon={true}
            onClick={[Function]}
            type="button"
          >
            <svg
              className=""
              height="12"
              style={
                Object {
                  "transform": "rotate(0deg)",
                }
              }
              version="1.1"
              viewBox="0 0 9 12"
              width="9"
              xmlns="http://www.w3.org/2000/svg"
              xmlnsXlink="http://www.w3.org/1999/xlink"
            >
              <g
                transform="translate(17403 -18583)"
              >
                <g>
                  <use
                    fill="rgb(216, 216, 216)"
                    transform="translate(-17403 18583)"
                    xlinkHref="#j"
                  />
                </g>
              </g>
              <defs>
                <path
                  d="M 2 0L 2 1L 0 1L 0 2L 9 2L 9 1L 7 1L 7 0L 2 0ZM 0 3L 1 12L 8 12L 9 3L 0 3ZM 6 4L 7.882 4L 7.104 11L 6 11L 6 4ZM 4 11L 5.001 11L 5.001 4L 4 4L 4 11ZM 1.11719 4L 3.00019 4L 3.00019 11L 1.89619 11L 1.11719 4Z"
                  fillRule="evenodd"
                  id="j"
                />
              </defs>
            </svg>
          </button>
        </span>
        <span
          name="react-responsive-mock"
          query="only screen and (min-width: 48rem)"
        >
          <button
            className="c11 c6 c7"
            disabled={true}
            href=""
            icon={true}
            onClick={[Function]}
            type="button"
          >
            <svg
              className=""
              height="12"
              style={
                Object {
                  "transform": "rotate(0deg)",
                }
              }
              version="1.1"
              viewBox="0 0 9 12"
              width="9"
              xmlns="http://www.w3.org/2000/svg"
              xmlnsXlink="http://www.w3.org/1999/xlink"
            >
              <g
                transform="translate(17403 -18583)"
              >
                <g>
                  <use
                    fill="rgb(216, 216, 216)"
                    transform="translate(-17403 18583)"
                    xlinkHref="#j"
                  />
                </g>
              </g>
              <defs>
                <path
                  d="M 2 0L 2 1L 0 1L 0 2L 9 2L 9 1L 7 1L 7 0L 2 0ZM 0 3L 1 12L 8 12L 9 3L 0 3ZM 6 4L 7.882 4L 7.104 11L 6 11L 6 4ZM 4 11L 5.001 11L 5.001 4L 4 4L 4 11ZM 1.11719 4L 3.00019 4L 3.00019 11L 1.89619 11L 1.11719 4Z"
                  fillRule="evenodd"
                  id="j"
                />
              </defs>
            </svg>
            <span>
              Delete
            </span>
          </button>
        </span>
      </div>
    </div>
  </div>
</div>
`;

exports[`renders <Actions submitting statuses /> without throwing 1`] = `
.c9 {
  fill: rgb(59,70,204);
  stroke: rgb(59,70,204);
  -webkit-animation: iCqDak 1.5s ease-out 0s infinite;
  animation: iCqDak 1.5s ease-out 0s infinite;
}

.c10 {
  fill: rgb(59,70,204);
  stroke: rgb(59,70,204);
  -webkit-animation: iCqDak 1.5s ease-out 0s infinite;
  animation: iCqDak 1.5s ease-out 0s infinite;
  -webkit-animation-delay: 0.5s;
  animation-delay: 0.5s;
}

.c11 {
  fill: rgb(59,70,204);
  stroke: rgb(59,70,204);
  -webkit-animation: iCqDak 1.5s ease-out 0s infinite;
  animation: iCqDak 1.5s ease-out 0s infinite;
  -webkit-animation-delay: 1s;
  animation-delay: 1s;
}

.c8 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-flex-wrap: nowrap;
  -ms-flex-wrap: nowrap;
  flex-wrap: nowrap;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-content: center;
  -ms-flex-line-pack: center;
  align-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-height: 1.25rem;
  -webkit-flex: 1 0 auto;
  -ms-flex: 1 0 auto;
  flex: 1 0 auto;
}

.c7 {
  font-family: sans-serif;
  font-size: 100%;
  line-height: 1.15;
  margin: 0;
  overflow: visible;
  text-transform: none;
  -webkit-appearance: button;
  -moz-appearance: button;
  appearance: button;
  min-width: 7.5rem;
}

.c7::-moz-focus-inner,
.c7[type='button']::-moz-focus-inner,
.c7[type='reset']::-moz-focus-inner,
.c7[type='submit']::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

.c7:-moz-focusring,
.c7[type='button']:-moz-focusring,
.c7[type='reset']:-moz-focusring,
.c7[type='submit']:-moz-focusring {
  outline: 0.0625rem dotted ButtonText;
}

.c7 + button {
  margin-left: 0.375rem;
}

.c6 {
  display: inline-block;
}

.c5 {
  box-sizing: border-box;
  display: inline-block;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-height: 3rem;
  height: 3rem;
  min-width: 7.5rem;
  margin-bottom: 0.5rem;
  margin-top: 0.5rem;
  padding: 0.9375rem 1.125rem;
  position: relative;
  font-size: 0.9375rem;
  text-align: center;
  font-style: normal;
  font-stretch: normal;
  line-height: normal;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  text-decoration: none;
  white-space: nowrap;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  color: rgb(255,255,255);
  -webkit-text-fill-color: currentcolor;
  background-image: none;
  background-color: rgb(59,70,204);
  border-radius: 0.25rem;
  border: solid 0.0625rem rgb(45,56,132);
  color: rgb(70,70,70);
  -webkit-text-fill-color: currentcolor;
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
  cursor: not-allowed;
  pointer-events: none;
  color: rgb(216,216,216);
  background-color: rgb(250,250,250);
  border-color: rgb(216,216,216);
  padding: 0.5625rem 1.125rem;
  font-size: 0.8125rem;
  min-width: 0rem;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c5:focus {
  outline: 0;
  text-decoration: none;
  background-color: rgb(59,70,204);
  border-color: rgb(45,56,132);
}

.c5:hover {
  background-color: rgb(72,83,217);
  border: solid 0.0625rem rgb(45,56,132);
}

.c5:active,
.c5:active:hover,
.c5:active:focus {
  background-image: none;
  outline: 0;
  background-color: rgb(45,56,132);
  border-color: rgb(45,56,132);
}

.c5[disabled] {
  cursor: not-allowed;
  pointer-events: none;
}

.c5:focus {
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
}

.c5:hover {
  background-color: rgb(247,247,247);
  border-color: rgb(216,216,216);
}

.c5:active,
.c5:active:hover,
.c5:active:focus {
  background-color: rgb(230,230,230);
  border-color: rgb(216,216,216);
}

.c5:focus {
  background-color: rgb(250,250,250);
  border-color: rgb(216,216,216);
}

.c5:hover {
  background-color: rgb(250,250,250);
  border-color: rgb(250,250,250);
}

.c5:active,
.c5:active:hover,
.c5:active:focus {
  background-color: rgb(250,250,250);
  border-color: rgb(250,250,250);
}

.c5 svg + span {
  margin-left: 0.75rem;
}

.c5 svg {
  max-height: 1.125rem;
}

.c12 {
  box-sizing: border-box;
  display: inline-block;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-height: 3rem;
  height: 3rem;
  min-width: 7.5rem;
  margin-bottom: 0.5rem;
  margin-top: 0.5rem;
  padding: 0.9375rem 1.125rem;
  position: relative;
  font-size: 0.9375rem;
  text-align: center;
  font-style: normal;
  font-stretch: normal;
  line-height: normal;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  text-decoration: none;
  white-space: nowrap;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  color: rgb(255,255,255);
  -webkit-text-fill-color: currentcolor;
  background-image: none;
  background-color: rgb(59,70,204);
  border-radius: 0.25rem;
  border: solid 0.0625rem rgb(45,56,132);
  color: rgb(70,70,70);
  -webkit-text-fill-color: currentcolor;
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
  cursor: not-allowed;
  pointer-events: none;
  color: rgb(216,216,216);
  background-color: rgb(250,250,250);
  border-color: rgb(216,216,216);
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c12:focus {
  outline: 0;
  text-decoration: none;
  background-color: rgb(59,70,204);
  border-color: rgb(45,56,132);
}

.c12:hover {
  background-color: rgb(72,83,217);
  border: solid 0.0625rem rgb(45,56,132);
}

.c12:active,
.c12:active:hover,
.c12:active:focus {
  background-image: none;
  outline: 0;
  background-color: rgb(45,56,132);
  border-color: rgb(45,56,132);
}

.c12[disabled] {
  cursor: not-allowed;
  pointer-events: none;
}

.c12:focus {
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
}

.c12:hover {
  background-color: rgb(247,247,247);
  border-color: rgb(216,216,216);
}

.c12:active,
.c12:active:hover,
.c12:active:focus {
  background-color: rgb(230,230,230);
  border-color: rgb(216,216,216);
}

.c12:focus {
  background-color: rgb(250,250,250);
  border-color: rgb(216,216,216);
}

.c12:hover {
  background-color: rgb(250,250,250);
  border-color: rgb(250,250,250);
}

.c12:active,
.c12:active:hover,
.c12:active:focus {
  background-color: rgb(250,250,250);
  border-color: rgb(250,250,250);
}

.c12 svg + span {
  margin-left: 0.75rem;
}

.c12 svg {
  max-height: 1.125rem;
}

.c14 {
  box-sizing: border-box;
  display: inline-block;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-height: 3rem;
  height: 3rem;
  min-width: 7.5rem;
  margin-bottom: 0.5rem;
  margin-top: 0.5rem;
  padding: 0.9375rem 1.125rem;
  position: relative;
  font-size: 0.9375rem;
  text-align: center;
  font-style: normal;
  font-stretch: normal;
  line-height: normal;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  text-decoration: none;
  white-space: nowrap;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  color: rgb(255,255,255);
  -webkit-text-fill-color: currentcolor;
  background-image: none;
  background-color: rgb(59,70,204);
  border-radius: 0.25rem;
  border: solid 0.0625rem rgb(45,56,132);
  color: rgb(70,70,70);
  -webkit-text-fill-color: currentcolor;
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
  cursor: not-allowed;
  pointer-events: none;
  color: rgb(216,216,216);
  background-color: rgb(250,250,250);
  border-color: rgb(216,216,216);
  padding: 0.5625rem 1.125rem;
  font-size: 0.8125rem;
  min-width: 0rem;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  float: right;
}

.c14:focus {
  outline: 0;
  text-decoration: none;
  background-color: rgb(59,70,204);
  border-color: rgb(45,56,132);
}

.c14:hover {
  background-color: rgb(72,83,217);
  border: solid 0.0625rem rgb(45,56,132);
}

.c14:active,
.c14:active:hover,
.c14:active:focus {
  background-image: none;
  outline: 0;
  background-color: rgb(45,56,132);
  border-color: rgb(45,56,132);
}

.c14[disabled] {
  cursor: not-allowed;
  pointer-events: none;
}

.c14:focus {
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
}

.c14:hover {
  background-color: rgb(247,247,247);
  border-color: rgb(216,216,216);
}

.c14:active,
.c14:active:hover,
.c14:active:focus {
  background-color: rgb(230,230,230);
  border-color: rgb(216,216,216);
}

.c14:focus {
  background-color: rgb(250,250,250);
  border-color: rgb(216,216,216);
}

.c14:hover {
  background-color: rgb(250,250,250);
  border-color: rgb(250,250,250);
}

.c14:active,
.c14:active:hover,
.c14:active:focus {
  background-color: rgb(250,250,250);
  border-color: rgb(250,250,250);
}

.c14 svg + span {
  margin-left: 0.75rem;
}

.c14 svg {
  max-height: 1.125rem;
}

.c15 {
  box-sizing: border-box;
  display: inline-block;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-height: 3rem;
  height: 3rem;
  min-width: 7.5rem;
  margin-bottom: 0.5rem;
  margin-top: 0.5rem;
  padding: 0.9375rem 1.125rem;
  position: relative;
  font-size: 0.9375rem;
  text-align: center;
  font-style: normal;
  font-stretch: normal;
  line-height: normal;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  text-decoration: none;
  white-space: nowrap;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  color: rgb(255,255,255);
  -webkit-text-fill-color: currentcolor;
  background-image: none;
  background-color: rgb(59,70,204);
  border-radius: 0.25rem;
  border: solid 0.0625rem rgb(45,56,132);
  color: rgb(70,70,70);
  -webkit-text-fill-color: currentcolor;
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
  cursor: not-allowed;
  pointer-events: none;
  color: rgb(216,216,216);
  background-color: rgb(250,250,250);
  border-color: rgb(216,216,216);
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  float: right;
}

.c15:focus {
  outline: 0;
  text-decoration: none;
  background-color: rgb(59,70,204);
  border-color: rgb(45,56,132);
}

.c15:hover {
  background-color: rgb(72,83,217);
  border: solid 0.0625rem rgb(45,56,132);
}

.c15:active,
.c15:active:hover,
.c15:active:focus {
  background-image: none;
  outline: 0;
  background-color: rgb(45,56,132);
  border-color: rgb(45,56,132);
}

.c15[disabled] {
  cursor: not-allowed;
  pointer-events: none;
}

.c15:focus {
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
}

.c15:hover {
  background-color: rgb(247,247,247);
  border-color: rgb(216,216,216);
}

.c15:active,
.c15:active:hover,
.c15:active:focus {
  background-color: rgb(230,230,230);
  border-color: rgb(216,216,216);
}

.c15:focus {
  background-color: rgb(250,250,250);
  border-color: rgb(216,216,216);
}

.c15:hover {
  background-color: rgb(250,250,250);
  border-color: rgb(250,250,250);
}

.c15:active,
.c15:active:hover,
.c15:active:focus {
  background-color: rgb(250,250,250);
  border-color: rgb(250,250,250);
}

.c15 svg + span {
  margin-left: 0.75rem;
}

.c15 svg {
  max-height: 1.125rem;
}

.c4 {
  box-sizing: border-box;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  padding-right: 0.5rem;
  padding-left: 0.5rem;
}

.c13 {
  box-sizing: border-box;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  padding-right: 0.5rem;
  padding-left: 0.5rem;
}

.c2 {
  margin-right: auto;
  margin-left: auto;
  box-sizing: border-box;
  width: 100%;
  max-width: 62.5rem;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: nowrap;
  -ms-flex-wrap: nowrap;
  flex-wrap: nowrap;
  -webkit-align-content: stretch;
  -ms-flex-line-pack: stretch;
  align-content: stretch;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex-wrap: nowrap;
  -ms-flex-wrap: nowrap;
  flex-wrap: nowrap;
  -webkit-align-content: stretch;
  -ms-flex-line-pack: stretch;
  align-content: stretch;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  background-color: rgb(30,49,59);
  max-height: 3.3125rem;
  min-height: 3.3125rem;
  line-height: 1.5625rem;
  position: fixed;
  left: 0;
  right: 0;
  bottom: 0;
}

.c0 {
  background-color: rgba(241,241,241,1);
  border-top: 0.0625rem solid rgb(216,216,216);
  height: 4.375rem;
  max-height: 4.375rem;
}

.c3 {
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 0 1 auto;
  -ms-flex: 0 1 auto;
  flex: 0 1 auto;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-right: -0.5rem;
  margin-left: -0.5rem;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
}

@media only screen and (min-width:0em) {
  .c4 {
    -webkit-flex-basis: 58.333333333333336%;
    -ms-flex-preferred-size: 58.333333333333336%;
    flex-basis: 58.333333333333336%;
    max-width: 58.333333333333336%;
    display: block;
  }
}

@media only screen and (min-width:0em) {
  .c13 {
    -webkit-flex-basis: 41.66666666666667%;
    -ms-flex-preferred-size: 41.66666666666667%;
    flex-basis: 41.66666666666667%;
    max-width: 41.66666666666667%;
    display: block;
  }
}

@media only screen and (min-width:48em) {
  .c2 {
    width: 46rem;
  }
}

@media only screen and (min-width:64em) {
  .c2 {
    width: 61rem;
  }
}

@media only screen and (min-width:75em) {
  .c2 {
    width: 76rem;
  }
}

@media only screen and (max-width:47.9375rem) {
  .c2 {
    padding-left: 0.375rem;
    padding-right: 0.375rem;
  }
}

@media only screen and (min-width:0em) {
  .c3 {
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
  }
}

@media only screen and (min-width:0em) {
  .c3 {
    -webkit-box-pack: justify;
    -webkit-justify-content: space-between;
    -ms-flex-pack: justify;
    justify-content: space-between;
  }
}

<div
  className="c0 c1"
>
  <div
    className="c2"
  >
    <div
      className="c3"
    >
      <div
        className="c4"
      >
        <span
          name="react-responsive-mock"
          query="only screen and (max-width: 47.9375rem)"
        >
          <button
            className="c5 c6 c7"
            disabled={true}
            href=""
            icon={true}
            onClick={[Function]}
            type="button"
          >
            <div
              className="c8"
            >
              <svg
                height="10"
                width="28"
              >
                <rect
                  className="c9"
                  height="6"
                  width="6"
                  x="2"
                  y="2"
                />
                <rect
                  className="c10"
                  height="6"
                  width="6"
                  x="11"
                  y="2"
                />
                <rect
                  className="c11"
                  height="6"
                  width="6"
                  x="20"
                  y="2"
                />
              </svg>
            </div>
          </button>
        </span>
        <span
          name="react-responsive-mock"
          query="only screen and (min-width: 48rem)"
        >
          <button
            className="c12 c6 c7"
            disabled={true}
            href=""
            icon={true}
            onClick={[Function]}
            type="button"
          >
            <div
              className="c8"
            >
              <svg
                height="10"
                width="28"
              >
                <rect
                  className="c9"
                  height="6"
                  width="6"
                  x="2"
                  y="2"
                />
                <rect
                  className="c10"
                  height="6"
                  width="6"
                  x="11"
                  y="2"
                />
                <rect
                  className="c11"
                  height="6"
                  width="6"
                  x="20"
                  y="2"
                />
              </svg>
            </div>
          </button>
        </span>
        <span
          name="react-responsive-mock"
          query="only screen and (max-width: 47.9375rem)"
        >
          <button
            className="c5 c6 c7"
            disabled={true}
            href=""
            icon={true}
            onClick={[Function]}
            type="button"
          >
            <div
              className="c8"
            >
              <svg
                height="10"
                width="28"
              >
                <rect
                  className="c9"
                  height="6"
                  width="6"
                  x="2"
                  y="2"
                />
                <rect
                  className="c10"
                  height="6"
                  width="6"
                  x="11"
                  y="2"
                />
                <rect
                  className="c11"
                  height="6"
                  width="6"
                  x="20"
                  y="2"
                />
              </svg>
            </div>
          </button>
        </span>
        <span
          name="react-responsive-mock"
          query="only screen and (min-width: 48rem)"
        >
          <button
            className="c12 c6 c7"
            disabled={true}
            href=""
            icon={true}
            onClick={[Function]}
            type="button"
          >
            <div
              className="c8"
            >
              <svg
                height="10"
                width="28"
              >
                <rect
                  className="c9"
                  height="6"
                  width="6"
                  x="2"
                  y="2"
                />
                <rect
                  className="c10"
                  height="6"
                  width="6"
                  x="11"
                  y="2"
                />
                <rect
                  className="c11"
                  height="6"
                  width="6"
                  x="20"
                  y="2"
                />
              </svg>
            </div>
          </button>
        </span>
        <span
          name="react-responsive-mock"
          query="only screen and (max-width: 47.9375rem)"
        >
          <button
            className="c5 c6 c7"
            disabled={true}
            href=""
            icon={true}
            onClick={[Function]}
            type="button"
          >
            <svg
              className=""
              height="21"
              style={
                Object {
                  "transform": "rotate(0deg)",
                }
              }
              version="1.1"
              viewBox="0 0 20 21"
              width="20"
              xmlns="http://www.w3.org/2000/svg"
              xmlnsXlink="http://www.w3.org/1999/xlink"
            >
              <g
                transform="translate(17997 -18577)"
              >
                <g>
                  <use
                    fill="rgb(216, 216, 216)"
                    transform="matrix(0.866025 0.5 -0.5 0.866025 -17988.7 18577.9)"
                    xlinkHref="#K"
                  />
                </g>
              </g>
              <defs>
                <path
                  d="M 5.39661 3.57718L 5.3977 5.34469L 10.0255 2.67281L 5.39715 0L 5.39832 2.00201C 2.33086 2.5484 0.00065755 5.23112 0 8.45654C 0.000380483 12.0783 2.93556 15.0137 6.55562 15.0143C 10.1774 15.014 13.1128 12.0788 13.1124 8.45702L 11.5697 8.45687C 11.5697 11.2264 9.32527 13.4717 6.55578 13.4716C 3.78629 13.4716 1.54268 11.2262 1.5427 8.45669C 1.54135 6.08718 3.18616 4.10012 5.39661 3.57718Z"
                  fillRule="evenodd"
                  id="K"
                />
              </defs>
            </svg>
          </button>
        </span>
        <span
          name="react-responsive-mock"
          query="only screen and (min-width: 48rem)"
        >
          <button
            className="c12 c6 c7"
            disabled={true}
            href=""
            icon={true}
            onClick={[Function]}
            type="button"
          >
            <svg
              className=""
              height="21"
              style={
                Object {
                  "transform": "rotate(0deg)",
                }
              }
              version="1.1"
              viewBox="0 0 20 21"
              width="20"
              xmlns="http://www.w3.org/2000/svg"
              xmlnsXlink="http://www.w3.org/1999/xlink"
            >
              <g
                transform="translate(17997 -18577)"
              >
                <g>
                  <use
                    fill="rgb(216, 216, 216)"
                    transform="matrix(0.866025 0.5 -0.5 0.866025 -17988.7 18577.9)"
                    xlinkHref="#K"
                  />
                </g>
              </g>
              <defs>
                <path
                  d="M 5.39661 3.57718L 5.3977 5.34469L 10.0255 2.67281L 5.39715 0L 5.39832 2.00201C 2.33086 2.5484 0.00065755 5.23112 0 8.45654C 0.000380483 12.0783 2.93556 15.0137 6.55562 15.0143C 10.1774 15.014 13.1128 12.0788 13.1124 8.45702L 11.5697 8.45687C 11.5697 11.2264 9.32527 13.4717 6.55578 13.4716C 3.78629 13.4716 1.54268 11.2262 1.5427 8.45669C 1.54135 6.08718 3.18616 4.10012 5.39661 3.57718Z"
                  fillRule="evenodd"
                  id="K"
                />
              </defs>
            </svg>
            <span>
              Reboot
            </span>
          </button>
        </span>
      </div>
      <div
        className="c13"
      >
        <span
          name="react-responsive-mock"
          query="only screen and (max-width: 47.9375rem)"
        >
          <button
            className="c14 c6 c7"
            disabled={true}
            href=""
            icon={true}
            onClick={[Function]}
            type="button"
          >
            <div
              className="c8"
            >
              <svg
                height="10"
                width="28"
              >
                <rect
                  className="c9"
                  height="6"
                  width="6"
                  x="2"
                  y="2"
                />
                <rect
                  className="c10"
                  height="6"
                  width="6"
                  x="11"
                  y="2"
                />
                <rect
                  className="c11"
                  height="6"
                  width="6"
                  x="20"
                  y="2"
                />
              </svg>
            </div>
          </button>
        </span>
        <span
          name="react-responsive-mock"
          query="only screen and (min-width: 48rem)"
        >
          <button
            className="c15 c6 c7"
            disabled={true}
            href=""
            icon={true}
            onClick={[Function]}
            type="button"
          >
            <div
              className="c8"
            >
              <svg
                height="10"
                width="28"
              >
                <rect
                  className="c9"
                  height="6"
                  width="6"
                  x="2"
                  y="2"
                />
                <rect
                  className="c10"
                  height="6"
                  width="6"
                  x="11"
                  y="2"
                />
                <rect
                  className="c11"
                  height="6"
                  width="6"
                  x="20"
                  y="2"
                />
              </svg>
            </div>
          </button>
        </span>
      </div>
    </div>
  </div>
</div>
`;

exports[`renders <InstanceList /> without throwing 1`] = `
.c14 {
  margin-bottom: 0.125rem;
  margin-left: 0.5625rem;
}

.c10 {
  font-family: sans-serif;
  font-size: 100%;
  line-height: 1.15;
  margin: 0;
  overflow: visible;
  display: none;
}

.c10[type='checkbox'],
.c10[type='radio'] {
  box-sizing: border-box;
  padding: 0;
}

.c10[type='number']::-webkit-inner-spin-button,
.c10[type='number']::-webkit-outer-spin-button {
  height: auto;
}

.c10[type='search'] {
  -webkit-appearance: textfield;
  -moz-appearance: textfield;
  appearance: textfield;
  outline-offset: -0.125rem;
}

.c10[type='search']::-webkit-search-cancel-button,
.c10[type='search']::-webkit-search-decoration {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.c10::-webkit-file-upload-button {
  -webkit-appearance: button;
  -moz-appearance: button;
  appearance: button;
  font: inherit;
}

.c10:checked + label::after {
  opacity: 1;
}

.c10:selected + label::after {
  opacity: 1;
}

.c10:checked + label {
  border-color: rgb(59,70,204);
}

.c10:selected + label {
  border-color: rgb(59,70,204);
}

.c10:disabled + label {
  background-color: rgb(249,249,249);
}

.c11 {
  color: rgb(100,100,100);
  position: absolute;
  width: 1.125rem;
  height: 1.125rem;
  box-sizing: border-box;
  top: 0;
  right: 0;
  cursor: pointer;
  background-color: rgb(255,255,255);
  box-shadow: none;
  border: 0.0625rem solid rgb(216,216,216);
  cursor: pointer;
  border-radius: 0.25rem;
  width: 1.125rem;
  height: 1.125rem;
}

.c11::after {
  opacity: 0;
  content: '';
  position: absolute;
  width: 0.375rem;
  height: 0.125rem;
  background: transparent;
  top: 0.3125rem;
  left: 0.25rem;
  border: 0.125rem solid rgb(45,45,45);
  border-top: none;
  border-right: none;
  -webkit-transform: rotate(-45deg);
  -ms-transform: rotate(-45deg);
  transform: rotate(-45deg);
}

.c9 {
  display: inline-block;
  vertical-align: text-bottom;
  width: 1.125rem;
  height: 1.125rem;
  position: relative;
  cursor: pointer;
}

.c12 {
  margin-bottom: 0.75rem;
  margin-left: 0.75rem;
}

.c8 {
  list-style-type: none;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c8 label {
  font-weight: 400;
}

.c7 {
  display: inline-block;
  margin: 0;
  padding: 0;
  border: none;
  overflow: hidden;
  height: auto;
  -webkit-margin-start: 0;
  -webkit-margin-end: 0;
  -webkit-padding-before: 0;
  -webkit-padding-start: 0;
  -webkit-padding-end: 0;
  -webkit-padding-after: 0;
}

.c6 {
  padding-top: 0.25rem;
}

.c5 {
  padding-top: 0.25rem;
}

.c0 {
  overflow: hidden;
  border-spacing: 0;
  border-collapse: separate;
  table-layout: fixed;
  width: 100%;
  max-width: 100%;
}

.c1 {
  width: 100%;
  background: rgb(250,250,250);
}

.c1 th:first-child {
  border-top-left-radius: 0.25rem;
}

.c1 th:last-child {
  border-top-right-radius: 0.25rem;
}

.c20 {
  width: 100%;
}

.c20 tr:first-child td {
  border-top: none;
}

.c4 {
  border-width: 0.0625rem;
  border-style: solid;
  border-color: rgb(216,216,216);
  border-spacing: 0;
  white-space: nowrap;
  box-sizing: border-box;
  padding: 0 1.5rem;
  height: 3.75rem;
  width: 2rem;
  display: table-cell;
  vertical-align: middle;
  text-align: left;
  height: 2.625rem;
  color: rgb(189,189,189);
  font-weight: 500;
}

.c4:not(:first-child) {
  border-left-width: 0;
}

.c4:not(:last-child) {
  border-right-width: 0;
}

.c13 {
  border-width: 0.0625rem;
  border-style: solid;
  border-color: rgb(216,216,216);
  border-spacing: 0;
  white-space: nowrap;
  box-sizing: border-box;
  padding: 0 1.5rem;
  height: 3.75rem;
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  vertical-align: middle;
  text-align: left;
  height: 2.625rem;
  color: rgb(189,189,189);
  font-weight: 500;
}

.c13:not(:first-child) {
  border-left-width: 0;
}

.c13:not(:last-child) {
  border-right-width: 0;
}

.c15 {
  border-width: 0.0625rem;
  border-style: solid;
  border-color: rgb(216,216,216);
  border-spacing: 0;
  white-space: nowrap;
  box-sizing: border-box;
  padding: 0 1.5rem;
  height: 3.75rem;
  width: 9.375rem;
  display: table-cell;
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  vertical-align: middle;
  text-align: left;
  height: 2.625rem;
  color: rgb(189,189,189);
  font-weight: 500;
}

.c15:not(:first-child) {
  border-left-width: 0;
}

.c15:not(:last-child) {
  border-right-width: 0;
}

.c16 {
  border-width: 0.0625rem;
  border-style: solid;
  border-color: rgb(216,216,216);
  border-spacing: 0;
  white-space: nowrap;
  box-sizing: border-box;
  padding: 0 1.5rem;
  height: 3.75rem;
  width: 0rem;
  display: none;
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  vertical-align: middle;
  text-align: left;
  height: 2.625rem;
  color: rgb(189,189,189);
  font-weight: 500;
}

.c16:not(:first-child) {
  border-left-width: 0;
}

.c16:not(:last-child) {
  border-right-width: 0;
}

.c17 {
  border-width: 0.0625rem;
  border-style: solid;
  border-color: rgb(216,216,216);
  border-spacing: 0;
  white-space: nowrap;
  box-sizing: border-box;
  padding: 0 1.5rem;
  height: 3.75rem;
  width: 0rem;
  display: none;
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  vertical-align: middle;
  text-align: left;
  height: 2.625rem;
  color: rgb(189,189,189);
  font-weight: 500;
}

.c17:not(:first-child) {
  border-left-width: 0;
}

.c17:not(:last-child) {
  border-right-width: 0;
}

.c19 {
  border-width: 0.0625rem;
  border-style: solid;
  border-color: rgb(216,216,216);
  border-spacing: 0;
  white-space: nowrap;
  box-sizing: border-box;
  padding: 0 1.5rem;
  height: 3.75rem;
  width: 3.75rem;
  display: table-cell;
  height: 2.625rem;
  color: rgb(189,189,189);
  font-weight: 500;
}

.c19:not(:first-child) {
  border-left-width: 0;
}

.c19:not(:last-child) {
  border-right-width: 0;
}

.c2 {
  display: table-row;
  color: rgba(73,73,73,1);
  background-color: rgb(255,255,255);
  box-shadow: 0 0.125rem 0 rgba(0,0,0,0.05);
  box-sizing: border-box;
  color: rgba(73,73,73,1);
  background-color: transparent;
  border: none;
  box-shadow: none;
}

.c2:last-child {
  box-shadow: none;
}

.c2:last-child td {
  border-bottom-width: 0.0625rem;
}

.c3 {
  padding: 0rem;
  padding-left: 0.75rem;
}

.c18 {
  padding: 0rem;
}

@media only screen and (min-width:47.9375rem) {
  .c16 {
    width: 10rem;
    display: table-cell;
  }
}

@media only screen and (min-width:47.9375rem) {
  .c17 {
    width: 8.125rem;
    display: table-cell;
  }
}

<form>
  <table
    className="c0"
  >
    <thead
      className="c1"
      disabled={undefined}
      name="thdead"
      selected={undefined}
    >
      <tr
        className="c2"
        disabled={undefined}
        name="tr"
        selected={undefined}
      >
        <th
          className="c3 c4"
          disabled={undefined}
          name="th"
          selected={undefined}
        >
          <div
            className="c5 c6 c7"
            role="group"
            style={undefined}
          >
            <li
              className="c8"
            >
              <div
                checked={false}
                className="c9"
                disabled={false}
                id="bh"
                onChange={[Function]}
                type="checkbox"
              >
                <input
                  checked={false}
                  className="c10"
                  disabled={false}
                  id="bi"
                  onChange={[Function]}
                  type="checkbox"
                />
                <label
                  className="c11"
                  htmlFor="bi"
                />
              </div>
              <div
                className="c12"
              />
            </li>
          </div>
        </th>
        <th
          className="c13"
          disabled={undefined}
          name="th"
          onClick={[Function]}
          selected={undefined}
        >
          <span>
            Name 
          </span>
          <svg
            className="c14"
            height="6"
            marginBottom="0.125rem"
            marginLeft="0.5625rem"
            style={
              Object {
                "transform": "rotate(180deg)",
              }
            }
            viewBox="0 0 9 6"
            width="9"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M9 1.386L7.648 0 4.5 3.228 1.352 0 0 1.386 4.5 6z"
              fill="rgba(73, 73, 73, 1)"
              fillRule="evenodd"
            />
          </svg>
        </th>
        <th
          className="c15"
          disabled={undefined}
          name="th"
          onClick={[Function]}
          selected={undefined}
        >
          <span>
            Status 
          </span>
        </th>
        <th
          className="c16"
          disabled={undefined}
          name="th"
          onClick={[Function]}
          selected={undefined}
        >
          <span>
            Created 
          </span>
        </th>
        <th
          className="c17"
          disabled={undefined}
          name="th"
          onClick={[Function]}
          selected={undefined}
        >
          <span>
            Short ID 
          </span>
        </th>
        <th
          className="c18 c19"
          disabled={undefined}
          name="th"
          selected={undefined}
        />
      </tr>
    </thead>
    <tbody
      className="c20"
      disabled={undefined}
      name="tbody"
      selected={undefined}
    />
  </table>
</form>
`;

exports[`renders <InstanceList allSelected /> without throwing 1`] = `
.c14 {
  margin-bottom: 0.125rem;
  margin-left: 0.5625rem;
}

.c10 {
  font-family: sans-serif;
  font-size: 100%;
  line-height: 1.15;
  margin: 0;
  overflow: visible;
  display: none;
}

.c10[type='checkbox'],
.c10[type='radio'] {
  box-sizing: border-box;
  padding: 0;
}

.c10[type='number']::-webkit-inner-spin-button,
.c10[type='number']::-webkit-outer-spin-button {
  height: auto;
}

.c10[type='search'] {
  -webkit-appearance: textfield;
  -moz-appearance: textfield;
  appearance: textfield;
  outline-offset: -0.125rem;
}

.c10[type='search']::-webkit-search-cancel-button,
.c10[type='search']::-webkit-search-decoration {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.c10::-webkit-file-upload-button {
  -webkit-appearance: button;
  -moz-appearance: button;
  appearance: button;
  font: inherit;
}

.c10:checked + label::after {
  opacity: 1;
}

.c10:selected + label::after {
  opacity: 1;
}

.c10:checked + label {
  border-color: rgb(59,70,204);
}

.c10:selected + label {
  border-color: rgb(59,70,204);
}

.c10:disabled + label {
  background-color: rgb(249,249,249);
}

.c11 {
  color: rgb(100,100,100);
  position: absolute;
  width: 1.125rem;
  height: 1.125rem;
  box-sizing: border-box;
  top: 0;
  right: 0;
  cursor: pointer;
  background-color: rgb(255,255,255);
  box-shadow: none;
  border: 0.0625rem solid rgb(216,216,216);
  cursor: pointer;
  border-radius: 0.25rem;
  width: 1.125rem;
  height: 1.125rem;
}

.c11::after {
  opacity: 0;
  content: '';
  position: absolute;
  width: 0.375rem;
  height: 0.125rem;
  background: transparent;
  top: 0.3125rem;
  left: 0.25rem;
  border: 0.125rem solid rgb(45,45,45);
  border-top: none;
  border-right: none;
  -webkit-transform: rotate(-45deg);
  -ms-transform: rotate(-45deg);
  transform: rotate(-45deg);
}

.c9 {
  display: inline-block;
  vertical-align: text-bottom;
  width: 1.125rem;
  height: 1.125rem;
  position: relative;
  cursor: pointer;
}

.c12 {
  margin-bottom: 0.75rem;
  margin-left: 0.75rem;
}

.c8 {
  list-style-type: none;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c8 label {
  font-weight: 400;
}

.c7 {
  display: inline-block;
  margin: 0;
  padding: 0;
  border: none;
  overflow: hidden;
  height: auto;
  -webkit-margin-start: 0;
  -webkit-margin-end: 0;
  -webkit-padding-before: 0;
  -webkit-padding-start: 0;
  -webkit-padding-end: 0;
  -webkit-padding-after: 0;
}

.c6 {
  padding-top: 0.25rem;
}

.c5 {
  padding-top: 0.25rem;
}

.c0 {
  overflow: hidden;
  border-spacing: 0;
  border-collapse: separate;
  table-layout: fixed;
  width: 100%;
  max-width: 100%;
}

.c1 {
  width: 100%;
  background: rgb(250,250,250);
}

.c1 th:first-child {
  border-top-left-radius: 0.25rem;
}

.c1 th:last-child {
  border-top-right-radius: 0.25rem;
}

.c20 {
  width: 100%;
}

.c20 tr:first-child td {
  border-top: none;
}

.c4 {
  border-width: 0.0625rem;
  border-style: solid;
  border-color: rgb(216,216,216);
  border-spacing: 0;
  white-space: nowrap;
  box-sizing: border-box;
  padding: 0 1.5rem;
  height: 3.75rem;
  width: 2rem;
  display: table-cell;
  vertical-align: middle;
  text-align: left;
  height: 2.625rem;
  color: rgb(189,189,189);
  font-weight: 500;
}

.c4:not(:first-child) {
  border-left-width: 0;
}

.c4:not(:last-child) {
  border-right-width: 0;
}

.c13 {
  border-width: 0.0625rem;
  border-style: solid;
  border-color: rgb(216,216,216);
  border-spacing: 0;
  white-space: nowrap;
  box-sizing: border-box;
  padding: 0 1.5rem;
  height: 3.75rem;
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  vertical-align: middle;
  text-align: left;
  height: 2.625rem;
  color: rgb(189,189,189);
  font-weight: 500;
}

.c13:not(:first-child) {
  border-left-width: 0;
}

.c13:not(:last-child) {
  border-right-width: 0;
}

.c15 {
  border-width: 0.0625rem;
  border-style: solid;
  border-color: rgb(216,216,216);
  border-spacing: 0;
  white-space: nowrap;
  box-sizing: border-box;
  padding: 0 1.5rem;
  height: 3.75rem;
  width: 9.375rem;
  display: table-cell;
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  vertical-align: middle;
  text-align: left;
  height: 2.625rem;
  color: rgb(189,189,189);
  font-weight: 500;
}

.c15:not(:first-child) {
  border-left-width: 0;
}

.c15:not(:last-child) {
  border-right-width: 0;
}

.c16 {
  border-width: 0.0625rem;
  border-style: solid;
  border-color: rgb(216,216,216);
  border-spacing: 0;
  white-space: nowrap;
  box-sizing: border-box;
  padding: 0 1.5rem;
  height: 3.75rem;
  width: 0rem;
  display: none;
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  vertical-align: middle;
  text-align: left;
  height: 2.625rem;
  color: rgb(189,189,189);
  font-weight: 500;
}

.c16:not(:first-child) {
  border-left-width: 0;
}

.c16:not(:last-child) {
  border-right-width: 0;
}

.c17 {
  border-width: 0.0625rem;
  border-style: solid;
  border-color: rgb(216,216,216);
  border-spacing: 0;
  white-space: nowrap;
  box-sizing: border-box;
  padding: 0 1.5rem;
  height: 3.75rem;
  width: 0rem;
  display: none;
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  vertical-align: middle;
  text-align: left;
  height: 2.625rem;
  color: rgb(189,189,189);
  font-weight: 500;
}

.c17:not(:first-child) {
  border-left-width: 0;
}

.c17:not(:last-child) {
  border-right-width: 0;
}

.c19 {
  border-width: 0.0625rem;
  border-style: solid;
  border-color: rgb(216,216,216);
  border-spacing: 0;
  white-space: nowrap;
  box-sizing: border-box;
  padding: 0 1.5rem;
  height: 3.75rem;
  width: 3.75rem;
  display: table-cell;
  height: 2.625rem;
  color: rgb(189,189,189);
  font-weight: 500;
}

.c19:not(:first-child) {
  border-left-width: 0;
}

.c19:not(:last-child) {
  border-right-width: 0;
}

.c2 {
  display: table-row;
  color: rgba(73,73,73,1);
  background-color: rgb(255,255,255);
  box-shadow: 0 0.125rem 0 rgba(0,0,0,0.05);
  box-sizing: border-box;
  color: rgba(73,73,73,1);
  background-color: transparent;
  border: none;
  box-shadow: none;
}

.c2:last-child {
  box-shadow: none;
}

.c2:last-child td {
  border-bottom-width: 0.0625rem;
}

.c3 {
  padding: 0rem;
  padding-left: 0.75rem;
}

.c18 {
  padding: 0rem;
}

@media only screen and (min-width:47.9375rem) {
  .c16 {
    width: 10rem;
    display: table-cell;
  }
}

@media only screen and (min-width:47.9375rem) {
  .c17 {
    width: 8.125rem;
    display: table-cell;
  }
}

<form>
  <table
    className="c0"
  >
    <thead
      className="c1"
      disabled={undefined}
      name="thdead"
      selected={undefined}
    >
      <tr
        className="c2"
        disabled={undefined}
        name="tr"
        selected={undefined}
      >
        <th
          className="c3 c4"
          disabled={undefined}
          name="th"
          selected={undefined}
        >
          <div
            className="c5 c6 c7"
            role="group"
            style={undefined}
          >
            <li
              className="c8"
            >
              <div
                checked={true}
                className="c9"
                disabled={false}
                id="bt"
                onChange={[Function]}
                type="checkbox"
              >
                <input
                  checked={true}
                  className="c10"
                  disabled={false}
                  id="bu"
                  onChange={[Function]}
                  type="checkbox"
                />
                <label
                  className="c11"
                  htmlFor="bu"
                />
              </div>
              <div
                className="c12"
              />
            </li>
          </div>
        </th>
        <th
          className="c13"
          disabled={undefined}
          name="th"
          onClick={[Function]}
          selected={undefined}
        >
          <span>
            Name 
          </span>
          <svg
            className="c14"
            height="6"
            marginBottom="0.125rem"
            marginLeft="0.5625rem"
            style={
              Object {
                "transform": "rotate(180deg)",
              }
            }
            viewBox="0 0 9 6"
            width="9"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M9 1.386L7.648 0 4.5 3.228 1.352 0 0 1.386 4.5 6z"
              fill="rgba(73, 73, 73, 1)"
              fillRule="evenodd"
            />
          </svg>
        </th>
        <th
          className="c15"
          disabled={undefined}
          name="th"
          onClick={[Function]}
          selected={undefined}
        >
          <span>
            Status 
          </span>
        </th>
        <th
          className="c16"
          disabled={undefined}
          name="th"
          onClick={[Function]}
          selected={undefined}
        >
          <span>
            Created 
          </span>
        </th>
        <th
          className="c17"
          disabled={undefined}
          name="th"
          onClick={[Function]}
          selected={undefined}
        >
          <span>
            Short ID 
          </span>
        </th>
        <th
          className="c18 c19"
          disabled={undefined}
          name="th"
          selected={undefined}
        />
      </tr>
    </thead>
    <tbody
      className="c20"
      disabled={undefined}
      name="tbody"
      selected={undefined}
    />
  </table>
</form>
`;

exports[`renders <InstanceList sortBy /> without throwing 1`] = `
.c15 {
  margin-bottom: 0.125rem;
  margin-left: 0.5625rem;
}

.c10 {
  font-family: sans-serif;
  font-size: 100%;
  line-height: 1.15;
  margin: 0;
  overflow: visible;
  display: none;
}

.c10[type='checkbox'],
.c10[type='radio'] {
  box-sizing: border-box;
  padding: 0;
}

.c10[type='number']::-webkit-inner-spin-button,
.c10[type='number']::-webkit-outer-spin-button {
  height: auto;
}

.c10[type='search'] {
  -webkit-appearance: textfield;
  -moz-appearance: textfield;
  appearance: textfield;
  outline-offset: -0.125rem;
}

.c10[type='search']::-webkit-search-cancel-button,
.c10[type='search']::-webkit-search-decoration {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.c10::-webkit-file-upload-button {
  -webkit-appearance: button;
  -moz-appearance: button;
  appearance: button;
  font: inherit;
}

.c10:checked + label::after {
  opacity: 1;
}

.c10:selected + label::after {
  opacity: 1;
}

.c10:checked + label {
  border-color: rgb(59,70,204);
}

.c10:selected + label {
  border-color: rgb(59,70,204);
}

.c10:disabled + label {
  background-color: rgb(249,249,249);
}

.c11 {
  color: rgb(100,100,100);
  position: absolute;
  width: 1.125rem;
  height: 1.125rem;
  box-sizing: border-box;
  top: 0;
  right: 0;
  cursor: pointer;
  background-color: rgb(255,255,255);
  box-shadow: none;
  border: 0.0625rem solid rgb(216,216,216);
  cursor: pointer;
  border-radius: 0.25rem;
  width: 1.125rem;
  height: 1.125rem;
}

.c11::after {
  opacity: 0;
  content: '';
  position: absolute;
  width: 0.375rem;
  height: 0.125rem;
  background: transparent;
  top: 0.3125rem;
  left: 0.25rem;
  border: 0.125rem solid rgb(45,45,45);
  border-top: none;
  border-right: none;
  -webkit-transform: rotate(-45deg);
  -ms-transform: rotate(-45deg);
  transform: rotate(-45deg);
}

.c9 {
  display: inline-block;
  vertical-align: text-bottom;
  width: 1.125rem;
  height: 1.125rem;
  position: relative;
  cursor: pointer;
}

.c12 {
  margin-bottom: 0.75rem;
  margin-left: 0.75rem;
}

.c8 {
  list-style-type: none;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c8 label {
  font-weight: 400;
}

.c7 {
  display: inline-block;
  margin: 0;
  padding: 0;
  border: none;
  overflow: hidden;
  height: auto;
  -webkit-margin-start: 0;
  -webkit-margin-end: 0;
  -webkit-padding-before: 0;
  -webkit-padding-start: 0;
  -webkit-padding-end: 0;
  -webkit-padding-after: 0;
}

.c6 {
  padding-top: 0.25rem;
}

.c5 {
  padding-top: 0.25rem;
}

.c0 {
  overflow: hidden;
  border-spacing: 0;
  border-collapse: separate;
  table-layout: fixed;
  width: 100%;
  max-width: 100%;
}

.c1 {
  width: 100%;
  background: rgb(250,250,250);
}

.c1 th:first-child {
  border-top-left-radius: 0.25rem;
}

.c1 th:last-child {
  border-top-right-radius: 0.25rem;
}

.c20 {
  width: 100%;
}

.c20 tr:first-child td {
  border-top: none;
}

.c4 {
  border-width: 0.0625rem;
  border-style: solid;
  border-color: rgb(216,216,216);
  border-spacing: 0;
  white-space: nowrap;
  box-sizing: border-box;
  padding: 0 1.5rem;
  height: 3.75rem;
  width: 2rem;
  display: table-cell;
  vertical-align: middle;
  text-align: left;
  height: 2.625rem;
  color: rgb(189,189,189);
  font-weight: 500;
}

.c4:not(:first-child) {
  border-left-width: 0;
}

.c4:not(:last-child) {
  border-right-width: 0;
}

.c13 {
  border-width: 0.0625rem;
  border-style: solid;
  border-color: rgb(216,216,216);
  border-spacing: 0;
  white-space: nowrap;
  box-sizing: border-box;
  padding: 0 1.5rem;
  height: 3.75rem;
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  vertical-align: middle;
  text-align: left;
  height: 2.625rem;
  color: rgb(189,189,189);
  font-weight: 500;
}

.c13:not(:first-child) {
  border-left-width: 0;
}

.c13:not(:last-child) {
  border-right-width: 0;
}

.c14 {
  border-width: 0.0625rem;
  border-style: solid;
  border-color: rgb(216,216,216);
  border-spacing: 0;
  white-space: nowrap;
  box-sizing: border-box;
  padding: 0 1.5rem;
  height: 3.75rem;
  width: 9.375rem;
  display: table-cell;
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  vertical-align: middle;
  text-align: left;
  height: 2.625rem;
  color: rgb(189,189,189);
  font-weight: 500;
}

.c14:not(:first-child) {
  border-left-width: 0;
}

.c14:not(:last-child) {
  border-right-width: 0;
}

.c16 {
  border-width: 0.0625rem;
  border-style: solid;
  border-color: rgb(216,216,216);
  border-spacing: 0;
  white-space: nowrap;
  box-sizing: border-box;
  padding: 0 1.5rem;
  height: 3.75rem;
  width: 0rem;
  display: none;
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  vertical-align: middle;
  text-align: left;
  height: 2.625rem;
  color: rgb(189,189,189);
  font-weight: 500;
}

.c16:not(:first-child) {
  border-left-width: 0;
}

.c16:not(:last-child) {
  border-right-width: 0;
}

.c17 {
  border-width: 0.0625rem;
  border-style: solid;
  border-color: rgb(216,216,216);
  border-spacing: 0;
  white-space: nowrap;
  box-sizing: border-box;
  padding: 0 1.5rem;
  height: 3.75rem;
  width: 0rem;
  display: none;
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  vertical-align: middle;
  text-align: left;
  height: 2.625rem;
  color: rgb(189,189,189);
  font-weight: 500;
}

.c17:not(:first-child) {
  border-left-width: 0;
}

.c17:not(:last-child) {
  border-right-width: 0;
}

.c19 {
  border-width: 0.0625rem;
  border-style: solid;
  border-color: rgb(216,216,216);
  border-spacing: 0;
  white-space: nowrap;
  box-sizing: border-box;
  padding: 0 1.5rem;
  height: 3.75rem;
  width: 3.75rem;
  display: table-cell;
  height: 2.625rem;
  color: rgb(189,189,189);
  font-weight: 500;
}

.c19:not(:first-child) {
  border-left-width: 0;
}

.c19:not(:last-child) {
  border-right-width: 0;
}

.c2 {
  display: table-row;
  color: rgba(73,73,73,1);
  background-color: rgb(255,255,255);
  box-shadow: 0 0.125rem 0 rgba(0,0,0,0.05);
  box-sizing: border-box;
  color: rgba(73,73,73,1);
  background-color: transparent;
  border: none;
  box-shadow: none;
}

.c2:last-child {
  box-shadow: none;
}

.c2:last-child td {
  border-bottom-width: 0.0625rem;
}

.c3 {
  padding: 0rem;
  padding-left: 0.75rem;
}

.c18 {
  padding: 0rem;
}

@media only screen and (min-width:47.9375rem) {
  .c16 {
    width: 10rem;
    display: table-cell;
  }
}

@media only screen and (min-width:47.9375rem) {
  .c17 {
    width: 8.125rem;
    display: table-cell;
  }
}

<form>
  <table
    className="c0"
  >
    <thead
      className="c1"
      disabled={undefined}
      name="thdead"
      selected={undefined}
    >
      <tr
        className="c2"
        disabled={undefined}
        name="tr"
        selected={undefined}
      >
        <th
          className="c3 c4"
          disabled={undefined}
          name="th"
          selected={undefined}
        >
          <div
            className="c5 c6 c7"
            role="group"
            style={undefined}
          >
            <li
              className="c8"
            >
              <div
                checked={false}
                className="c9"
                disabled={false}
                id="bk"
                onChange={[Function]}
                type="checkbox"
              >
                <input
                  checked={false}
                  className="c10"
                  disabled={false}
                  id="bl"
                  onChange={[Function]}
                  type="checkbox"
                />
                <label
                  className="c11"
                  htmlFor="bl"
                />
              </div>
              <div
                className="c12"
              />
            </li>
          </div>
        </th>
        <th
          className="c13"
          disabled={undefined}
          name="th"
          onClick={[Function]}
          selected={undefined}
        >
          <span>
            Name 
          </span>
        </th>
        <th
          className="c14"
          disabled={undefined}
          name="th"
          onClick={[Function]}
          selected={undefined}
        >
          <span>
            Status 
          </span>
          <svg
            className="c15"
            height="6"
            marginBottom="0.125rem"
            marginLeft="0.5625rem"
            style={
              Object {
                "transform": "rotate(180deg)",
              }
            }
            viewBox="0 0 9 6"
            width="9"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M9 1.386L7.648 0 4.5 3.228 1.352 0 0 1.386 4.5 6z"
              fill="rgba(73, 73, 73, 1)"
              fillRule="evenodd"
            />
          </svg>
        </th>
        <th
          className="c16"
          disabled={undefined}
          name="th"
          onClick={[Function]}
          selected={undefined}
        >
          <span>
            Created 
          </span>
        </th>
        <th
          className="c17"
          disabled={undefined}
          name="th"
          onClick={[Function]}
          selected={undefined}
        >
          <span>
            Short ID 
          </span>
        </th>
        <th
          className="c18 c19"
          disabled={undefined}
          name="th"
          selected={undefined}
        />
      </tr>
    </thead>
    <tbody
      className="c20"
      disabled={undefined}
      name="tbody"
      selected={undefined}
    />
  </table>
</form>
`;

exports[`renders <InstanceList sortBy sortOrder /> without throwing 1`] = `
.c15 {
  margin-bottom: 0.125rem;
  margin-left: 0.5625rem;
}

.c10 {
  font-family: sans-serif;
  font-size: 100%;
  line-height: 1.15;
  margin: 0;
  overflow: visible;
  display: none;
}

.c10[type='checkbox'],
.c10[type='radio'] {
  box-sizing: border-box;
  padding: 0;
}

.c10[type='number']::-webkit-inner-spin-button,
.c10[type='number']::-webkit-outer-spin-button {
  height: auto;
}

.c10[type='search'] {
  -webkit-appearance: textfield;
  -moz-appearance: textfield;
  appearance: textfield;
  outline-offset: -0.125rem;
}

.c10[type='search']::-webkit-search-cancel-button,
.c10[type='search']::-webkit-search-decoration {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.c10::-webkit-file-upload-button {
  -webkit-appearance: button;
  -moz-appearance: button;
  appearance: button;
  font: inherit;
}

.c10:checked + label::after {
  opacity: 1;
}

.c10:selected + label::after {
  opacity: 1;
}

.c10:checked + label {
  border-color: rgb(59,70,204);
}

.c10:selected + label {
  border-color: rgb(59,70,204);
}

.c10:disabled + label {
  background-color: rgb(249,249,249);
}

.c11 {
  color: rgb(100,100,100);
  position: absolute;
  width: 1.125rem;
  height: 1.125rem;
  box-sizing: border-box;
  top: 0;
  right: 0;
  cursor: pointer;
  background-color: rgb(255,255,255);
  box-shadow: none;
  border: 0.0625rem solid rgb(216,216,216);
  cursor: pointer;
  border-radius: 0.25rem;
  width: 1.125rem;
  height: 1.125rem;
}

.c11::after {
  opacity: 0;
  content: '';
  position: absolute;
  width: 0.375rem;
  height: 0.125rem;
  background: transparent;
  top: 0.3125rem;
  left: 0.25rem;
  border: 0.125rem solid rgb(45,45,45);
  border-top: none;
  border-right: none;
  -webkit-transform: rotate(-45deg);
  -ms-transform: rotate(-45deg);
  transform: rotate(-45deg);
}

.c9 {
  display: inline-block;
  vertical-align: text-bottom;
  width: 1.125rem;
  height: 1.125rem;
  position: relative;
  cursor: pointer;
}

.c12 {
  margin-bottom: 0.75rem;
  margin-left: 0.75rem;
}

.c8 {
  list-style-type: none;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c8 label {
  font-weight: 400;
}

.c7 {
  display: inline-block;
  margin: 0;
  padding: 0;
  border: none;
  overflow: hidden;
  height: auto;
  -webkit-margin-start: 0;
  -webkit-margin-end: 0;
  -webkit-padding-before: 0;
  -webkit-padding-start: 0;
  -webkit-padding-end: 0;
  -webkit-padding-after: 0;
}

.c6 {
  padding-top: 0.25rem;
}

.c5 {
  padding-top: 0.25rem;
}

.c0 {
  overflow: hidden;
  border-spacing: 0;
  border-collapse: separate;
  table-layout: fixed;
  width: 100%;
  max-width: 100%;
}

.c1 {
  width: 100%;
  background: rgb(250,250,250);
}

.c1 th:first-child {
  border-top-left-radius: 0.25rem;
}

.c1 th:last-child {
  border-top-right-radius: 0.25rem;
}

.c20 {
  width: 100%;
}

.c20 tr:first-child td {
  border-top: none;
}

.c4 {
  border-width: 0.0625rem;
  border-style: solid;
  border-color: rgb(216,216,216);
  border-spacing: 0;
  white-space: nowrap;
  box-sizing: border-box;
  padding: 0 1.5rem;
  height: 3.75rem;
  width: 2rem;
  display: table-cell;
  vertical-align: middle;
  text-align: left;
  height: 2.625rem;
  color: rgb(189,189,189);
  font-weight: 500;
}

.c4:not(:first-child) {
  border-left-width: 0;
}

.c4:not(:last-child) {
  border-right-width: 0;
}

.c13 {
  border-width: 0.0625rem;
  border-style: solid;
  border-color: rgb(216,216,216);
  border-spacing: 0;
  white-space: nowrap;
  box-sizing: border-box;
  padding: 0 1.5rem;
  height: 3.75rem;
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  vertical-align: middle;
  text-align: left;
  height: 2.625rem;
  color: rgb(189,189,189);
  font-weight: 500;
}

.c13:not(:first-child) {
  border-left-width: 0;
}

.c13:not(:last-child) {
  border-right-width: 0;
}

.c14 {
  border-width: 0.0625rem;
  border-style: solid;
  border-color: rgb(216,216,216);
  border-spacing: 0;
  white-space: nowrap;
  box-sizing: border-box;
  padding: 0 1.5rem;
  height: 3.75rem;
  width: 9.375rem;
  display: table-cell;
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  vertical-align: middle;
  text-align: left;
  height: 2.625rem;
  color: rgb(189,189,189);
  font-weight: 500;
}

.c14:not(:first-child) {
  border-left-width: 0;
}

.c14:not(:last-child) {
  border-right-width: 0;
}

.c16 {
  border-width: 0.0625rem;
  border-style: solid;
  border-color: rgb(216,216,216);
  border-spacing: 0;
  white-space: nowrap;
  box-sizing: border-box;
  padding: 0 1.5rem;
  height: 3.75rem;
  width: 0rem;
  display: none;
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  vertical-align: middle;
  text-align: left;
  height: 2.625rem;
  color: rgb(189,189,189);
  font-weight: 500;
}

.c16:not(:first-child) {
  border-left-width: 0;
}

.c16:not(:last-child) {
  border-right-width: 0;
}

.c17 {
  border-width: 0.0625rem;
  border-style: solid;
  border-color: rgb(216,216,216);
  border-spacing: 0;
  white-space: nowrap;
  box-sizing: border-box;
  padding: 0 1.5rem;
  height: 3.75rem;
  width: 0rem;
  display: none;
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  vertical-align: middle;
  text-align: left;
  height: 2.625rem;
  color: rgb(189,189,189);
  font-weight: 500;
}

.c17:not(:first-child) {
  border-left-width: 0;
}

.c17:not(:last-child) {
  border-right-width: 0;
}

.c19 {
  border-width: 0.0625rem;
  border-style: solid;
  border-color: rgb(216,216,216);
  border-spacing: 0;
  white-space: nowrap;
  box-sizing: border-box;
  padding: 0 1.5rem;
  height: 3.75rem;
  width: 3.75rem;
  display: table-cell;
  height: 2.625rem;
  color: rgb(189,189,189);
  font-weight: 500;
}

.c19:not(:first-child) {
  border-left-width: 0;
}

.c19:not(:last-child) {
  border-right-width: 0;
}

.c2 {
  display: table-row;
  color: rgba(73,73,73,1);
  background-color: rgb(255,255,255);
  box-shadow: 0 0.125rem 0 rgba(0,0,0,0.05);
  box-sizing: border-box;
  color: rgba(73,73,73,1);
  background-color: transparent;
  border: none;
  box-shadow: none;
}

.c2:last-child {
  box-shadow: none;
}

.c2:last-child td {
  border-bottom-width: 0.0625rem;
}

.c3 {
  padding: 0rem;
  padding-left: 0.75rem;
}

.c18 {
  padding: 0rem;
}

@media only screen and (min-width:47.9375rem) {
  .c16 {
    width: 10rem;
    display: table-cell;
  }
}

@media only screen and (min-width:47.9375rem) {
  .c17 {
    width: 8.125rem;
    display: table-cell;
  }
}

<form>
  <table
    className="c0"
  >
    <thead
      className="c1"
      disabled={undefined}
      name="thdead"
      selected={undefined}
    >
      <tr
        className="c2"
        disabled={undefined}
        name="tr"
        selected={undefined}
      >
        <th
          className="c3 c4"
          disabled={undefined}
          name="th"
          selected={undefined}
        >
          <div
            className="c5 c6 c7"
            role="group"
            style={undefined}
          >
            <li
              className="c8"
            >
              <div
                checked={false}
                className="c9"
                disabled={false}
                id="bn"
                onChange={[Function]}
                type="checkbox"
              >
                <input
                  checked={false}
                  className="c10"
                  disabled={false}
                  id="bo"
                  onChange={[Function]}
                  type="checkbox"
                />
                <label
                  className="c11"
                  htmlFor="bo"
                />
              </div>
              <div
                className="c12"
              />
            </li>
          </div>
        </th>
        <th
          className="c13"
          disabled={undefined}
          name="th"
          onClick={[Function]}
          selected={undefined}
        >
          <span>
            Name 
          </span>
        </th>
        <th
          className="c14"
          disabled={undefined}
          name="th"
          onClick={[Function]}
          selected={undefined}
        >
          <span>
            Status 
          </span>
          <svg
            className="c15"
            height="6"
            marginBottom="0.125rem"
            marginLeft="0.5625rem"
            style={
              Object {
                "transform": "rotate(0deg)",
              }
            }
            viewBox="0 0 9 6"
            width="9"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M9 1.386L7.648 0 4.5 3.228 1.352 0 0 1.386 4.5 6z"
              fill="rgba(73, 73, 73, 1)"
              fillRule="evenodd"
            />
          </svg>
        </th>
        <th
          className="c16"
          disabled={undefined}
          name="th"
          onClick={[Function]}
          selected={undefined}
        >
          <span>
            Created 
          </span>
        </th>
        <th
          className="c17"
          disabled={undefined}
          name="th"
          onClick={[Function]}
          selected={undefined}
        >
          <span>
            Short ID 
          </span>
        </th>
        <th
          className="c18 c19"
          disabled={undefined}
          name="th"
          selected={undefined}
        />
      </tr>
    </thead>
    <tbody
      className="c20"
      disabled={undefined}
      name="tbody"
      selected={undefined}
    />
  </table>
</form>
`;

exports[`renders <InstanceList submitting /> without throwing 1`] = `
.c14 {
  margin-bottom: 0.125rem;
  margin-left: 0.5625rem;
}

.c10 {
  font-family: sans-serif;
  font-size: 100%;
  line-height: 1.15;
  margin: 0;
  overflow: visible;
  display: none;
}

.c10[type='checkbox'],
.c10[type='radio'] {
  box-sizing: border-box;
  padding: 0;
}

.c10[type='number']::-webkit-inner-spin-button,
.c10[type='number']::-webkit-outer-spin-button {
  height: auto;
}

.c10[type='search'] {
  -webkit-appearance: textfield;
  -moz-appearance: textfield;
  appearance: textfield;
  outline-offset: -0.125rem;
}

.c10[type='search']::-webkit-search-cancel-button,
.c10[type='search']::-webkit-search-decoration {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.c10::-webkit-file-upload-button {
  -webkit-appearance: button;
  -moz-appearance: button;
  appearance: button;
  font: inherit;
}

.c10:checked + label::after {
  opacity: 1;
}

.c10:selected + label::after {
  opacity: 1;
}

.c10:checked + label {
  border-color: rgb(59,70,204);
}

.c10:selected + label {
  border-color: rgb(59,70,204);
}

.c10:disabled + label {
  background-color: rgb(249,249,249);
}

.c11 {
  color: rgb(100,100,100);
  position: absolute;
  width: 1.125rem;
  height: 1.125rem;
  box-sizing: border-box;
  top: 0;
  right: 0;
  cursor: pointer;
  background-color: rgb(255,255,255);
  box-shadow: none;
  border: 0.0625rem solid rgb(216,216,216);
  cursor: pointer;
  border-radius: 0.25rem;
  width: 1.125rem;
  height: 1.125rem;
}

.c11::after {
  opacity: 0;
  content: '';
  position: absolute;
  width: 0.375rem;
  height: 0.125rem;
  background: transparent;
  top: 0.3125rem;
  left: 0.25rem;
  border: 0.125rem solid rgb(45,45,45);
  border-top: none;
  border-right: none;
  -webkit-transform: rotate(-45deg);
  -ms-transform: rotate(-45deg);
  transform: rotate(-45deg);
}

.c9 {
  display: inline-block;
  vertical-align: text-bottom;
  width: 1.125rem;
  height: 1.125rem;
  position: relative;
  cursor: pointer;
}

.c12 {
  margin-bottom: 0.75rem;
  margin-left: 0.75rem;
}

.c8 {
  list-style-type: none;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c8 label {
  font-weight: 400;
}

.c7 {
  display: inline-block;
  margin: 0;
  padding: 0;
  border: none;
  overflow: hidden;
  height: auto;
  -webkit-margin-start: 0;
  -webkit-margin-end: 0;
  -webkit-padding-before: 0;
  -webkit-padding-start: 0;
  -webkit-padding-end: 0;
  -webkit-padding-after: 0;
}

.c6 {
  padding-top: 0.25rem;
}

.c5 {
  padding-top: 0.25rem;
}

.c0 {
  overflow: hidden;
  border-spacing: 0;
  border-collapse: separate;
  table-layout: fixed;
  width: 100%;
  max-width: 100%;
}

.c1 {
  width: 100%;
  background: rgb(250,250,250);
}

.c1 th:first-child {
  border-top-left-radius: 0.25rem;
}

.c1 th:last-child {
  border-top-right-radius: 0.25rem;
}

.c20 {
  width: 100%;
}

.c20 tr:first-child td {
  border-top: none;
}

.c4 {
  border-width: 0.0625rem;
  border-style: solid;
  border-color: rgb(216,216,216);
  border-spacing: 0;
  white-space: nowrap;
  box-sizing: border-box;
  padding: 0 1.5rem;
  height: 3.75rem;
  width: 2rem;
  display: table-cell;
  vertical-align: middle;
  text-align: left;
  height: 2.625rem;
  color: rgb(189,189,189);
  font-weight: 500;
}

.c4:not(:first-child) {
  border-left-width: 0;
}

.c4:not(:last-child) {
  border-right-width: 0;
}

.c13 {
  border-width: 0.0625rem;
  border-style: solid;
  border-color: rgb(216,216,216);
  border-spacing: 0;
  white-space: nowrap;
  box-sizing: border-box;
  padding: 0 1.5rem;
  height: 3.75rem;
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  vertical-align: middle;
  text-align: left;
  height: 2.625rem;
  color: rgb(189,189,189);
  font-weight: 500;
}

.c13:not(:first-child) {
  border-left-width: 0;
}

.c13:not(:last-child) {
  border-right-width: 0;
}

.c15 {
  border-width: 0.0625rem;
  border-style: solid;
  border-color: rgb(216,216,216);
  border-spacing: 0;
  white-space: nowrap;
  box-sizing: border-box;
  padding: 0 1.5rem;
  height: 3.75rem;
  width: 9.375rem;
  display: table-cell;
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  vertical-align: middle;
  text-align: left;
  height: 2.625rem;
  color: rgb(189,189,189);
  font-weight: 500;
}

.c15:not(:first-child) {
  border-left-width: 0;
}

.c15:not(:last-child) {
  border-right-width: 0;
}

.c16 {
  border-width: 0.0625rem;
  border-style: solid;
  border-color: rgb(216,216,216);
  border-spacing: 0;
  white-space: nowrap;
  box-sizing: border-box;
  padding: 0 1.5rem;
  height: 3.75rem;
  width: 0rem;
  display: none;
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  vertical-align: middle;
  text-align: left;
  height: 2.625rem;
  color: rgb(189,189,189);
  font-weight: 500;
}

.c16:not(:first-child) {
  border-left-width: 0;
}

.c16:not(:last-child) {
  border-right-width: 0;
}

.c17 {
  border-width: 0.0625rem;
  border-style: solid;
  border-color: rgb(216,216,216);
  border-spacing: 0;
  white-space: nowrap;
  box-sizing: border-box;
  padding: 0 1.5rem;
  height: 3.75rem;
  width: 0rem;
  display: none;
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  vertical-align: middle;
  text-align: left;
  height: 2.625rem;
  color: rgb(189,189,189);
  font-weight: 500;
}

.c17:not(:first-child) {
  border-left-width: 0;
}

.c17:not(:last-child) {
  border-right-width: 0;
}

.c19 {
  border-width: 0.0625rem;
  border-style: solid;
  border-color: rgb(216,216,216);
  border-spacing: 0;
  white-space: nowrap;
  box-sizing: border-box;
  padding: 0 1.5rem;
  height: 3.75rem;
  width: 3.75rem;
  display: table-cell;
  height: 2.625rem;
  color: rgb(189,189,189);
  font-weight: 500;
}

.c19:not(:first-child) {
  border-left-width: 0;
}

.c19:not(:last-child) {
  border-right-width: 0;
}

.c2 {
  display: table-row;
  color: rgba(73,73,73,1);
  background-color: rgb(255,255,255);
  box-shadow: 0 0.125rem 0 rgba(0,0,0,0.05);
  box-sizing: border-box;
  color: rgba(73,73,73,1);
  background-color: transparent;
  border: none;
  box-shadow: none;
}

.c2:last-child {
  box-shadow: none;
}

.c2:last-child td {
  border-bottom-width: 0.0625rem;
}

.c3 {
  padding: 0rem;
  padding-left: 0.75rem;
}

.c18 {
  padding: 0rem;
}

@media only screen and (min-width:47.9375rem) {
  .c16 {
    width: 10rem;
    display: table-cell;
  }
}

@media only screen and (min-width:47.9375rem) {
  .c17 {
    width: 8.125rem;
    display: table-cell;
  }
}

<form>
  <table
    className="c0"
  >
    <thead
      className="c1"
      disabled={undefined}
      name="thdead"
      selected={undefined}
    >
      <tr
        className="c2"
        disabled={undefined}
        name="tr"
        selected={undefined}
      >
        <th
          className="c3 c4"
          disabled={undefined}
          name="th"
          selected={undefined}
        >
          <div
            className="c5 c6 c7"
            role="group"
            style={undefined}
          >
            <li
              className="c8"
            >
              <div
                checked={false}
                className="c9"
                disabled={true}
                id="bq"
                onChange={[Function]}
                type="checkbox"
              >
                <input
                  checked={false}
                  className="c10"
                  disabled={true}
                  id="br"
                  onChange={[Function]}
                  type="checkbox"
                />
                <label
                  className="c11"
                  htmlFor="br"
                />
              </div>
              <div
                className="c12"
              />
            </li>
          </div>
        </th>
        <th
          className="c13"
          disabled={undefined}
          name="th"
          onClick={[Function]}
          selected={undefined}
        >
          <span>
            Name 
          </span>
          <svg
            className="c14"
            height="6"
            marginBottom="0.125rem"
            marginLeft="0.5625rem"
            style={
              Object {
                "transform": "rotate(180deg)",
              }
            }
            viewBox="0 0 9 6"
            width="9"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M9 1.386L7.648 0 4.5 3.228 1.352 0 0 1.386 4.5 6z"
              fill="rgba(73, 73, 73, 1)"
              fillRule="evenodd"
            />
          </svg>
        </th>
        <th
          className="c15"
          disabled={undefined}
          name="th"
          onClick={[Function]}
          selected={undefined}
        >
          <span>
            Status 
          </span>
        </th>
        <th
          className="c16"
          disabled={undefined}
          name="th"
          onClick={[Function]}
          selected={undefined}
        >
          <span>
            Created 
          </span>
        </th>
        <th
          className="c17"
          disabled={undefined}
          name="th"
          onClick={[Function]}
          selected={undefined}
        >
          <span>
            Short ID 
          </span>
        </th>
        <th
          className="c18 c19"
          disabled={undefined}
          name="th"
          selected={undefined}
        />
      </tr>
    </thead>
    <tbody
      className="c20"
      disabled={undefined}
      name="tbody"
      selected={undefined}
    />
  </table>
</form>
`;

exports[`renders <InstanceList>{children}</InstanceList> without throwing 1`] = `
.c14 {
  margin-bottom: 0.125rem;
  margin-left: 0.5625rem;
}

.c10 {
  font-family: sans-serif;
  font-size: 100%;
  line-height: 1.15;
  margin: 0;
  overflow: visible;
  display: none;
}

.c10[type='checkbox'],
.c10[type='radio'] {
  box-sizing: border-box;
  padding: 0;
}

.c10[type='number']::-webkit-inner-spin-button,
.c10[type='number']::-webkit-outer-spin-button {
  height: auto;
}

.c10[type='search'] {
  -webkit-appearance: textfield;
  -moz-appearance: textfield;
  appearance: textfield;
  outline-offset: -0.125rem;
}

.c10[type='search']::-webkit-search-cancel-button,
.c10[type='search']::-webkit-search-decoration {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.c10::-webkit-file-upload-button {
  -webkit-appearance: button;
  -moz-appearance: button;
  appearance: button;
  font: inherit;
}

.c10:checked + label::after {
  opacity: 1;
}

.c10:selected + label::after {
  opacity: 1;
}

.c10:checked + label {
  border-color: rgb(59,70,204);
}

.c10:selected + label {
  border-color: rgb(59,70,204);
}

.c10:disabled + label {
  background-color: rgb(249,249,249);
}

.c11 {
  color: rgb(100,100,100);
  position: absolute;
  width: 1.125rem;
  height: 1.125rem;
  box-sizing: border-box;
  top: 0;
  right: 0;
  cursor: pointer;
  background-color: rgb(255,255,255);
  box-shadow: none;
  border: 0.0625rem solid rgb(216,216,216);
  cursor: pointer;
  border-radius: 0.25rem;
  width: 1.125rem;
  height: 1.125rem;
}

.c11::after {
  opacity: 0;
  content: '';
  position: absolute;
  width: 0.375rem;
  height: 0.125rem;
  background: transparent;
  top: 0.3125rem;
  left: 0.25rem;
  border: 0.125rem solid rgb(45,45,45);
  border-top: none;
  border-right: none;
  -webkit-transform: rotate(-45deg);
  -ms-transform: rotate(-45deg);
  transform: rotate(-45deg);
}

.c9 {
  display: inline-block;
  vertical-align: text-bottom;
  width: 1.125rem;
  height: 1.125rem;
  position: relative;
  cursor: pointer;
}

.c12 {
  margin-bottom: 0.75rem;
  margin-left: 0.75rem;
}

.c8 {
  list-style-type: none;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c8 label {
  font-weight: 400;
}

.c7 {
  display: inline-block;
  margin: 0;
  padding: 0;
  border: none;
  overflow: hidden;
  height: auto;
  -webkit-margin-start: 0;
  -webkit-margin-end: 0;
  -webkit-padding-before: 0;
  -webkit-padding-start: 0;
  -webkit-padding-end: 0;
  -webkit-padding-after: 0;
}

.c6 {
  padding-top: 0.25rem;
}

.c5 {
  padding-top: 0.25rem;
}

.c0 {
  overflow: hidden;
  border-spacing: 0;
  border-collapse: separate;
  table-layout: fixed;
  width: 100%;
  max-width: 100%;
}

.c1 {
  width: 100%;
  background: rgb(250,250,250);
}

.c1 th:first-child {
  border-top-left-radius: 0.25rem;
}

.c1 th:last-child {
  border-top-right-radius: 0.25rem;
}

.c20 {
  width: 100%;
}

.c20 tr:first-child td {
  border-top: none;
}

.c4 {
  border-width: 0.0625rem;
  border-style: solid;
  border-color: rgb(216,216,216);
  border-spacing: 0;
  white-space: nowrap;
  box-sizing: border-box;
  padding: 0 1.5rem;
  height: 3.75rem;
  width: 2rem;
  display: table-cell;
  vertical-align: middle;
  text-align: left;
  height: 2.625rem;
  color: rgb(189,189,189);
  font-weight: 500;
}

.c4:not(:first-child) {
  border-left-width: 0;
}

.c4:not(:last-child) {
  border-right-width: 0;
}

.c13 {
  border-width: 0.0625rem;
  border-style: solid;
  border-color: rgb(216,216,216);
  border-spacing: 0;
  white-space: nowrap;
  box-sizing: border-box;
  padding: 0 1.5rem;
  height: 3.75rem;
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  vertical-align: middle;
  text-align: left;
  height: 2.625rem;
  color: rgb(189,189,189);
  font-weight: 500;
}

.c13:not(:first-child) {
  border-left-width: 0;
}

.c13:not(:last-child) {
  border-right-width: 0;
}

.c15 {
  border-width: 0.0625rem;
  border-style: solid;
  border-color: rgb(216,216,216);
  border-spacing: 0;
  white-space: nowrap;
  box-sizing: border-box;
  padding: 0 1.5rem;
  height: 3.75rem;
  width: 9.375rem;
  display: table-cell;
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  vertical-align: middle;
  text-align: left;
  height: 2.625rem;
  color: rgb(189,189,189);
  font-weight: 500;
}

.c15:not(:first-child) {
  border-left-width: 0;
}

.c15:not(:last-child) {
  border-right-width: 0;
}

.c16 {
  border-width: 0.0625rem;
  border-style: solid;
  border-color: rgb(216,216,216);
  border-spacing: 0;
  white-space: nowrap;
  box-sizing: border-box;
  padding: 0 1.5rem;
  height: 3.75rem;
  width: 0rem;
  display: none;
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  vertical-align: middle;
  text-align: left;
  height: 2.625rem;
  color: rgb(189,189,189);
  font-weight: 500;
}

.c16:not(:first-child) {
  border-left-width: 0;
}

.c16:not(:last-child) {
  border-right-width: 0;
}

.c17 {
  border-width: 0.0625rem;
  border-style: solid;
  border-color: rgb(216,216,216);
  border-spacing: 0;
  white-space: nowrap;
  box-sizing: border-box;
  padding: 0 1.5rem;
  height: 3.75rem;
  width: 0rem;
  display: none;
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  vertical-align: middle;
  text-align: left;
  height: 2.625rem;
  color: rgb(189,189,189);
  font-weight: 500;
}

.c17:not(:first-child) {
  border-left-width: 0;
}

.c17:not(:last-child) {
  border-right-width: 0;
}

.c19 {
  border-width: 0.0625rem;
  border-style: solid;
  border-color: rgb(216,216,216);
  border-spacing: 0;
  white-space: nowrap;
  box-sizing: border-box;
  padding: 0 1.5rem;
  height: 3.75rem;
  width: 3.75rem;
  display: table-cell;
  height: 2.625rem;
  color: rgb(189,189,189);
  font-weight: 500;
}

.c19:not(:first-child) {
  border-left-width: 0;
}

.c19:not(:last-child) {
  border-right-width: 0;
}

.c2 {
  display: table-row;
  color: rgba(73,73,73,1);
  background-color: rgb(255,255,255);
  box-shadow: 0 0.125rem 0 rgba(0,0,0,0.05);
  box-sizing: border-box;
  color: rgba(73,73,73,1);
  background-color: transparent;
  border: none;
  box-shadow: none;
}

.c2:last-child {
  box-shadow: none;
}

.c2:last-child td {
  border-bottom-width: 0.0625rem;
}

.c3 {
  padding: 0rem;
  padding-left: 0.75rem;
}

.c18 {
  padding: 0rem;
}

@media only screen and (min-width:47.9375rem) {
  .c16 {
    width: 10rem;
    display: table-cell;
  }
}

@media only screen and (min-width:47.9375rem) {
  .c17 {
    width: 8.125rem;
    display: table-cell;
  }
}

<form>
  <table
    className="c0"
  >
    <thead
      className="c1"
      disabled={undefined}
      name="thdead"
      selected={undefined}
    >
      <tr
        className="c2"
        disabled={undefined}
        name="tr"
        selected={undefined}
      >
        <th
          className="c3 c4"
          disabled={undefined}
          name="th"
          selected={undefined}
        >
          <div
            className="c5 c6 c7"
            role="group"
            style={undefined}
          >
            <li
              className="c8"
            >
              <div
                checked={false}
                className="c9"
                disabled={false}
                id="bw"
                onChange={[Function]}
                type="checkbox"
              >
                <input
                  checked={false}
                  className="c10"
                  disabled={false}
                  id="bx"
                  onChange={[Function]}
                  type="checkbox"
                />
                <label
                  className="c11"
                  htmlFor="bx"
                />
              </div>
              <div
                className="c12"
              />
            </li>
          </div>
        </th>
        <th
          className="c13"
          disabled={undefined}
          name="th"
          onClick={[Function]}
          selected={undefined}
        >
          <span>
            Name 
          </span>
          <svg
            className="c14"
            height="6"
            marginBottom="0.125rem"
            marginLeft="0.5625rem"
            style={
              Object {
                "transform": "rotate(180deg)",
              }
            }
            viewBox="0 0 9 6"
            width="9"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M9 1.386L7.648 0 4.5 3.228 1.352 0 0 1.386 4.5 6z"
              fill="rgba(73, 73, 73, 1)"
              fillRule="evenodd"
            />
          </svg>
        </th>
        <th
          className="c15"
          disabled={undefined}
          name="th"
          onClick={[Function]}
          selected={undefined}
        >
          <span>
            Status 
          </span>
        </th>
        <th
          className="c16"
          disabled={undefined}
          name="th"
          onClick={[Function]}
          selected={undefined}
        >
          <span>
            Created 
          </span>
        </th>
        <th
          className="c17"
          disabled={undefined}
          name="th"
          onClick={[Function]}
          selected={undefined}
        >
          <span>
            Short ID 
          </span>
        </th>
        <th
          className="c18 c19"
          disabled={undefined}
          name="th"
          selected={undefined}
        />
      </tr>
    </thead>
    <tbody
      className="c20"
      disabled={undefined}
      name="tbody"
      selected={undefined}
    >
      <span>
        children
      </span>
    </tbody>
  </table>
</form>
`;

exports[`renders <Item /> without throwing 1`] = `
.c14 {
  background-color: transparent;
  text-decoration-skip: objects;
}

.c13 {
  color: rgb(59,70,204);
  -webkit-text-fill-color: currentcolor;
}

.c13:hover {
  text-decoration: none;
}

.c15 {
  width: 0.375rem;
  height: 0.375rem;
  border-radius: 0.1875rem;
  background-color: rgb(0,152,88);
  display: inline-block;
  height: 0.6875rem;
  width: 0.6875rem;
  border-radius: 0.6875rem;
}

.c10 {
  font-family: sans-serif;
  font-size: 100%;
  line-height: 1.15;
  margin: 0;
  overflow: visible;
  display: none;
}

.c10[type='checkbox'],
.c10[type='radio'] {
  box-sizing: border-box;
  padding: 0;
}

.c10[type='number']::-webkit-inner-spin-button,
.c10[type='number']::-webkit-outer-spin-button {
  height: auto;
}

.c10[type='search'] {
  -webkit-appearance: textfield;
  -moz-appearance: textfield;
  appearance: textfield;
  outline-offset: -0.125rem;
}

.c10[type='search']::-webkit-search-cancel-button,
.c10[type='search']::-webkit-search-decoration {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.c10::-webkit-file-upload-button {
  -webkit-appearance: button;
  -moz-appearance: button;
  appearance: button;
  font: inherit;
}

.c10:checked + label::after {
  opacity: 1;
}

.c10:selected + label::after {
  opacity: 1;
}

.c10:checked + label {
  border-color: rgb(59,70,204);
}

.c10:selected + label {
  border-color: rgb(59,70,204);
}

.c10:disabled + label {
  background-color: rgb(249,249,249);
}

.c11 {
  color: rgb(100,100,100);
  position: absolute;
  width: 1.125rem;
  height: 1.125rem;
  box-sizing: border-box;
  top: 0;
  right: 0;
  cursor: pointer;
  background-color: rgb(255,255,255);
  box-shadow: none;
  border: 0.0625rem solid rgb(216,216,216);
  cursor: pointer;
  border-radius: 0.25rem;
  width: 1.125rem;
  height: 1.125rem;
}

.c11::after {
  opacity: 0;
  content: '';
  position: absolute;
  width: 0.375rem;
  height: 0.125rem;
  background: transparent;
  top: 0.3125rem;
  left: 0.25rem;
  border: 0.125rem solid rgb(45,45,45);
  border-top: none;
  border-right: none;
  -webkit-transform: rotate(-45deg);
  -ms-transform: rotate(-45deg);
  transform: rotate(-45deg);
}

.c9 {
  display: inline-block;
  vertical-align: text-bottom;
  width: 1.125rem;
  height: 1.125rem;
  position: relative;
  cursor: pointer;
}

.c12 {
  margin-bottom: 0.75rem;
  margin-left: 0.75rem;
}

.c8 {
  list-style-type: none;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c8 label {
  font-weight: 400;
}

.c7 {
  display: inline-block;
  margin: 0;
  padding: 0;
  border: none;
  overflow: hidden;
  height: auto;
  -webkit-margin-start: 0;
  -webkit-margin-end: 0;
  -webkit-padding-before: 0;
  -webkit-padding-start: 0;
  -webkit-padding-end: 0;
  -webkit-padding-after: 0;
}

.c6 {
  padding-top: 0.25rem;
}

.c5 {
  padding-top: 0.25rem;
}

.c20 {
  cursor: pointer;
  height: 100%;
  width: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c0 {
  overflow: hidden;
  border-spacing: 0;
  border-collapse: separate;
  table-layout: fixed;
  width: 100%;
  max-width: 100%;
}

.c1 {
  width: 100%;
}

.c1 tr:first-child td {
  border-top: none;
}

.c4 {
  border-width: 0.0625rem;
  border-style: solid;
  border-color: rgb(216,216,216);
  border-spacing: 0;
  white-space: nowrap;
  box-sizing: border-box;
  padding: 0 1.5rem;
  height: 3.75rem;
  vertical-align: middle;
  text-align: left;
  border-bottom-width: 0;
}

.c4:not(:first-child) {
  border-left-width: 0;
}

.c4:not(:last-child) {
  border-right-width: 0;
}

.c16 {
  border-width: 0.0625rem;
  border-style: solid;
  border-color: rgb(216,216,216);
  border-spacing: 0;
  white-space: nowrap;
  box-sizing: border-box;
  padding: 0 1.5rem;
  height: 3.75rem;
  width: 0rem;
  display: none;
  vertical-align: middle;
  text-align: left;
  border-bottom-width: 0;
}

.c16:not(:first-child) {
  border-left-width: 0;
}

.c16:not(:last-child) {
  border-right-width: 0;
}

.c17 {
  border-width: 0.0625rem;
  border-style: solid;
  border-color: rgb(216,216,216);
  border-spacing: 0;
  white-space: nowrap;
  box-sizing: border-box;
  padding: 0 1.5rem;
  height: 3.75rem;
  width: 0rem;
  display: none;
  vertical-align: middle;
  text-align: left;
  border-bottom-width: 0;
}

.c17:not(:first-child) {
  border-left-width: 0;
}

.c17:not(:last-child) {
  border-right-width: 0;
}

.c19 {
  border-width: 0.0625rem;
  border-style: solid;
  border-color: rgb(216,216,216);
  border-spacing: 0;
  white-space: nowrap;
  box-sizing: border-box;
  padding: 0 1.5rem;
  height: 3.75rem;
  border-bottom-width: 0;
  border-left-width: 0.0625rem !important;
}

.c19:not(:first-child) {
  border-left-width: 0;
}

.c19:not(:last-child) {
  border-right-width: 0;
}

.c2 {
  display: table-row;
  color: rgba(73,73,73,1);
  background-color: rgb(255,255,255);
  box-shadow: 0 0.125rem 0 rgba(0,0,0,0.05);
  box-sizing: border-box;
}

.c2:last-child {
  box-shadow: none;
}

.c2:last-child td {
  border-bottom-width: 0.0625rem;
}

.c3 {
  padding: 0rem;
  padding-left: 0.75rem;
}

.c18 {
  padding: 0rem;
}

@media only screen and (min-width:47.9375rem) {
  .c16 {
    width: 10rem;
    display: table-cell;
  }
}

@media only screen and (min-width:47.9375rem) {
  .c17 {
    width: 8.125rem;
    display: table-cell;
  }
}

<table
  className="c0"
>
  <tbody
    className="c1"
    disabled={undefined}
    name="tbody"
    selected={undefined}
  >
    <tr
      className="c2"
      disabled={undefined}
      name="tr"
      selected={undefined}
    >
      <td
        className="c3 c4"
        disabled={undefined}
        name="td"
        selected={undefined}
      >
        <div
          className="c5 c6 c7"
          name=""
          role="group"
          style={undefined}
        >
          <li
            className="c8"
          >
            <div
              checked={false}
              className="c9"
              disabled={false}
              id="Y"
              type="checkbox"
            >
              <input
                checked={false}
                className="c10"
                disabled={false}
                id="Z"
                type="checkbox"
              />
              <label
                className="c11"
                htmlFor="Z"
              />
            </div>
            <div
              className="c12"
            />
          </li>
        </div>
      </td>
      <td
        className="c4"
        disabled={undefined}
        name="td"
        selected={undefined}
      >
        <a
          className="c13 c14"
          to="/instances/undefined"
        />
      </td>
      <td
        className="c4"
        disabled={undefined}
        name="td"
        selected={undefined}
      >
        <span>
          <span
            className="c15"
            color="green"
            height="0.6875rem"
            width="0.6875rem"
          />
           
          Running
        </span>
      </td>
      <td
        className="c16"
        disabled={undefined}
        name="td"
        selected={undefined}
      >
        almost NaN years
      </td>
      <td
        className="c17"
        disabled={undefined}
        name="td"
        selected={undefined}
      >
        <code>
          
        </code>
      </td>
      <td
        className="c18 c19"
        disabled={undefined}
        name="td"
        selected={undefined}
      >
        <div
          box={true}
          className="c20"
          onClick={[Function]}
          onMouseEnter={undefined}
          onMouseLeave={undefined}
          tag="div"
        >
          <svg
            className=""
            height="16"
            style={
              Object {
                "transform": "rotate(0deg)",
              }
            }
            viewBox="0 0 4 16"
            width="4"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M2 4a2 2 0 1 0 0-4 2 2 0 0 0 0 4z"
              fill="rgba(73, 73, 73, 1)"
              fill-rule="evenodd"
            />
            <path
              d="M2 4a2 2 0 1 0 0-4 2 2 0 0 0 0 4z"
              fill="rgba(73, 73, 73, 1)"
              fill-rule="evenodd"
              style={
                Object {
                  "transform": "translateY(0.375rem)",
                }
              }
            />
            <path
              d="M2 4a2 2 0 1 0 0-4 2 2 0 0 0 0 4z"
              fill="rgba(73, 73, 73, 1)"
              fill-rule="evenodd"
              style={
                Object {
                  "transform": "translateY(0.75rem)",
                }
              }
            />
          </svg>
        </div>
      </td>
    </tr>
  </tbody>
</table>
`;

exports[`renders <Item {...item} /> without throwing 1`] = `
.c14 {
  background-color: transparent;
  text-decoration-skip: objects;
}

.c13 {
  color: rgb(59,70,204);
  -webkit-text-fill-color: currentcolor;
}

.c13:hover {
  text-decoration: none;
}

.c15 {
  width: 0.375rem;
  height: 0.375rem;
  border-radius: 0.1875rem;
  background-color: rgb(59,70,204);
  display: inline-block;
  height: 0.6875rem;
  width: 0.6875rem;
  border-radius: 0.6875rem;
}

.c10 {
  font-family: sans-serif;
  font-size: 100%;
  line-height: 1.15;
  margin: 0;
  overflow: visible;
  display: none;
}

.c10[type='checkbox'],
.c10[type='radio'] {
  box-sizing: border-box;
  padding: 0;
}

.c10[type='number']::-webkit-inner-spin-button,
.c10[type='number']::-webkit-outer-spin-button {
  height: auto;
}

.c10[type='search'] {
  -webkit-appearance: textfield;
  -moz-appearance: textfield;
  appearance: textfield;
  outline-offset: -0.125rem;
}

.c10[type='search']::-webkit-search-cancel-button,
.c10[type='search']::-webkit-search-decoration {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.c10::-webkit-file-upload-button {
  -webkit-appearance: button;
  -moz-appearance: button;
  appearance: button;
  font: inherit;
}

.c10:checked + label::after {
  opacity: 1;
}

.c10:selected + label::after {
  opacity: 1;
}

.c10:checked + label {
  border-color: rgb(59,70,204);
}

.c10:selected + label {
  border-color: rgb(59,70,204);
}

.c10:disabled + label {
  background-color: rgb(249,249,249);
}

.c11 {
  color: rgb(100,100,100);
  position: absolute;
  width: 1.125rem;
  height: 1.125rem;
  box-sizing: border-box;
  top: 0;
  right: 0;
  cursor: pointer;
  background-color: rgb(255,255,255);
  box-shadow: none;
  border: 0.0625rem solid rgb(216,216,216);
  cursor: pointer;
  border-radius: 0.25rem;
  width: 1.125rem;
  height: 1.125rem;
}

.c11::after {
  opacity: 0;
  content: '';
  position: absolute;
  width: 0.375rem;
  height: 0.125rem;
  background: transparent;
  top: 0.3125rem;
  left: 0.25rem;
  border: 0.125rem solid rgb(45,45,45);
  border-top: none;
  border-right: none;
  -webkit-transform: rotate(-45deg);
  -ms-transform: rotate(-45deg);
  transform: rotate(-45deg);
}

.c9 {
  display: inline-block;
  vertical-align: text-bottom;
  width: 1.125rem;
  height: 1.125rem;
  position: relative;
  cursor: pointer;
}

.c12 {
  margin-bottom: 0.75rem;
  margin-left: 0.75rem;
}

.c8 {
  list-style-type: none;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c8 label {
  font-weight: 400;
}

.c7 {
  display: inline-block;
  margin: 0;
  padding: 0;
  border: none;
  overflow: hidden;
  height: auto;
  -webkit-margin-start: 0;
  -webkit-margin-end: 0;
  -webkit-padding-before: 0;
  -webkit-padding-start: 0;
  -webkit-padding-end: 0;
  -webkit-padding-after: 0;
}

.c6 {
  padding-top: 0.25rem;
}

.c5 {
  padding-top: 0.25rem;
}

.c20 {
  cursor: pointer;
  height: 100%;
  width: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c0 {
  overflow: hidden;
  border-spacing: 0;
  border-collapse: separate;
  table-layout: fixed;
  width: 100%;
  max-width: 100%;
}

.c1 {
  width: 100%;
}

.c1 tr:first-child td {
  border-top: none;
}

.c4 {
  border-width: 0.0625rem;
  border-style: solid;
  border-color: rgb(216,216,216);
  border-spacing: 0;
  white-space: nowrap;
  box-sizing: border-box;
  padding: 0 1.5rem;
  height: 3.75rem;
  vertical-align: middle;
  text-align: left;
  border-bottom-width: 0;
}

.c4:not(:first-child) {
  border-left-width: 0;
}

.c4:not(:last-child) {
  border-right-width: 0;
}

.c16 {
  border-width: 0.0625rem;
  border-style: solid;
  border-color: rgb(216,216,216);
  border-spacing: 0;
  white-space: nowrap;
  box-sizing: border-box;
  padding: 0 1.5rem;
  height: 3.75rem;
  width: 0rem;
  display: none;
  vertical-align: middle;
  text-align: left;
  border-bottom-width: 0;
}

.c16:not(:first-child) {
  border-left-width: 0;
}

.c16:not(:last-child) {
  border-right-width: 0;
}

.c17 {
  border-width: 0.0625rem;
  border-style: solid;
  border-color: rgb(216,216,216);
  border-spacing: 0;
  white-space: nowrap;
  box-sizing: border-box;
  padding: 0 1.5rem;
  height: 3.75rem;
  width: 0rem;
  display: none;
  vertical-align: middle;
  text-align: left;
  border-bottom-width: 0;
}

.c17:not(:first-child) {
  border-left-width: 0;
}

.c17:not(:last-child) {
  border-right-width: 0;
}

.c19 {
  border-width: 0.0625rem;
  border-style: solid;
  border-color: rgb(216,216,216);
  border-spacing: 0;
  white-space: nowrap;
  box-sizing: border-box;
  padding: 0 1.5rem;
  height: 3.75rem;
  border-bottom-width: 0;
  border-left-width: 0.0625rem !important;
}

.c19:not(:first-child) {
  border-left-width: 0;
}

.c19:not(:last-child) {
  border-right-width: 0;
}

.c2 {
  display: table-row;
  color: rgba(73,73,73,1);
  background-color: rgb(255,255,255);
  box-shadow: 0 0.125rem 0 rgba(0,0,0,0.05);
  box-sizing: border-box;
}

.c2:last-child {
  box-shadow: none;
}

.c2:last-child td {
  border-bottom-width: 0.0625rem;
}

.c3 {
  padding: 0rem;
  padding-left: 0.75rem;
}

.c18 {
  padding: 0rem;
}

@media only screen and (min-width:47.9375rem) {
  .c16 {
    width: 10rem;
    display: table-cell;
  }
}

@media only screen and (min-width:47.9375rem) {
  .c17 {
    width: 8.125rem;
    display: table-cell;
  }
}

<table
  className="c0"
>
  <tbody
    className="c1"
    disabled={undefined}
    name="tbody"
    selected={undefined}
  >
    <tr
      className="c2"
      disabled={undefined}
      name="tr"
      selected={undefined}
    >
      <td
        className="c3 c4"
        disabled={undefined}
        name="td"
        selected={undefined}
      >
        <div
          className="c5 c6 c7"
          name="id"
          role="group"
          style={undefined}
        >
          <li
            className="c8"
          >
            <div
              checked={false}
              className="c9"
              disabled={false}
              id="be"
              type="checkbox"
            >
              <input
                checked={false}
                className="c10"
                disabled={false}
                id="bf"
                type="checkbox"
              />
              <label
                className="c11"
                htmlFor="bf"
              />
            </div>
            <div
              className="c12"
            />
          </li>
        </div>
      </td>
      <td
        className="c4"
        disabled={undefined}
        name="td"
        selected={undefined}
      >
        <a
          className="c13 c14"
          to="/instances/name"
        >
          name
        </a>
      </td>
      <td
        className="c4"
        disabled={undefined}
        name="td"
        selected={undefined}
      >
        <span>
          <span
            className="c15"
            color="primary"
            height="0.6875rem"
            width="0.6875rem"
          />
           
          Provisioning
        </span>
      </td>
      <td
        className="c16"
        disabled={undefined}
        name="td"
        selected={undefined}
      >
        almost NaN years
      </td>
      <td
        className="c17"
        disabled={undefined}
        name="td"
        selected={undefined}
      >
        <code>
          id
        </code>
      </td>
      <td
        className="c18 c19"
        disabled={undefined}
        name="td"
        selected={undefined}
      >
        <div
          box={true}
          className="c20"
          onClick={[Function]}
          onMouseEnter={undefined}
          onMouseLeave={undefined}
          tag="div"
        >
          <svg
            className=""
            height="16"
            style={
              Object {
                "transform": "rotate(0deg)",
              }
            }
            viewBox="0 0 4 16"
            width="4"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M2 4a2 2 0 1 0 0-4 2 2 0 0 0 0 4z"
              fill="rgba(73, 73, 73, 1)"
              fill-rule="evenodd"
            />
            <path
              d="M2 4a2 2 0 1 0 0-4 2 2 0 0 0 0 4z"
              fill="rgba(73, 73, 73, 1)"
              fill-rule="evenodd"
              style={
                Object {
                  "transform": "translateY(0.375rem)",
                }
              }
            />
            <path
              d="M2 4a2 2 0 1 0 0-4 2 2 0 0 0 0 4z"
              fill="rgba(73, 73, 73, 1)"
              fill-rule="evenodd"
              style={
                Object {
                  "transform": "translateY(0.75rem)",
                }
              }
            />
          </svg>
        </div>
      </td>
    </tr>
  </tbody>
</table>
`;

exports[`renders <Item allowedActions /> without throwing 1`] = `
.c14 {
  background-color: transparent;
  text-decoration-skip: objects;
}

.c13 {
  color: rgb(59,70,204);
  -webkit-text-fill-color: currentcolor;
}

.c13:hover {
  text-decoration: none;
}

.c15 {
  width: 0.375rem;
  height: 0.375rem;
  border-radius: 0.1875rem;
  background-color: rgb(0,152,88);
  display: inline-block;
  height: 0.6875rem;
  width: 0.6875rem;
  border-radius: 0.6875rem;
}

.c10 {
  font-family: sans-serif;
  font-size: 100%;
  line-height: 1.15;
  margin: 0;
  overflow: visible;
  display: none;
}

.c10[type='checkbox'],
.c10[type='radio'] {
  box-sizing: border-box;
  padding: 0;
}

.c10[type='number']::-webkit-inner-spin-button,
.c10[type='number']::-webkit-outer-spin-button {
  height: auto;
}

.c10[type='search'] {
  -webkit-appearance: textfield;
  -moz-appearance: textfield;
  appearance: textfield;
  outline-offset: -0.125rem;
}

.c10[type='search']::-webkit-search-cancel-button,
.c10[type='search']::-webkit-search-decoration {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.c10::-webkit-file-upload-button {
  -webkit-appearance: button;
  -moz-appearance: button;
  appearance: button;
  font: inherit;
}

.c10:checked + label::after {
  opacity: 1;
}

.c10:selected + label::after {
  opacity: 1;
}

.c10:checked + label {
  border-color: rgb(59,70,204);
}

.c10:selected + label {
  border-color: rgb(59,70,204);
}

.c10:disabled + label {
  background-color: rgb(249,249,249);
}

.c11 {
  color: rgb(100,100,100);
  position: absolute;
  width: 1.125rem;
  height: 1.125rem;
  box-sizing: border-box;
  top: 0;
  right: 0;
  cursor: pointer;
  background-color: rgb(255,255,255);
  box-shadow: none;
  border: 0.0625rem solid rgb(216,216,216);
  cursor: pointer;
  border-radius: 0.25rem;
  width: 1.125rem;
  height: 1.125rem;
}

.c11::after {
  opacity: 0;
  content: '';
  position: absolute;
  width: 0.375rem;
  height: 0.125rem;
  background: transparent;
  top: 0.3125rem;
  left: 0.25rem;
  border: 0.125rem solid rgb(45,45,45);
  border-top: none;
  border-right: none;
  -webkit-transform: rotate(-45deg);
  -ms-transform: rotate(-45deg);
  transform: rotate(-45deg);
}

.c9 {
  display: inline-block;
  vertical-align: text-bottom;
  width: 1.125rem;
  height: 1.125rem;
  position: relative;
  cursor: pointer;
}

.c12 {
  margin-bottom: 0.75rem;
  margin-left: 0.75rem;
}

.c8 {
  list-style-type: none;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c8 label {
  font-weight: 400;
}

.c7 {
  display: inline-block;
  margin: 0;
  padding: 0;
  border: none;
  overflow: hidden;
  height: auto;
  -webkit-margin-start: 0;
  -webkit-margin-end: 0;
  -webkit-padding-before: 0;
  -webkit-padding-start: 0;
  -webkit-padding-end: 0;
  -webkit-padding-after: 0;
}

.c6 {
  padding-top: 0.25rem;
}

.c5 {
  padding-top: 0.25rem;
}

.c20 {
  cursor: pointer;
  height: 100%;
  width: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c0 {
  overflow: hidden;
  border-spacing: 0;
  border-collapse: separate;
  table-layout: fixed;
  width: 100%;
  max-width: 100%;
}

.c1 {
  width: 100%;
}

.c1 tr:first-child td {
  border-top: none;
}

.c4 {
  border-width: 0.0625rem;
  border-style: solid;
  border-color: rgb(216,216,216);
  border-spacing: 0;
  white-space: nowrap;
  box-sizing: border-box;
  padding: 0 1.5rem;
  height: 3.75rem;
  vertical-align: middle;
  text-align: left;
  border-bottom-width: 0;
}

.c4:not(:first-child) {
  border-left-width: 0;
}

.c4:not(:last-child) {
  border-right-width: 0;
}

.c16 {
  border-width: 0.0625rem;
  border-style: solid;
  border-color: rgb(216,216,216);
  border-spacing: 0;
  white-space: nowrap;
  box-sizing: border-box;
  padding: 0 1.5rem;
  height: 3.75rem;
  width: 0rem;
  display: none;
  vertical-align: middle;
  text-align: left;
  border-bottom-width: 0;
}

.c16:not(:first-child) {
  border-left-width: 0;
}

.c16:not(:last-child) {
  border-right-width: 0;
}

.c17 {
  border-width: 0.0625rem;
  border-style: solid;
  border-color: rgb(216,216,216);
  border-spacing: 0;
  white-space: nowrap;
  box-sizing: border-box;
  padding: 0 1.5rem;
  height: 3.75rem;
  width: 0rem;
  display: none;
  vertical-align: middle;
  text-align: left;
  border-bottom-width: 0;
}

.c17:not(:first-child) {
  border-left-width: 0;
}

.c17:not(:last-child) {
  border-right-width: 0;
}

.c19 {
  border-width: 0.0625rem;
  border-style: solid;
  border-color: rgb(216,216,216);
  border-spacing: 0;
  white-space: nowrap;
  box-sizing: border-box;
  padding: 0 1.5rem;
  height: 3.75rem;
  border-bottom-width: 0;
  border-left-width: 0.0625rem !important;
}

.c19:not(:first-child) {
  border-left-width: 0;
}

.c19:not(:last-child) {
  border-right-width: 0;
}

.c2 {
  display: table-row;
  color: rgba(73,73,73,1);
  background-color: rgb(255,255,255);
  box-shadow: 0 0.125rem 0 rgba(0,0,0,0.05);
  box-sizing: border-box;
}

.c2:last-child {
  box-shadow: none;
}

.c2:last-child td {
  border-bottom-width: 0.0625rem;
}

.c3 {
  padding: 0rem;
  padding-left: 0.75rem;
}

.c18 {
  padding: 0rem;
}

@media only screen and (min-width:47.9375rem) {
  .c16 {
    width: 10rem;
    display: table-cell;
  }
}

@media only screen and (min-width:47.9375rem) {
  .c17 {
    width: 8.125rem;
    display: table-cell;
  }
}

<table
  className="c0"
>
  <tbody
    className="c1"
    disabled={undefined}
    name="tbody"
    selected={undefined}
  >
    <tr
      className="c2"
      disabled={undefined}
      name="tr"
      selected={undefined}
    >
      <td
        className="c3 c4"
        disabled={undefined}
        name="td"
        selected={undefined}
      >
        <div
          className="c5 c6 c7"
          name=""
          role="group"
          style={undefined}
        >
          <li
            className="c8"
          >
            <div
              checked={false}
              className="c9"
              disabled={false}
              id="bc"
              type="checkbox"
            >
              <input
                checked={false}
                className="c10"
                disabled={false}
                id="bd"
                type="checkbox"
              />
              <label
                className="c11"
                htmlFor="bd"
              />
            </div>
            <div
              className="c12"
            />
          </li>
        </div>
      </td>
      <td
        className="c4"
        disabled={undefined}
        name="td"
        selected={undefined}
      >
        <a
          className="c13 c14"
          to="/instances/undefined"
        />
      </td>
      <td
        className="c4"
        disabled={undefined}
        name="td"
        selected={undefined}
      >
        <span>
          <span
            className="c15"
            color="green"
            height="0.6875rem"
            width="0.6875rem"
          />
           
          Running
        </span>
      </td>
      <td
        className="c16"
        disabled={undefined}
        name="td"
        selected={undefined}
      >
        almost NaN years
      </td>
      <td
        className="c17"
        disabled={undefined}
        name="td"
        selected={undefined}
      >
        <code>
          
        </code>
      </td>
      <td
        className="c18 c19"
        disabled={undefined}
        name="td"
        selected={undefined}
      >
        <div
          box={true}
          className="c20"
          onClick={[Function]}
          onMouseEnter={undefined}
          onMouseLeave={undefined}
          tag="div"
        >
          <svg
            className=""
            height="16"
            style={
              Object {
                "transform": "rotate(0deg)",
              }
            }
            viewBox="0 0 4 16"
            width="4"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M2 4a2 2 0 1 0 0-4 2 2 0 0 0 0 4z"
              fill="rgba(73, 73, 73, 1)"
              fill-rule="evenodd"
            />
            <path
              d="M2 4a2 2 0 1 0 0-4 2 2 0 0 0 0 4z"
              fill="rgba(73, 73, 73, 1)"
              fill-rule="evenodd"
              style={
                Object {
                  "transform": "translateY(0.375rem)",
                }
              }
            />
            <path
              d="M2 4a2 2 0 1 0 0-4 2 2 0 0 0 0 4z"
              fill="rgba(73, 73, 73, 1)"
              fill-rule="evenodd"
              style={
                Object {
                  "transform": "translateY(0.75rem)",
                }
              }
            />
          </svg>
        </div>
      </td>
    </tr>
  </tbody>
</table>
`;

exports[`renders <Item mutating /> without throwing 1`] = `
.c14 {
  background-color: transparent;
  text-decoration-skip: objects;
}

.c13 {
  color: rgb(59,70,204);
  -webkit-text-fill-color: currentcolor;
}

.c13:hover {
  text-decoration: none;
}

.c16 {
  fill: rgb(59,70,204);
  stroke: rgb(59,70,204);
  -webkit-animation: iCqDak 1.5s ease-out 0s infinite;
  animation: iCqDak 1.5s ease-out 0s infinite;
}

.c17 {
  fill: rgb(59,70,204);
  stroke: rgb(59,70,204);
  -webkit-animation: iCqDak 1.5s ease-out 0s infinite;
  animation: iCqDak 1.5s ease-out 0s infinite;
  -webkit-animation-delay: 0.5s;
  animation-delay: 0.5s;
}

.c18 {
  fill: rgb(59,70,204);
  stroke: rgb(59,70,204);
  -webkit-animation: iCqDak 1.5s ease-out 0s infinite;
  animation: iCqDak 1.5s ease-out 0s infinite;
  -webkit-animation-delay: 1s;
  animation-delay: 1s;
}

.c15 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-flex-wrap: nowrap;
  -ms-flex-wrap: nowrap;
  flex-wrap: nowrap;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-content: center;
  -ms-flex-line-pack: center;
  align-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-height: 1.25rem;
  -webkit-flex: 1 0 auto;
  -ms-flex: 1 0 auto;
  flex: 1 0 auto;
}

.c10 {
  font-family: sans-serif;
  font-size: 100%;
  line-height: 1.15;
  margin: 0;
  overflow: visible;
  display: none;
}

.c10[type='checkbox'],
.c10[type='radio'] {
  box-sizing: border-box;
  padding: 0;
}

.c10[type='number']::-webkit-inner-spin-button,
.c10[type='number']::-webkit-outer-spin-button {
  height: auto;
}

.c10[type='search'] {
  -webkit-appearance: textfield;
  -moz-appearance: textfield;
  appearance: textfield;
  outline-offset: -0.125rem;
}

.c10[type='search']::-webkit-search-cancel-button,
.c10[type='search']::-webkit-search-decoration {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.c10::-webkit-file-upload-button {
  -webkit-appearance: button;
  -moz-appearance: button;
  appearance: button;
  font: inherit;
}

.c10:checked + label::after {
  opacity: 1;
}

.c10:selected + label::after {
  opacity: 1;
}

.c10:checked + label {
  border-color: rgb(59,70,204);
}

.c10:selected + label {
  border-color: rgb(59,70,204);
}

.c10:disabled + label {
  background-color: rgb(249,249,249);
}

.c11 {
  color: rgb(100,100,100);
  position: absolute;
  width: 1.125rem;
  height: 1.125rem;
  box-sizing: border-box;
  top: 0;
  right: 0;
  cursor: pointer;
  background-color: rgb(255,255,255);
  box-shadow: none;
  border: 0.0625rem solid rgb(216,216,216);
  cursor: pointer;
  border-radius: 0.25rem;
  width: 1.125rem;
  height: 1.125rem;
}

.c11::after {
  opacity: 0;
  content: '';
  position: absolute;
  width: 0.375rem;
  height: 0.125rem;
  background: transparent;
  top: 0.3125rem;
  left: 0.25rem;
  border: 0.125rem solid rgb(45,45,45);
  border-top: none;
  border-right: none;
  -webkit-transform: rotate(-45deg);
  -ms-transform: rotate(-45deg);
  transform: rotate(-45deg);
}

.c9 {
  display: inline-block;
  vertical-align: text-bottom;
  width: 1.125rem;
  height: 1.125rem;
  position: relative;
  cursor: pointer;
}

.c12 {
  margin-bottom: 0.75rem;
  margin-left: 0.75rem;
}

.c8 {
  list-style-type: none;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c8 label {
  font-weight: 400;
}

.c7 {
  display: inline-block;
  margin: 0;
  padding: 0;
  border: none;
  overflow: hidden;
  height: auto;
  -webkit-margin-start: 0;
  -webkit-margin-end: 0;
  -webkit-padding-before: 0;
  -webkit-padding-start: 0;
  -webkit-padding-end: 0;
  -webkit-padding-after: 0;
}

.c6 {
  padding-top: 0.25rem;
}

.c5 {
  padding-top: 0.25rem;
}

.c0 {
  overflow: hidden;
  border-spacing: 0;
  border-collapse: separate;
  table-layout: fixed;
  width: 100%;
  max-width: 100%;
}

.c1 {
  width: 100%;
}

.c1 tr:first-child td {
  border-top: none;
}

.c4 {
  border-width: 0.0625rem;
  border-style: solid;
  border-color: rgb(216,216,216);
  border-spacing: 0;
  white-space: nowrap;
  box-sizing: border-box;
  padding: 0 1.5rem;
  height: 3.75rem;
  vertical-align: middle;
  text-align: left;
  border-bottom-width: 0;
}

.c4:not(:first-child) {
  border-left-width: 0;
}

.c4:not(:last-child) {
  border-right-width: 0;
}

.c19 {
  border-width: 0.0625rem;
  border-style: solid;
  border-color: rgb(216,216,216);
  border-spacing: 0;
  white-space: nowrap;
  box-sizing: border-box;
  padding: 0 1.5rem;
  height: 3.75rem;
  width: 0rem;
  display: none;
  vertical-align: middle;
  text-align: left;
  border-bottom-width: 0;
}

.c19:not(:first-child) {
  border-left-width: 0;
}

.c19:not(:last-child) {
  border-right-width: 0;
}

.c20 {
  border-width: 0.0625rem;
  border-style: solid;
  border-color: rgb(216,216,216);
  border-spacing: 0;
  white-space: nowrap;
  box-sizing: border-box;
  padding: 0 1.5rem;
  height: 3.75rem;
  width: 0rem;
  display: none;
  vertical-align: middle;
  text-align: left;
  border-bottom-width: 0;
}

.c20:not(:first-child) {
  border-left-width: 0;
}

.c20:not(:last-child) {
  border-right-width: 0;
}

.c22 {
  border-width: 0.0625rem;
  border-style: solid;
  border-color: rgb(216,216,216);
  border-spacing: 0;
  white-space: nowrap;
  box-sizing: border-box;
  padding: 0 1.5rem;
  height: 3.75rem;
  vertical-align: middle;
  text-align: center;
  border-bottom-width: 0;
  border-left-width: 0.0625rem !important;
}

.c22:not(:first-child) {
  border-left-width: 0;
}

.c22:not(:last-child) {
  border-right-width: 0;
}

.c2 {
  display: table-row;
  color: rgba(73,73,73,1);
  background-color: rgb(255,255,255);
  box-shadow: 0 0.125rem 0 rgba(0,0,0,0.05);
  box-sizing: border-box;
}

.c2:last-child {
  box-shadow: none;
}

.c2:last-child td {
  border-bottom-width: 0.0625rem;
}

.c3 {
  padding: 0rem;
  padding-left: 0.75rem;
}

.c21 {
  padding: 0rem;
}

@media only screen and (min-width:47.9375rem) {
  .c19 {
    width: 10rem;
    display: table-cell;
  }
}

@media only screen and (min-width:47.9375rem) {
  .c20 {
    width: 8.125rem;
    display: table-cell;
  }
}

<table
  className="c0"
>
  <tbody
    className="c1"
    disabled={undefined}
    name="tbody"
    selected={undefined}
  >
    <tr
      className="c2"
      disabled={undefined}
      name="tr"
      selected={undefined}
    >
      <td
        className="c3 c4"
        disabled={undefined}
        name="td"
        selected={undefined}
      >
        <div
          className="c5 c6 c7"
          name=""
          role="group"
          style={undefined}
        >
          <li
            className="c8"
          >
            <div
              checked={false}
              className="c9"
              disabled={false}
              id="a"
              type="checkbox"
            >
              <input
                checked={false}
                className="c10"
                disabled={false}
                id="bb"
                type="checkbox"
              />
              <label
                className="c11"
                htmlFor="bb"
              />
            </div>
            <div
              className="c12"
            />
          </li>
        </div>
      </td>
      <td
        className="c4"
        disabled={undefined}
        name="td"
        selected={undefined}
      >
        <a
          className="c13 c14"
          to="/instances/undefined"
        />
      </td>
      <td
        className="c4"
        disabled={undefined}
        name="td"
        selected={undefined}
      >
        <div
          className="c15"
        >
          <svg
            height="10"
            width="28"
          >
            <rect
              className="c16"
              height="6"
              width="6"
              x="2"
              y="2"
            />
            <rect
              className="c17"
              height="6"
              width="6"
              x="11"
              y="2"
            />
            <rect
              className="c18"
              height="6"
              width="6"
              x="20"
              y="2"
            />
          </svg>
        </div>
      </td>
      <td
        className="c19"
        disabled={undefined}
        name="td"
        selected={undefined}
      >
        almost NaN years
      </td>
      <td
        className="c20"
        disabled={undefined}
        name="td"
        selected={undefined}
      >
        <code>
          
        </code>
      </td>
      <td
        className="c21 c22"
        disabled={undefined}
        name="td"
        selected={undefined}
      >
        <svg
          className=""
          height="16"
          style={
            Object {
              "transform": "rotate(0deg)",
            }
          }
          viewBox="0 0 4 16"
          width="4"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M2 4a2 2 0 1 0 0-4 2 2 0 0 0 0 4z"
            fill="rgb(216, 216, 216)"
            fill-rule="evenodd"
          />
          <path
            d="M2 4a2 2 0 1 0 0-4 2 2 0 0 0 0 4z"
            fill="rgb(216, 216, 216)"
            fill-rule="evenodd"
            style={
              Object {
                "transform": "translateY(0.375rem)",
              }
            }
          />
          <path
            d="M2 4a2 2 0 1 0 0-4 2 2 0 0 0 0 4z"
            fill="rgb(216, 216, 216)"
            fill-rule="evenodd"
            style={
              Object {
                "transform": "translateY(0.75rem)",
              }
            }
          />
        </svg>
      </td>
    </tr>
  </tbody>
</table>
`;
